<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
  xmlns:local="clr-namespace:Odyssey.Controls">


  <!--<LinearGradientBrush x:Key="mouseOverBtnBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Offset="0" Color="{DynamicResource Gray2}" />
    <GradientStop Offset="0.5" Color="{DynamicResource Gray3}" />
    <GradientStop Offset="0.5" Color="{DynamicResource Gray3}" />
    <GradientStop Offset="1" Color="{DynamicResource Gray2}" />
  </LinearGradientBrush>-->

  <LinearGradientBrush x:Key="GradientBorderBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Offset="0" Color="{DynamicResource Gray8}" />
    <GradientStop Offset="1" Color="{DynamicResource Gray8}" />
  </LinearGradientBrush>

  <BooleanToVisibilityConverter x:Key="boolToVisible" />
  <ImageSourceConverter x:Key="imgConverter" />

  <Geometry x:Key="RightArrow">M0,0 L5,3.5 0,7 z</Geometry>
  <Geometry x:Key="DownArrow">M0,3 L7,3 3.5,7 z</Geometry>
  <Geometry x:Key="OverflowArrow">F1 M7,0 L4,3 7,6 M3,0 L0,3 3,6</Geometry>

  <!--  DropDownButtonTemplate  -->
  <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="{x:Type ToggleButton}">
    <local:AeroChrome
      x:Name="chrome"
      BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabItem.BorderBrush}"
      BorderThickness="1"
      Focusable="False"
      RenderMouseOver="{TemplateBinding IsMouseOver}"
      RenderPressed="{TemplateBinding IsPressed}"
      SnapsToDevicePixels="True">
      <local:AeroChrome.Content>
        <Path
          x:Name="arrow"
          HorizontalAlignment="Center"
          VerticalAlignment="Center"
          Data="{StaticResource DownArrow}"
          Fill="{DynamicResource Fluent.Ribbon.Brushes.LabelTextBrush}"
          Focusable="False"
          SnapsToDevicePixels="True" />
      </local:AeroChrome.Content>
    </local:AeroChrome>
    <ControlTemplate.Triggers>
      <Trigger Property="IsFocused" Value="True">
        <Setter TargetName="chrome" Property="RenderMouseOver" Value="True" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <!--  ButtonTemplate  -->
  <ControlTemplate x:Key="ButtonTemplate" TargetType="{x:Type Button}">
    <Border
      Margin="-1,-1,0,-1"
      Background="Transparent"
      BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabItem.BorderBrush}"
      BorderThickness="1"
      Focusable="False"
      SnapsToDevicePixels="True">
      <local:AeroChrome
        x:Name="chrome"
        Margin="-1"
        BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabItem.BorderBrush}"
        BorderThickness="1"
        Content="{TemplateBinding Content}"
        Focusable="False"
        RenderMouseOver="{TemplateBinding IsMouseOver}"
        RenderPressed="{TemplateBinding IsPressed}"
        SnapsToDevicePixels="True" />
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="IsFocused" Value="True">
        <Setter TargetName="chrome" Property="RenderMouseOver" Value="True" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <!--  BreadcrumbItem  -->
  <Style TargetType="{x:Type local:BreadcrumbItem}">
    <Setter Property="Focusable" Value="False" />
    <Setter Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabItem.BorderBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:BreadcrumbItem}">
          <Border
            Background="Transparent"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Focusable="False">
            <DockPanel>
              <local:BreadcrumbButton
                x:Name="PART_Header"
                DataContext="{Binding}"
                Header="{TemplateBinding Header}"
                Image="{TemplateBinding Image}"
                IsButtonVisible="{TemplateBinding IsButtonVisible}"
                IsDropDownPressed="{Binding IsDropDownPressed, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                IsImageVisible="{TemplateBinding IsRoot}"
                ItemTemplate="{TemplateBinding OverflowItemTemplate}"
                ItemTemplateSelector="{TemplateBinding OverflowItemTemplateSelector}"
                ItemsSource="{Binding Items, RelativeSource={RelativeSource TemplatedParent}}"
                SelectedItem="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
              <ContentControl
                x:Name="PART_Selected"
                Content="{TemplateBinding SelectedBreadcrumb}"
                Focusable="False" />
            </DockPanel>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsRoot" Value="True">
              <Setter TargetName="PART_Header" Property="EnableVisualButtonStyle" Value="False" />
            </Trigger>

          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--<ControlTemplate x:Key="progressBarTemplate" TargetType="ProgressBar"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:s="clr-namespace:System;assembly=mscorlib">
    <Grid Name="Background" SnapsToDevicePixels="True">
      <Rectangle Name="PART_Track" Margin="1,1,1,1" />
      <Decorator Name="PART_Indicator" Margin="1,1,1,1" HorizontalAlignment="Left">
        <Grid Name="Foreground">
          <Grid.ColumnDefinitions>
            <ColumnDefinition MaxWidth="15" />
            <ColumnDefinition Width="0.1*" />
            <ColumnDefinition MaxWidth="15" />
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition />
          </Grid.RowDefinitions>
          <Rectangle Fill="{TemplateBinding TextElement.Foreground}" Name="Indicator" Grid.ColumnSpan="3" Grid.RowSpan="2" />
          <Rectangle Fill="{TemplateBinding TextElement.Foreground}" Name="Animation" OpacityMask="{x:Null}" Grid.ColumnSpan="3" Grid.RowSpan="2" />
          <Rectangle Name="LeftDark" Margin="1,1,0,1" Grid.RowSpan="2">
            <Rectangle.Fill>
              <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                <LinearGradientBrush.GradientStops>
                  <GradientStop Color="#0C000000" Offset="0" />
                  <GradientStop Color="#20000000" Offset="0.3" />
                  <GradientStop Color="#00000000" Offset="1" />
                </LinearGradientBrush.GradientStops>
              </LinearGradientBrush>
            </Rectangle.Fill>
          </Rectangle>
          <Rectangle RadiusX="1" RadiusY="1" Name="RightDark" Margin="0,1,1,1" Grid.Column="2" Grid.RowSpan="2">
            <Rectangle.Fill>
              <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                <LinearGradientBrush.GradientStops>
                  <GradientStop Color="#00000000" Offset="0" />
                  <GradientStop Color="#20000000" Offset="0.7" />
                  <GradientStop Color="#0C000000" Offset="1" />
                </LinearGradientBrush.GradientStops>
              </LinearGradientBrush>
            </Rectangle.Fill>
          </Rectangle>
          <Rectangle Name="LeftLight" Grid.Column="0" Grid.Row="2">
            <Rectangle.Fill>
              <RadialGradientBrush RadiusX="1" RadiusY="1" RelativeTransform="1,0,0,1,0.5,0.5">
                <RadialGradientBrush.GradientStops>
                  <GradientStop Color="#60FFFFC4" Offset="0" />
                  <GradientStop Color="#00FFFFC4" Offset="1" />
                </RadialGradientBrush.GradientStops>
              </RadialGradientBrush>
            </Rectangle.Fill>
          </Rectangle>
          <Rectangle Name="CenterLight" Grid.Column="1" Grid.Row="2">
            <Rectangle.Fill>
              <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                <LinearGradientBrush.GradientStops>
                  <GradientStop Color="#60FFFFC4" Offset="0" />
                  <GradientStop Color="#00FFFFC4" Offset="1" />
                </LinearGradientBrush.GradientStops>
              </LinearGradientBrush>
            </Rectangle.Fill>
          </Rectangle>
          <Rectangle Name="RightLight" Grid.Column="2" Grid.Row="2">
            <Rectangle.Fill>
              <RadialGradientBrush RadiusX="1" RadiusY="1" RelativeTransform="1,0,0,1,-0.5,0.5">
                <RadialGradientBrush.GradientStops>
                  <GradientStop Color="#60FFFFC4" Offset="0" />
                  <GradientStop Color="#00FFFFC4" Offset="1" />
                </RadialGradientBrush.GradientStops>
              </RadialGradientBrush>
            </Rectangle.Fill>
          </Rectangle>
          <Border Name="Highlight1" Grid.ColumnSpan="3" Grid.RowSpan="2">
            <Border.Background>
              <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                <LinearGradientBrush.GradientStops>
                  <GradientStop Color="#90FFFFFF" Offset="0.5385" />
                  <GradientStop Color="#00FFFFFF" Offset="0.5385" />
                </LinearGradientBrush.GradientStops>
              </LinearGradientBrush>
            </Border.Background>
          </Border>
          <Border Name="Highlight2" Grid.ColumnSpan="3" Grid.RowSpan="2">
            <Border.Background>
              <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                <LinearGradientBrush.GradientStops>
                  <GradientStop Color="#80FFFFFF" Offset="0.05" />
                  <GradientStop Color="#00FFFFFF" Offset="0.25" />
                </LinearGradientBrush.GradientStops>
              </LinearGradientBrush>
            </Border.Background>
          </Border>
        </Grid>
      </Decorator>
      <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" />
    </Grid>
  </ControlTemplate>-->


  <!--  BreadcrumbBar  -->
  <Style TargetType="{x:Type local:BreadcrumbBar}">
    <Setter Property="MinHeight" Value="23" />
    <Setter Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabControl.Content.Background}" />
    <Setter Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabItem.BorderBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:BreadcrumbBar}">
          <ControlTemplate.Resources>
            <Style TargetType="{x:Type Button}">
              <Setter Property="Template" Value="{StaticResource ButtonTemplate}" />
              <Setter Property="MinWidth" Value="21" />
              <Setter Property="BorderThickness" Value="1" />
              <Setter Property="FocusVisualStyle" Value="{x:Null}" />
              <Setter Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabItem.BorderBrush}" />
              <Setter Property="Focusable" Value="{Binding Focusable, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:BreadcrumbBar}}}" />
            </Style>
            <Style TargetType="{x:Type local:BreadcrumbButton}">
              <Setter Property="Focusable" Value="{Binding Focusable, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:BreadcrumbBar}}}" />
            </Style>
          </ControlTemplate.Resources>
          <Border
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Focusable="False"
            SnapsToDevicePixels="True">
            <Border
              BorderBrush="{TemplateBinding Background}"
              BorderThickness="{TemplateBinding BorderThickness}"
              Focusable="False"
              SnapsToDevicePixels="True">
              <Grid Margin="-1">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ProgressBar
                  x:Name="progress"
                  Grid.Column="0"
                  Grid.ColumnSpan="4"
                  Background="Transparent"
                  BorderThickness="0"
                  Foreground="LightGreen"
                  Maximum="{Binding ProgressMaximum, RelativeSource={RelativeSource TemplatedParent}}"
                  Minimum="{Binding ProgressMinimum, RelativeSource={RelativeSource TemplatedParent}}"
                  Value="{Binding ProgressValue, RelativeSource={RelativeSource TemplatedParent}}" />

                <local:BreadcrumbButton
                  x:Name="PART_Root"
                  Grid.Column="0"
                  MinWidth="0"
                  EnableVisualButtonStyle="False"
                  Image="{Binding SelectedBreadcrumb.Image, RelativeSource={RelativeSource TemplatedParent}}"
                  IsDropDownPressed="{Binding IsOverflowPressed, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                  IsImageVisible="True"
                  ItemTemplate="{TemplateBinding OverflowItemTemplate}"
                  ItemTemplateSelector="{TemplateBinding OverflowItemTemplateSelector}"
                  ItemsSource="{TemplateBinding CollapsedTraces}"
                  Mode="{TemplateBinding OverflowMode}"
                  SelectedItem="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
                <ContentPresenter
                  x:Name="container"
                  Grid.Column="1"
                  Content="{Binding RootItem, RelativeSource={RelativeSource TemplatedParent}}" />
                <ToggleButton
                  x:Name="dropDown"
                  Grid.Column="2"
                  Width="16"
                  Margin="-1"
                  BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabItem.BorderBrush}"
                  BorderThickness="1"
                  ClickMode="Press"
                  FocusVisualStyle="{x:Null}"
                  Focusable="False"
                  IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                  Template="{StaticResource DropDownButtonTemplate}"
                  Visibility="Collapsed" />
                <ComboBox
                  x:Name="PART_ComboBox"
                  Grid.Column="0"
                  Grid.ColumnSpan="3"
                  Margin="0,0,0,0"
                  BorderThickness="0"
                  Focusable="True"
                  IsEditable="True"
                  ItemTemplate="{TemplateBinding DropDownItemTemplate}"
                  ItemTemplateSelector="{TemplateBinding DropDownItemTemplateSelector}"
                  ItemsSource="{Binding DropDownItems, RelativeSource={RelativeSource TemplatedParent}}"
                  SelectedIndex="{Binding SelectedDropDownIndex, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                  Visibility="Hidden" />
                <ItemsControl
                  x:Name="buttons"
                  Grid.Column="3"
                  Margin="1,0,-1,0"
                  Focusable="False"
                  Foreground="Aqua"
                  ItemsSource="{Binding Buttons, RelativeSource={RelativeSource TemplatedParent}}">
                  <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                      <StackPanel IsItemsHost="True" Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                  </ItemsControl.ItemsPanel>
                </ItemsControl>
              </Grid>
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger SourceName="PART_ComboBox" Property="Visibility" Value="Visible">
              <!--  hide the breadcrumb container and root button  if the combobox is visible, otherwise a breadcrumb button could get the focus on mouseover:  -->
              <Setter TargetName="container" Property="Visibility" Value="Hidden" />
              <Setter TargetName="PART_Root" Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="IsRootSelected" Value="True">
              <Setter TargetName="PART_Root" Property="Visibility" Value="Collapsed" />
            </Trigger>

            <Trigger Property="HasDropDownItems" Value="True">
              <Setter TargetName="dropDown" Property="Visibility" Value="Visible" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  BreadcrumbButton  -->
  <Style TargetType="{x:Type local:BreadcrumbButton}">
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Background}" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.LabelTextBrush}" />
    <Setter Property="Template">

      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:BreadcrumbButton}">
          <Grid Margin="{TemplateBinding Padding}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <local:AeroChrome
              x:Name="button"
              Grid.Column="0"
              Margin="-1"
              BorderThickness="1"
              Focusable="False"
              RenderMouseOver="{TemplateBinding IsMouseOver}"
              RenderPressed="{TemplateBinding IsPressed}"
              Visibility="Visible">
              <local:AeroChrome.Content>
                <StackPanel Orientation="Horizontal">
                  <Image
                    x:Name="image"
                    Width="16"
                    Height="16"
                    Source="{Binding Image, RelativeSource={RelativeSource TemplatedParent}}"
                    Stretch="Fill" />
                  <ContentPresenter
                    Margin="2,0,2,0"
                    Content="{TemplateBinding Header}"
                    ContentTemplate="{TemplateBinding HeaderTemplate}" />
                </StackPanel>
              </local:AeroChrome.Content>
            </local:AeroChrome>

            <!--  Content="{TemplateBinding Header}"/>  -->
            <local:AeroChrome
              x:Name="PART_DropDown"
              Grid.Column="1"
              MinWidth="16"
              Margin="-1"
              BorderThickness="1"
              ContentTemplate="{TemplateBinding DropDownContentTemplate}"
              Focusable="False"
              RenderMouseOver="{TemplateBinding IsMouseOver}"
              RenderPressed="{TemplateBinding IsDropDownPressed}">
              <local:AeroChrome.Content>
                <Path
                  x:Name="dropDownPath"
                  HorizontalAlignment="Center"
                  Data="{StaticResource RightArrow}"
                  Fill="{DynamicResource Fluent.Ribbon.Brushes.LabelTextBrush}"
                  SnapsToDevicePixels="True" />
              </local:AeroChrome.Content>
              <local:AeroChrome.ContextMenu>
                <ContextMenu
                  x:Name="PART_Menu"
                  HorizontalOffset="-14"
                  IsOpen="{Binding IsDropDownPressed, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                  IsTextSearchEnabled="True"
                  ItemContainerStyle="{x:Null}">
                  <ContextMenu.Template>
                    <ControlTemplate
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                      xmlns:s="clr-namespace:System;assembly=mscorlib"
                      TargetType="ContextMenu">
                      <mwt:SystemDropShadowChrome
                        Name="Shdw"
                        MaxHeight="400"
                        SnapsToDevicePixels="True"
                        Color="#00FFFFFF">
                        <Border
                          Background="{TemplateBinding Panel.Background}"
                          BorderBrush="{TemplateBinding Border.BorderBrush}"
                          BorderThickness="{TemplateBinding Border.BorderThickness}">
                          <Grid>
                            <Rectangle
                              Width="22"
                              Margin="2,2,2,2"
                              HorizontalAlignment="Left"
                              Fill="#FFF1F1F1"
                              RadiusX="2"
                              RadiusY="2" />
                            <Rectangle
                              Width="1"
                              Margin="25,2,0,2"
                              HorizontalAlignment="Left"
                              Fill="#FFE2E3E3" />
                            <Rectangle
                              Width="1"
                              Margin="26,2,0,2"
                              HorizontalAlignment="Left"
                              Fill="#FFFFFFFF" />
                            <ScrollViewer
                              Grid.ColumnSpan="2"
                              Margin="1,0,1,0"
                              CanContentScroll="True"
                              VerticalScrollBarVisibility="Auto">
                              <ItemsPresenter
                                Margin="{TemplateBinding Control.Padding}"
                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                            </ScrollViewer>
                          </Grid>
                        </Border>
                      </mwt:SystemDropShadowChrome>
                      <ControlTemplate.Triggers>
                        <Trigger Property="ContextMenuService.HasDropShadow">
                          <Setter TargetName="Shdw" Property="FrameworkElement.Margin">
                            <Setter.Value>
                              <Thickness>0,0,5,5</Thickness>
                            </Setter.Value>
                          </Setter>
                          <Setter TargetName="Shdw" Property="mwt:SystemDropShadowChrome.Color">
                            <Setter.Value>
                              <Color>#71000000</Color>
                            </Setter.Value>
                          </Setter>
                          <Trigger.Value>
                            <s:Boolean>True</s:Boolean>
                          </Trigger.Value>
                        </Trigger>
                      </ControlTemplate.Triggers>
                    </ControlTemplate>
                  </ContextMenu.Template>
                </ContextMenu>
              </local:AeroChrome.ContextMenu>
            </local:AeroChrome>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsImageVisible" Value="False">
              <Setter TargetName="image" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="Image" Value="{x:Null}">
              <Setter TargetName="image" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="EnableVisualButtonStyle" Value="False">
              <Setter TargetName="button" Property="MouseOverBackground" Value="Transparent" />
              <Setter TargetName="button" Property="MousePressedBackground" Value="Transparent" />
              <Setter TargetName="button" Property="BorderBrush" Value="Transparent" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="Header" Value="{x:Null}" />
                <Condition Property="IsImageVisible" Value="False" />
                <Condition Property="Image" Value="{x:Null}" />
              </MultiTrigger.Conditions>
              <Setter TargetName="button" Property="Visibility" Value="Collapsed" />
            </MultiTrigger>
            <Trigger Property="HasItems" Value="False">
              <Setter TargetName="PART_DropDown" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="Mode" Value="Overflow">
              <Setter TargetName="dropDownPath" Property="Data" Value="{StaticResource OverflowArrow}" />
              <Setter TargetName="dropDownPath" Property="Fill" Value="Transparent" />
              <Setter TargetName="dropDownPath" Property="Stroke" Value="{DynamicResource Fluent.Ribbon.Brushes.LabelTextBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="PART_DropDown" Property="RenderPressed" Value="True" />
              <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.LabelTextBrush}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
              <Setter TargetName="PART_DropDown" Property="RenderMouseOver" Value="True" />
              <Setter TargetName="button" Property="RenderMouseOver" Value="True" />
            </Trigger>
            <Trigger Property="IsDropDownVisible" Value="False">
              <Setter TargetName="PART_DropDown" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.LabelTextBrush}" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition SourceName="PART_DropDown" Property="IsMouseOver" Value="True" />
                <Condition Property="EnableVisualButtonStyle" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="button" Property="MouseOverBackground" Value="{DynamicResource DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Background}" />
              <Setter TargetName="button" Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.LabelTextBrush}" />
            </MultiTrigger>
            <Trigger Property="IsButtonVisible" Value="False">
              <Setter TargetName="button" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsDropDownPressed" Value="True" />
                <Condition Property="Mode" Value="Breadcrumb" />
              </MultiTrigger.Conditions>
              <Setter TargetName="dropDownPath" Property="Data" Value="{StaticResource DownArrow}" />
              <Setter TargetName="button" Property="RenderPressed" Value="True" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type local:AeroChrome}">
    <Setter Property="MouseOverBackground" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Background}" />
    <Setter Property="MousePressedBackground" Value="{DynamicResource GrayBrush7}" />
    <Setter Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabItem.BorderBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:AeroChrome}">
          <Grid Margin="{TemplateBinding Padding}">
            <Border
              x:Name="mouseOverBtn"
              Background="{TemplateBinding MouseOverBackground}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              Opacity="0"
              SnapsToDevicePixels="True">
              <Border
                x:Name="innerButton"
                BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabItem.BorderBrush}"
                BorderThickness="0"
                SnapsToDevicePixels="True" />
            </Border>
            <Border
              x:Name="mouseDownBtn"
              Background="{TemplateBinding MousePressedBackground}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              Opacity="0"
              SnapsToDevicePixels="True">
              <Border
                x:Name="innerButton2"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="1.2,1.2,0,0"
                SnapsToDevicePixels="False" />
            </Border>
            <ContentPresenter
              x:Name="content"
              Margin="4,2,4,2"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              Content="{TemplateBinding Content}"
              ContentTemplate="{TemplateBinding ContentTemplate}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="RenderMouseOver" Value="True">
              <Setter TargetName="mouseOverBtn" Property="Opacity" Value="1" />
              <!--<Trigger.EnterActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation
                      Storyboard.TargetName="mouseOverBtn"
                      Storyboard.TargetProperty="Opacity"
                      To="1"
                      Duration="0:0:0.25" />
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation
                      Storyboard.TargetName="mouseOverBtn"
                      Storyboard.TargetProperty="Opacity"
                      To="0"
                      Duration="0:0:0.25" />
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.ExitActions>-->

            </Trigger>
            <Trigger Property="RenderPressed" Value="True">
              <Setter TargetName="mouseDownBtn" Property="Opacity" Value="1" />
              <Setter TargetName="content" Property="Margin" Value="5,3,3,1" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>
