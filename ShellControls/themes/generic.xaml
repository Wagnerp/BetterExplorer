<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:shellContextMenu="clr-namespace:ShellControls.ShellContextMenu"
  xmlns:betterExplorerControls="clr-namespace:BetterExplorerControls;assembly=BetterExplorerControls"
  xmlns:shellControls="clr-namespace:ShellControls"
  xmlns:wpfui="clr-namespace:WPFUI.Controls;assembly=WPFUI"
  xmlns:converters="clr-namespace:WPFUI.Converters;assembly=WPFUI"
  xmlns:breadcrumbBar="clr-namespace:ShellControls.BreadcrumbBar">

  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/ShellControls;Component/Themes/AcrylicContextMenu.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <shellContextMenu:Base64ImageConverter x:Key="Base64ImageConverter"/>
  <converters:IconToStringConverter x:Key="IconToStringConverter" />
  <shellControls:TabIndexConverter x:Key="TabIndexConverter" />

  <Style TargetType="ListBoxItem">
    <!-- override the default template to remove the default styling on the IsSelected property -->
    <Setter Property="Foreground" Value="{DynamicResource TextFillColorTertiaryBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBoxItem}">
          <Border x:Name="border" BorderBrush="Transparent" BorderThickness="1">
            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="true">
              <Setter Property="BorderBrush" TargetName="border">
                <Setter.Value>
                  <SolidColorBrush Color="Black"/>
                </Setter.Value>
              </Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type shellContextMenu:BaseCommandsPanel}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type shellContextMenu:BaseCommandsPanel}">
          <Grid Background="Transparent">
            <StackPanel Orientation="Horizontal" Margin="6,5,6,5" VerticalAlignment="Center">
              <betterExplorerControls:FontIconButton x:Name="PART_ButtonCut" Margin="0,0,5,0" BaseIconGlyph="&#xF03D;" OverlayIconGlyph="&#xF03E;"/>
              <betterExplorerControls:FontIconButton x:Name="PART_ButtonCopy" Margin="0,0,5,0" BaseIconGlyph="&#xF021;" OverlayIconGlyph="&#xF022;"/>
              <betterExplorerControls:FontIconButton x:Name="PART_ButtonPaste" Margin="0,0,5,0" BaseIconGlyph="&#xF023;" OverlayIconGlyph="&#xF024;"/>
              <betterExplorerControls:FontIconButton x:Name="PART_ButtonRename" Margin="0,0,5,0" BaseIconGlyph="&#xF027;" OverlayIconGlyph="&#xF028;"/>
              <betterExplorerControls:FontIconButton x:Name="PART_ButtonShare" Margin="0,0,5,0" BaseIconGlyph="&#xF025;" OverlayIconGlyph="&#xF026;"/>
              <betterExplorerControls:FontIconButton x:Name="PART_ButtonDelete" Margin="0,0,5,0" BaseIconGlyph="&#xF035;" OverlayIconGlyph="&#xF036;"/>
              <betterExplorerControls:FontIconButton x:Name="PART_ButtonProperties" BaseIconGlyph="&#xF031;" OverlayIconGlyph="&#xF032;"/>
            </StackPanel>
          </Grid>

        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type shellContextMenu:Win32ContextMenuItem}">
    <Setter Property="UseLayoutRounding" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type shellContextMenu:Win32ContextMenuItem}">
          <Grid Background="Transparent">
            <Border x:Name="PART_Border" CornerRadius="4">
              <Grid Margin="5">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="{Binding Path=IconSpace, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type shellContextMenu:AcrylicShellContextMenu}}}"/>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Image x:Name="PART_IconBase" Width="16" Height="16" Source="{Binding Icon}" HorizontalAlignment="Right" RenderOptions.BitmapScalingMode="Fant" RenderOptions.EdgeMode="Aliased" Stretch="None" Visibility="Collapsed" Margin="0,0,2,0"/>
                <TextBlock x:Name="PART_Glyph" Margin="2,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Right" FontFamily="{DynamicResource FluentSystemIcons}" FontSize="20" Text="{TemplateBinding Glyph, Converter={StaticResource IconToStringConverter}}" Visibility="Visible" Foreground="WhiteSmoke"/>
                <Border VerticalAlignment="Center" Width="6" Height="6" x:Name="PART_Checked" CornerRadius="3" Visibility="Collapsed" Margin="0,1.5,0,0">
                  <Border.Background>
                    <SolidColorBrush Color="{DynamicResource TextFillColorSecondary}"/>
                  </Border.Background>
                </Border>
                <TextBlock x:Name="PART_Label" Grid.Column="1" Foreground="WhiteSmoke" Text="{Binding Label}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="12,0,5,0" FontSize="14"/>
                <Path x:Name="PART_SubmenuArrow" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10,0,0,0" Fill="WhiteSmoke" Data="M 4 14 L 5 14 L 12 8 L 6 2 L 5 2 L 11 8 Z" Visibility="Collapsed"/>
              </Grid>
            </Border>
            <Border x:Name="PART_Separator" BorderThickness="0,1,0,0" Height="1" BorderBrush="#46808080"  HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Visibility="Collapsed"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="Glyph" Value="Empty">
              <Setter TargetName="PART_IconBase" Property="Visibility" Value="Visible" />
              <Setter TargetName="PART_Glyph" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
              <Setter TargetName="PART_IconBase" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="PART_Checked" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="PART_Border" Property="Background" Value="#66434242" />
            </Trigger>
            <Trigger Property="IsChildMenuOpened" Value="True">
              <Setter TargetName="PART_Border" Property="Background" Value="#66434242" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="PART_Border" Property="Background" Value="#66434242" />
            </Trigger>
            <DataTrigger Binding="{Binding IsSubMenu}" Value="True">
              <Setter TargetName="PART_SubmenuArrow" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsSeparator}" Value="True">
              <Setter TargetName="PART_Border" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="PART_Separator" Property="Visibility" Value="Visible" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type shellControls:ShellTabItem}">
    <Setter Property="Background">
      <Setter.Value>
        <SolidColorBrush Opacity="0.0" Color="{DynamicResource ControlFillColorDefault}" />
      </Setter.Value>
    </Setter>
    <Setter Property="BorderBrush" Value="{DynamicResource ControlElevationBorderBrush}" />

    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="MinWidth" Value="{Binding Path=TabItemMinWidth, RelativeSource={RelativeSource AncestorType={x:Type wpfui:TabControl}}}"></Setter>
    <Setter Property="Width" Value="Auto"/>
    <Setter Property="AllowDrop" Value="True" />
    <!--<Setter Property="OverridesDefaultStyle" Value="True" />-->
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type shellControls:ShellTabItem}">
          <Grid x:Name="Root" Margin="0">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="1.5"/>
            </Grid.ColumnDefinitions>
            <Border x:Name="brSeparator" Grid.Column="1" Width="1.5" BorderThickness="1" CornerRadius="0.75" HorizontalAlignment="Center" Margin="0,8,0,8">
              <Border.BorderBrush>
                <SolidColorBrush Opacity="0.0" Color="{DynamicResource ControlFillColorDefault}" />
              </Border.BorderBrush>
            </Border>
            <Border x:Name="tabBorder" Grid.Column="0"
                    MinHeight="36"
                    Margin="1,0,1,0"
                    Padding="6"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="0.5"
                    CornerRadius="4" WindowChrome.IsHitTestVisibleInChrome="True">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="8"/>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="8"/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Image x:Name="PART_Icon" Grid.Column="0" Source="{TemplateBinding Icon}" Margin="6,0,0,0" />
                <shellControls:Spinner x:Name="PART_Spinner" Grid.Column="0" Margin="6,0,0,0" Width="24" Height="24" Visibility="Collapsed" IsWorking="{TemplateBinding IsBusy}" />
                <ContentPresenter Grid.Column="2"
                              x:Name="ContentSite"
                              Margin="0"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Center"
                              ContentSource="Header"
                              RecognizesAccessKey="True" />
                <wpfui:Button Grid.Column="4" HorizontalAlignment="Center" VerticalAlignment="Center" Icon="Dismiss12" x:Name="PART_TabCloseButton">
                  <wpfui:Button.Template>
                    <ControlTemplate TargetType="{x:Type wpfui:Button}">
                      <Border
                        x:Name="Border"
                        Padding="6"
                        Background="Transparent"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0"
                        CornerRadius="4">
                        <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                          <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                          </Grid.ColumnDefinitions>
                          <wpfui:Icon
                                x:Name="ButtonIcon"
                                Grid.Column="0"
                                Margin="0"
                                Filled="{TemplateBinding IconFilled}"
                                FontSize="{TemplateBinding FontSize}"
                                FontWeight="{TemplateBinding FontWeight}"
                                Foreground="{TemplateBinding Foreground}"
                                Glyph="{TemplateBinding Icon}" />
                          <ContentPresenter
                                x:Name="Presenter"
                                Margin="0"
                                Grid.Column="1"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center" />
                        </Grid>
                      </Border>
                      <ControlTemplate.Triggers>
                        <Trigger Property="Icon" Value="Empty">
                          <Setter TargetName="ButtonIcon" Property="Margin" Value="0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                          <Setter TargetName="Border" Property="Opacity" Value="0.8" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                          <Setter TargetName="Border" Property="Background">
                            <Setter.Value>
                              <SolidColorBrush Color="{DynamicResource ControlFillColorDefault}" />
                            </Setter.Value>
                          </Setter>
                          <Setter TargetName="Border" Property="BorderBrush" Value="{Binding HoverBorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                      </ControlTemplate.Triggers>
                    </ControlTemplate>
                  </wpfui:Button.Template>
                </wpfui:Button>
              </Grid>

            </Border>

            <!--<VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="SelectionStates">
                <VisualState x:Name="Unselected" />
                <VisualState x:Name="Selected">
                  <Storyboard>
                    <DoubleAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Opacity)"
                                            From="0.0"
                                            To="1.0"
                                            Duration="0:0:.16" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Opacity)"
                                            From="0.0"
                                            To="0.5"
                                            Duration="0:0:.16" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>-->
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsBusy" Value="True">
              <Setter TargetName="PART_Icon" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="PART_Spinner" Property="Visibility" Value="Visible" />
            </Trigger>
            <DataTrigger Binding="{Binding Converter={StaticResource TabIndexConverter}, RelativeSource={RelativeSource Self}}" Value="Last">
              <Setter TargetName="brSeparator" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <Trigger Property="IsSelected" Value="True">
              <Setter Property="Panel.ZIndex" Value="100" />
              <Setter TargetName="tabBorder" Property="BorderThickness" Value="1"></Setter>
              <Setter TargetName="brSeparator" Property="Visibility" Value="Collapsed"/>
              <Trigger.EnterActions>
                <BeginStoryboard x:Name="sbIsSelected">
                  <Storyboard>
                    <DoubleAnimation
                      Storyboard.TargetName="tabBorder"
                      Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Opacity)"
                      From="0.0"
                      To="0.7"
                      Duration="0:0:.16" />
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <RemoveStoryboard BeginStoryboardName="sbIsSelected"/>
              </Trigger.ExitActions>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="False" />
                <Condition Property="IsMouseOver" Value="True" />
              </MultiTrigger.Conditions>
              <MultiTrigger.Setters>
                <Setter TargetName="brSeparator" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="tabBorder" Property="Background">
                  <Setter.Value>
                    <SolidColorBrush Opacity="0.0" Color="{DynamicResource ControlFillColorDefault}" />
                  </Setter.Value>
                </Setter>
              </MultiTrigger.Setters>
              <MultiTrigger.EnterActions>
                <BeginStoryboard x:Name="sbNotIsSelectedHover">
                  <Storyboard>
                    <DoubleAnimation
                      Storyboard.TargetName="tabBorder"
                      Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Opacity)"
                      From="0.0"
                      To="0.7"
                      Duration="0:0:.16" />
                  </Storyboard>
                </BeginStoryboard>
              </MultiTrigger.EnterActions>
              <MultiTrigger.ExitActions>
                <RemoveStoryboard BeginStoryboardName="sbNotIsSelectedHover"/>
              </MultiTrigger.ExitActions>
            </MultiTrigger>
            <!--<MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="False" />
                <Condition Property="IsMouseOver" Value="False" />
              </MultiTrigger.Conditions>
              <MultiTrigger.EnterActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation
                      Storyboard.TargetName="Border"
                      Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Opacity)"
                      From="1.0"
                      To="0.0"
                      Duration="0:0:.16" />
                    </Storyboard>
                </BeginStoryboard>
              </MultiTrigger.EnterActions>
            </MultiTrigger>-->
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type shellControls:ToolbarGroup}">
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type shellControls:ToolbarGroup}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Separator x:Name="PART_Separator" Margin="0,5,0,5" />
            <Border Grid.Column="1" BorderThickness="0,0,0,0" BorderBrush="{DynamicResource ControlElevationBorderBrush}" CornerRadius="4" Padding="0">
              <Grid Margin="0">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Border Grid.Column="0" Grid.ColumnSpan="2" CornerRadius="0.5" Height="1" Background="{TemplateBinding GroupColor}" Opacity="1" Margin="15,30,12,0" Visibility="Collapsed"/>
                <Border x:Name="PART_ColorIdentifier" Grid.Column="0" CornerRadius="2" Width="4" Margin="10,14,0,14"  Background="{TemplateBinding GroupColor}"/>
                <ContentPresenter Grid.Column="1" Content="{TemplateBinding Content}" Margin="5,0,0,0"/>
              </Grid>
            </Border>
            <!--<Border x:Name="PART_ColorIdentifier" Grid.Column="1" Grid.Row="1" CornerRadius="1" Height="2" Margin="0,-18,0,0"  Background="{TemplateBinding GroupColor}"/>-->
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="GroupColor" Value="Transparent">
              <Setter TargetName="PART_ColorIdentifier" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="HaveSeparator" Value="False">
              <Setter TargetName="PART_Separator" Property="Visibility" Value="Collapsed" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <LinearGradientBrush x:Key="GradientBorderBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Offset="0" Color="{DynamicResource Gray8}" />
    <GradientStop Offset="1" Color="{DynamicResource Gray8}" />
  </LinearGradientBrush>

  <BooleanToVisibilityConverter x:Key="boolToVisible" />
  <ImageSourceConverter x:Key="imgConverter" />

  <Geometry x:Key="RightArrow">M0,0 L5,3.5 0,7 z</Geometry>
  <Geometry x:Key="DownArrow">M0,3 L7,3 3.5,7 z</Geometry>
  <Geometry x:Key="OverflowArrow">F1 M7,0 L4,3 7,6 M3,0 L0,3 3,6</Geometry>

  <!--  DropDownButtonTemplate  -->
  <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="{x:Type ToggleButton}">
    <breadcrumbBar:AeroChrome
      x:Name="chrome"
      BorderBrush="{DynamicResource ControlElevationBorderBrush}"
      BorderThickness="1"
      Focusable="False"
      RenderMouseOver="{TemplateBinding IsMouseOver}"
      RenderPressed="{TemplateBinding IsPressed}"
      SnapsToDevicePixels="True">
      <breadcrumbBar:AeroChrome.Content>
        <Path
          x:Name="arrow"
          HorizontalAlignment="Center"
          VerticalAlignment="Center"
          Data="{StaticResource DownArrow}"
          Fill="{DynamicResource TextFillColorTertiaryBrush}"
          Focusable="False"
          SnapsToDevicePixels="True" />
      </breadcrumbBar:AeroChrome.Content>
    </breadcrumbBar:AeroChrome>
    <ControlTemplate.Triggers>
      <Trigger Property="IsFocused" Value="True">
        <Setter TargetName="chrome" Property="RenderMouseOver" Value="True" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <!--  ButtonTemplate  -->
  <ControlTemplate x:Key="ButtonTemplate" TargetType="{x:Type Button}">
    <Border
      Margin="-1,-1,0,-1"
      Background="Transparent"
      BorderBrush="{DynamicResource ControlElevationBorderBrush}"
      BorderThickness="1"
      Focusable="False"
      SnapsToDevicePixels="True">
      <breadcrumbBar:AeroChrome
        x:Name="chrome"
        Margin="-1"
        BorderBrush="{DynamicResource ControlElevationBorderBrush}"
        BorderThickness="1"
        Content="{TemplateBinding Content}"
        Focusable="False"
        RenderMouseOver="{TemplateBinding IsMouseOver}"
        RenderPressed="{TemplateBinding IsPressed}"
        SnapsToDevicePixels="True" />
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="IsFocused" Value="True">
        <Setter TargetName="chrome" Property="RenderMouseOver" Value="True" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <!--  BreadcrumbItem  -->
  <Style TargetType="{x:Type breadcrumbBar:BreadcrumbItem}">
    <Setter Property="Focusable" Value="False" />
    <Setter Property="BorderBrush" Value="{DynamicResource ControlElevationBorderBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type breadcrumbBar:BreadcrumbItem}">
          <Border
            Background="Transparent"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Focusable="False" CornerRadius="4">
            <DockPanel>
              <breadcrumbBar:BreadcrumbButton
                x:Name="PART_Header"
                DataContext="{Binding}"
                Header="{TemplateBinding Header}"
                Image="{TemplateBinding Image}"
                IsButtonVisible="{TemplateBinding IsButtonVisible}"
                IsDropDownPressed="{Binding IsDropDownPressed, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                IsImageVisible="{TemplateBinding IsRoot}"
                ItemTemplate="{TemplateBinding OverflowItemTemplate}"
                ItemTemplateSelector="{TemplateBinding OverflowItemTemplateSelector}"
                ItemsSource="{Binding Items, RelativeSource={RelativeSource TemplatedParent}}"
                SelectedItem="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
              <ContentControl
                x:Name="PART_Selected"
                Content="{TemplateBinding SelectedBreadcrumb}"
                Focusable="False" />
            </DockPanel>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsRoot" Value="True">
              <Setter TargetName="PART_Header" Property="EnableVisualButtonStyle" Value="False" />
            </Trigger>

          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="UiComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
    <Setter Property="Foreground">
      <Setter.Value>
        <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}" />
      </Setter.Value>
    </Setter>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderBrush" Value="{DynamicResource ControlElevationBorderBrush}" />
    <Setter Property="FontSize" Value="14" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid Margin="0,0,5,0">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="2" CornerRadius="0" />
            <Border Grid.Column="0"
                                    Margin="0"
                                    CornerRadius="0" />
            <Path x:Name="MainArrow"
                                    Grid.Column="1"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z">
              <Path.Fill>
                <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}" />
              </Path.Fill>
            </Path>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground">
                <Setter.Value>
                  <SolidColorBrush Color="{DynamicResource TextFillColorTertiary}" />
                </Setter.Value>
              </Setter>
              <Setter TargetName="MainArrow" Property="Fill">
                <Setter.Value>
                  <SolidColorBrush Color="{DynamicResource TextFillColorTertiary}" />
                </Setter.Value>
              </Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type ComboBoxItem}">
    <Setter Property="Foreground">
      <Setter.Value>
        <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}" />
      </Setter.Value>
    </Setter>
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="MinHeight" Value="25" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
          <Border
                        Name="Border"
                        Padding="8"
                        VerticalAlignment="Stretch"
                        SnapsToDevicePixels="True">
            <ContentPresenter VerticalAlignment="Center" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
              <Setter TargetName="Border" Property="Background">
                <Setter.Value>
                  <SolidColorBrush Color="{DynamicResource ControlFillColorSecondary}" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground">
                <Setter.Value>
                  <SolidColorBrush Color="{DynamicResource TextFillColorTertiary}" />
                </Setter.Value>
              </Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="styleCombo" TargetType="{x:Type ComboBox}">
    <Setter Property="Foreground">
      <Setter.Value>
        <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}" />
      </Setter.Value>
    </Setter>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="MinHeight" Value="25" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="FlowDirection" Value="LeftToRight" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBox}">
          <Grid>
            <ToggleButton Name="ToggleButton"
                            ClickMode="Press"
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{StaticResource UiComboBoxToggleButton}" />
            <TextBox x:Name="PART_EditableTextBox"
                            Margin="8,7,24,8"
                            Foreground="{Binding Path=Foreground, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                            CaretBrush="{Binding Path=Foreground, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                            SelectionBrush="DodgerBlue"
                            IsReadOnly="{TemplateBinding IsReadOnly}" />
            <Popup Name="Popup"
                            AllowsTransparency="True"
                            Focusable="False"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            Placement="Bottom"
                            VerticalOffset="1"
                            PopupAnimation="Slide">
              <Border Name="DropDown"
                                MinWidth="{TemplateBinding ActualWidth}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                Padding="0"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1"
                                CornerRadius="0,0,8,8"
                                SnapsToDevicePixels="True">
                <Border.Background>
                  <SolidColorBrush Color="{DynamicResource SystemFillColorSolidNeutralBackground}" />
                </Border.Background>
                <Grid>
                  <Border x:Name="DropDownBorder" />
                  <ScrollViewer
                                        Margin="0,0,-14,0"
                                        SnapsToDevicePixels="True"
                                        Style="{DynamicResource UiScrollViewer}">
                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                  </ScrollViewer>
                </Grid>
              </Border>
            </Popup>
          </Grid>
          <ControlTemplate.Resources>
            <Style BasedOn="{x:Null}" TargetType="{x:Type TextBox}">
              <Setter Property="Background" Value="Transparent" />
              <Setter Property="VerticalAlignment" Value="Center" />
              <Setter Property="Focusable" Value="True" />
              <Setter Property="Visibility" Value="Hidden" />
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="PART_ContentHost"
                                            HorizontalAlignment="Stretch"
                                            Focusable="False"/>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
          </ControlTemplate.Resources>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground">
                <Setter.Value>
                  <SolidColorBrush Color="{DynamicResource TextFillColorTertiary}" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="HasItems" Value="False">
              <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
            </Trigger>
            <Trigger Property="IsGrouping" Value="True">
              <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
              <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0" />
              <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
            </Trigger>
            <Trigger Property="IsEditable" Value="True">
              <Setter Property="IsTabStop" Value="False" />
              <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  BreadcrumbBar  -->
  <Style TargetType="{x:Type breadcrumbBar:BreadcrumbBar}">
    <Setter Property="MinHeight" Value="23" />
    <Setter Property="Background" Value="{DynamicResource ControlFillColorDefaultBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ControlElevationBorderBrush}" />
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type breadcrumbBar:BreadcrumbBar}">
          <ControlTemplate.Resources>
            <Style TargetType="{x:Type Button}">
              <Setter Property="Template" Value="{StaticResource ButtonTemplate}" />
              <Setter Property="MinWidth" Value="21" />
              <Setter Property="BorderThickness" Value="1" />
              <Setter Property="FocusVisualStyle" Value="{x:Null}" />
              <Setter Property="BorderBrush" Value="{DynamicResource ControlElevationBorderBrush}" />
              <Setter Property="Focusable" Value="{Binding Focusable, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type breadcrumbBar:BreadcrumbBar}}}" />
            </Style>
            <Style TargetType="{x:Type breadcrumbBar:BreadcrumbButton}">
              <Setter Property="Focusable" Value="{Binding Focusable, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type breadcrumbBar:BreadcrumbBar}}}" />
            </Style>
          </ControlTemplate.Resources>
          <Border
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Focusable="False"
            SnapsToDevicePixels="True" CornerRadius="4">
            <Border BorderThickness="0,0,0,1" x:Name="PART_DownBorder"
              CornerRadius="4"
              Focusable="False"
              SnapsToDevicePixels="True">
              <Border.BorderBrush>
                <SolidColorBrush Color="{DynamicResource ControlStrokeColorSecondary2}" />
              </Border.BorderBrush>
              <Grid Margin="0">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ProgressBar
                  x:Name="progress"
                  Grid.Column="0"
                  Grid.ColumnSpan="4"
                  Background="Transparent"
                  BorderThickness="0"
                  Foreground="LightGreen"
                  Maximum="{Binding ProgressMaximum, RelativeSource={RelativeSource TemplatedParent}}"
                  Minimum="{Binding ProgressMinimum, RelativeSource={RelativeSource TemplatedParent}}"
                  Value="{Binding ProgressValue, RelativeSource={RelativeSource TemplatedParent}}" />

                <breadcrumbBar:BreadcrumbButton x:Name="PART_Root"
                                                Margin="4,0,0,2"
                  Grid.Column="0"
                  MinWidth="0"
                  EnableVisualButtonStyle="False"
                  Image="{Binding SelectedBreadcrumb.Image, RelativeSource={RelativeSource TemplatedParent}}"
                  IsDropDownPressed="{Binding IsOverflowPressed, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                  IsImageVisible="True"
                  ItemTemplate="{TemplateBinding OverflowItemTemplate}"
                  ItemTemplateSelector="{TemplateBinding OverflowItemTemplateSelector}"
                  ItemsSource="{TemplateBinding CollapsedTraces}"
                  Mode="{TemplateBinding OverflowMode}"
                  SelectedItem="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
                <ContentPresenter x:Name="container" Margin="4,0,4,2"
                  Grid.Column="1"
                  Content="{Binding RootItem, RelativeSource={RelativeSource TemplatedParent}}" />
                <ToggleButton
                  x:Name="dropDown"
                  Grid.Column="2"
                  Width="16"
                  BorderBrush="{DynamicResource ControlElevationBorderBrush}"
                  BorderThickness="1"
                  ClickMode="Press"
                  FocusVisualStyle="{x:Null}"
                  Focusable="False"
                  IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                  Template="{StaticResource DropDownButtonTemplate}"
                  Visibility="Collapsed" />
                <ComboBox
                  x:Name="PART_ComboBox"
                  Grid.Column="0"
                  Grid.ColumnSpan="4"
                  Margin="0,0,0,0"
                  Focusable="True"
                  IsEditable="True"
                  Style="{StaticResource styleCombo}"
                  ItemTemplate="{TemplateBinding DropDownItemTemplate}"
                  ItemTemplateSelector="{TemplateBinding DropDownItemTemplateSelector}"
                  ItemsSource="{Binding DropDownItems, RelativeSource={RelativeSource TemplatedParent}}"
                  SelectedIndex="{Binding SelectedDropDownIndex, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                  Visibility="Hidden" />
                <ItemsControl
                  x:Name="buttons"
                  Grid.Column="3"
                  Margin="4,0,4,2"
                  Focusable="False"
                  ItemsSource="{Binding Buttons, RelativeSource={RelativeSource TemplatedParent}}">
                  <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                      <StackPanel IsItemsHost="True" Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                  </ItemsControl.ItemsPanel>
                </ItemsControl>
              </Grid>
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger SourceName="PART_ComboBox" Property="Visibility" Value="Visible">
              <!--  hide the breadcrumb container and root button  if the combobox is visible, otherwise a breadcrumb button could get the focus on mouseover:  -->
              <Setter TargetName="container" Property="Visibility" Value="Hidden" />
              <Setter TargetName="PART_Root" Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="IsRootSelected" Value="True">
              <Setter TargetName="PART_Root" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="HasDropDownItems" Value="True">
              <Setter TargetName="dropDown" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsEditMode" Value="True">
              <Setter TargetName="PART_DownBorder" Property="BorderThickness" Value="0,0,0,2" />
              <Setter TargetName="PART_DownBorder" Property="BorderBrush">
                <Setter.Value>
                  <SolidColorBrush Color="{DynamicResource SystemAccentColor}" />
                </Setter.Value>
              </Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  BreadcrumbButton  -->
  <Style TargetType="{x:Type breadcrumbBar:BreadcrumbButton}">
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="Background" Value="{DynamicResource ControlFillColorTertiaryBrush}" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Foreground" Value="{DynamicResource TextFillColorTertiaryBrush}" />
    <Setter Property="Template">

      <Setter.Value>
        <ControlTemplate TargetType="{x:Type breadcrumbBar:BreadcrumbButton}">
          <Grid Margin="{TemplateBinding Padding}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <breadcrumbBar:AeroChrome
              x:Name="button"
              Grid.Column="0"
              Margin="0,2,0,1"
              BorderThickness="1,1,0,1"
              Focusable="False"
              RenderMouseOver="{TemplateBinding IsMouseOver}"
              RenderPressed="{TemplateBinding IsPressed}"
              Visibility="Visible" IsLeft="True">
              <breadcrumbBar:AeroChrome.Content>
                <StackPanel Orientation="Horizontal">
                  <Image
                    x:Name="image"
                    Width="16"
                    Height="16"
                    Source="{Binding Image, RelativeSource={RelativeSource TemplatedParent}}"
                    Stretch="Fill" Margin="0,2,0,0"/>
                  <ContentPresenter
                    Margin="2,0,2,0"
                    Content="{TemplateBinding Header}"
                    ContentTemplate="{TemplateBinding HeaderTemplate}" />
                </StackPanel>
              </breadcrumbBar:AeroChrome.Content>
            </breadcrumbBar:AeroChrome>

            <!--  Content="{TemplateBinding Header}"/>  -->
            <breadcrumbBar:AeroChrome
              x:Name="PART_DropDown"
              Grid.Column="1"
              MinWidth="16"
              Margin="-1,2,0,1"
              BorderThickness="1"
              ContentTemplate="{TemplateBinding DropDownContentTemplate}"
              Focusable="False"
              RenderMouseOver="{TemplateBinding IsMouseOver}"
              RenderPressed="{TemplateBinding IsDropDownPressed}">
              <breadcrumbBar:AeroChrome.Content>
                <TextBlock x:Name="dropDownPath" FontFamily="{DynamicResource FluentSystemIcons}" Text="&#xF2AF;" Margin="0,1,0,0"></TextBlock>
              </breadcrumbBar:AeroChrome.Content>
              <breadcrumbBar:AeroChrome.ContextMenu>
                <betterExplorerControls:AcrylicContextMenu x:Name="PART_Menu" HorizontalOffset="-14" VerticalOffset="25" IsOpen="{Binding IsDropDownPressed, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
                  <betterExplorerControls:AcrylicContextMenu.Resources>
                    <Style TargetType="MenuItem">

                      <Setter Property="Padding" Value="0"></Setter>
                      <Setter Property="Margin" Value="0,3,0,3"></Setter>
                      <Setter Property="Template">
                        <Setter.Value>
                          <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Grid Background="{TemplateBinding Background}">
                              <Border x:Name="PART_Border" CornerRadius="4" Background="Transparent">
                                <Grid Margin="8">
                                  <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                  </Grid.ColumnDefinitions>
                                  <Image Source="{TemplateBinding Icon}"/>
                                  <TextBlock Grid.Column="1" Margin="8,0,0,0"  Text="{TemplateBinding Header}"></TextBlock>
                                </Grid>

                              </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                              <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="PART_Border" Property="Background" Value="#695D5B5B" />
                                <Setter Property="Foreground" Value="White"/>
                              </Trigger>
                            </ControlTemplate.Triggers>
                          </ControlTemplate>
                        </Setter.Value>
                      </Setter>
                    </Style>
                  </betterExplorerControls:AcrylicContextMenu.Resources>
                </betterExplorerControls:AcrylicContextMenu>
              </breadcrumbBar:AeroChrome.ContextMenu>
            </breadcrumbBar:AeroChrome>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsImageVisible" Value="False">
              <Setter TargetName="image" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="Image" Value="{x:Null}">
              <Setter TargetName="image" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="EnableVisualButtonStyle" Value="False">
              <Setter TargetName="button" Property="MouseOverBackground" Value="Transparent" />
              <Setter TargetName="button" Property="MousePressedBackground" Value="Transparent" />
              <Setter TargetName="button" Property="BorderBrush" Value="Transparent" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="Header" Value="{x:Null}" />
                <Condition Property="IsImageVisible" Value="False" />
                <Condition Property="Image" Value="{x:Null}" />
              </MultiTrigger.Conditions>
              <Setter TargetName="button" Property="Visibility" Value="Collapsed" />
            </MultiTrigger>
            <Trigger Property="HasItems" Value="False">
              <Setter TargetName="PART_DropDown" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="Mode" Value="Overflow">
              <Setter TargetName="dropDownPath" Property="Text" Value="&#xF285;" />
              <Setter TargetName="dropDownPath" Property="Foreground" Value="{DynamicResource TextFillColorTertiaryBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="PART_DropDown" Property="RenderPressed" Value="True" />
              <Setter Property="Foreground" Value="{DynamicResource TextFillColorTertiaryBrush}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
              <Setter TargetName="PART_DropDown" Property="RenderMouseOver" Value="True" />
              <Setter TargetName="button" Property="RenderMouseOver" Value="True" />
            </Trigger>
            <Trigger Property="IsDropDownVisible" Value="False">
              <Setter TargetName="PART_DropDown" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Foreground" Value="{DynamicResource TextFillColorTertiaryBrush}" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition SourceName="PART_DropDown" Property="IsMouseOver" Value="True" />
                <Condition Property="EnableVisualButtonStyle" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="button" Property="MouseOverBackground" Value="{DynamicResource ControlFillColorTertiaryBrush}" />
              <Setter TargetName="button" Property="Foreground" Value="{DynamicResource TextFillColorTertiaryBrush}" />
            </MultiTrigger>
            <Trigger Property="IsButtonVisible" Value="False">
              <Setter TargetName="button" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsDropDownPressed" Value="True" />
                <Condition Property="Mode" Value="Breadcrumb" />
              </MultiTrigger.Conditions>
              <Setter TargetName="dropDownPath" Property="Text" Value="&#xF2A2;" />
              <Setter TargetName="button" Property="RenderPressed" Value="True" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type breadcrumbBar:AeroChrome}">
    <Setter Property="MouseOverBackground" Value="{DynamicResource ControlFillColorTertiaryBrush}" />
    <Setter Property="MousePressedBackground" Value="{DynamicResource ControlFillColorSecondaryBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ControlElevationBorderBrush}" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type breadcrumbBar:AeroChrome}">
          <Grid Margin="{TemplateBinding Padding}">
            <Border
              x:Name="mouseOverBtn"
              Background="{TemplateBinding MouseOverBackground}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              Opacity="0"
              SnapsToDevicePixels="True" CornerRadius="0,4,4,0">
              <Border
                x:Name="innerButton"
                BorderBrush="{DynamicResource ControlElevationBorderBrush}"
                BorderThickness="0"
                SnapsToDevicePixels="True" />
            </Border>
            <Border
              x:Name="mouseDownBtn"
              Background="{TemplateBinding MousePressedBackground}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              Opacity="0"
              SnapsToDevicePixels="True" CornerRadius="0,4,4,0">
              <Border
                x:Name="innerButton2"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="0"
                SnapsToDevicePixels="False" />
            </Border>
            <ContentPresenter
              x:Name="content"
              Margin="4,0,4,2"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              Content="{TemplateBinding Content}"
              ContentTemplate="{TemplateBinding ContentTemplate}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="RenderMouseOver" Value="True">
              <Setter TargetName="mouseOverBtn" Property="Opacity" Value="1" />
              <!--<Trigger.EnterActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation
                      Storyboard.TargetName="mouseOverBtn"
                      Storyboard.TargetProperty="Opacity"
                      To="1"
                      Duration="0:0:0.25" />
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation
                      Storyboard.TargetName="mouseOverBtn"
                      Storyboard.TargetProperty="Opacity"
                      To="0"
                      Duration="0:0:0.25" />
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.ExitActions>-->

            </Trigger>
            <Trigger Property="RenderPressed" Value="True">
              <Setter TargetName="mouseDownBtn" Property="Opacity" Value="1" />
              <Setter TargetName="content" Property="Margin" Value="5,0,3,1" />
            </Trigger>
            <Trigger Property="IsLeft" Value="True">
              <Setter TargetName="mouseOverBtn" Property="CornerRadius" Value="4,0,0,4"/>
              <Setter TargetName="mouseDownBtn" Property="CornerRadius" Value="4,0,0,4"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>
