<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:Fluent="clr-namespace:Fluent">

  <Style TargetType="{x:Type Fluent:WindowCommands}">
    <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.LabelTextBrush}" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Fluent:WindowCommands">
          <ControlTemplate.Resources>
            <ResourceDictionary>
              <Style TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{DynamicResource TransparentWhiteBrush}" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="1" />
                <Setter Property="Template" Value="{DynamicResource WindowCommandsControlTemplate}" />
              </Style>
            </ResourceDictionary>
          </ControlTemplate.Resources>

          <StackPanel Orientation="Horizontal">
            <ItemsControl
              Focusable="False"
              ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
              ItemContainerStyleSelector="{TemplateBinding ItemContainerStyleSelector}"
              ItemTemplate="{TemplateBinding ItemTemplate}"
              ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
              ItemsSource="{Binding Items, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:WindowCommands}}}">
              <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                  <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
              </ItemsControl.ItemsPanel>
            </ItemsControl>

            <Button
              x:Name="PART_Min"
              Uid="{Binding Minimize, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:WindowCommands}}}"
              Padding="0"
              Focusable="False"
              Style="{DynamicResource CaptionButtonStyle}"
              ToolTip="{Binding Minimize, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:WindowCommands}}}">
              <Line
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                SnapsToDevicePixels="True"
                Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                StrokeThickness="1.5"
                UseLayoutRounding="True"
                X1="0"
                X2="10"
                Y1="0"
                Y2="0" />
            </Button>

            <Button
              x:Name="PART_Max"
              Uid="{Binding Maximize, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:WindowCommands}}}"
              Padding="0"
              Focusable="False"
              Style="{DynamicResource CaptionButtonStyle}"
              ToolTip="{Binding Maximize, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:WindowCommands}}}"
              Visibility="{Binding WindowState, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Converter={x:Static Converters:StaticConverters.EqualsToVisibilityConverter}, ConverterParameter={x:Static WindowState.Normal}}">
              <Canvas
                Width="12"
                Height="12"
                HorizontalAlignment="Center"
                VerticalAlignment="Center">
                <Path
                  Data="M2,2 2,10 10,10 10,2 2,2Z M1,11 1,1 11,1 11,11 1,11Z"
                  Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                  RenderOptions.EdgeMode="Aliased"
                  SnapsToDevicePixels="True"
                  Stretch="Uniform" />
              </Canvas>
            </Button>

            <Button
              x:Name="PART_Restore"
              Uid="{Binding Restore, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:WindowCommands}}}"
              Padding="0"
              Focusable="False"
              Style="{DynamicResource CaptionButtonStyle}"
              ToolTip="{Binding Restore, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:WindowCommands}}}"
              Visibility="{Binding WindowState, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Converter={x:Static Converters:StaticConverters.EqualsToVisibilityConverter}, ConverterParameter={x:Static WindowState.Maximized}}">
              <Canvas
                Width="12"
                Height="12"
                HorizontalAlignment="Center"
                VerticalAlignment="Center">
                <Path
                  Data="M10,9 9,9 9,3 3,3 3,2 10,2 10,9Z M8,11 1,11 1,4 8,4 8,11Z M2,1 2,3 0,3 0,12 9,12 9,10 11,10 11,1 2,1Z"
                  Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                  RenderOptions.EdgeMode="Aliased"
                  SnapsToDevicePixels="True"
                  Stretch="Uniform" />
              </Canvas>
            </Button>

            <Button
              x:Name="PART_Close"
              Uid="{Binding Close, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:WindowCommands}}}"
              Padding="0"
              Focusable="False"
              Style="{DynamicResource CaptionButtonStyle}"
              ToolTip="{Binding Close, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:WindowCommands}}}">
              <Grid>
                <Line
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  SnapsToDevicePixels="True"
                  Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                  X1="0"
                  X2="10"
                  Y1="0"
                  Y2="10" />
                <Line
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  SnapsToDevicePixels="True"
                  Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                  X1="0"
                  X2="10"
                  Y1="10"
                  Y2="0" />
              </Grid>
            </Button>
          </StackPanel>
          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding ResizeMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="NoResize">
              <Setter TargetName="PART_Min" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="PART_Max" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="PART_Restore" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ResizeMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Value="CanMinimize">
              <Setter TargetName="PART_Max" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="PART_Restore" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsMouseOver, ElementName=PART_Close}" Value="True">
              <Setter TargetName="PART_Close" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.WindowCommands.CloseButton.MouseOver.Background}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsPressed, ElementName=PART_Close}" Value="True">
              <Setter TargetName="PART_Close" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.WindowCommands.CloseButton.Pressed.Background}" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <ControlTemplate x:Key="WindowCommandsControlTemplate" TargetType="{x:Type Button}">
    <Grid Background="{TemplateBinding Background}">
      <ContentPresenter
        x:Name="contentPresenter"
        Margin="11,1,11,1"
        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
        Opacity="0.75"
        RecognizesAccessKey="True"
        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

      <Rectangle
        x:Name="border"
        Width="0"
        Height="15"
        Margin="10,0,0,0"
        HorizontalAlignment="Right"
        VerticalAlignment="Stretch"
        Fill="{TemplateBinding Foreground}"
        IsHitTestVisible="False"
        Opacity="0.25"
        SnapsToDevicePixels="True" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter TargetName="contentPresenter" Property="Opacity" Value="1" />
      </Trigger>
      <Trigger Property="IsMouseOver" Value="False">
        <Setter TargetName="contentPresenter" Property="Opacity" Value=".5" />
      </Trigger>
      <Trigger Property="IsKeyboardFocused" Value="True" />
      <Trigger Property="ToggleButton.IsChecked" Value="True" />
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.DarkIdealForegroundDisabledBrush}" />
      </Trigger>
      <DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}" Value="{x:Null}">
        <Setter TargetName="border" Property="Rectangle.Width" Value="1" />
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
</ResourceDictionary>
