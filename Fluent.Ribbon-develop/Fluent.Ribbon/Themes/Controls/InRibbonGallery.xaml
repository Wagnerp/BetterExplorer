<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:Converters="clr-namespace:Fluent.Converters"
  xmlns:Fluent="clr-namespace:Fluent"
  xmlns:FluentHelpers="clr-namespace:Fluent.Helpers">
  <Style x:Key="InRibbonGalleryToggleButtonStyle" TargetType="{x:Type Fluent:ToggleButton}">
    <Setter Property="Template" Value="{DynamicResource InRibbonGalleryToggleButtonControlTemplate}" />
    <Setter Property="Height" Value="68" />
    <Setter Property="Width" Value="Auto" />
    <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.LabelTextBrush}" />
    <Style.Triggers>
      <Trigger Property="Size" Value="Large">
        <Setter Property="Height" Value="68" />
      </Trigger>
      <Trigger Property="Size" Value="Middle">
        <Setter Property="Height" Value="22" />
      </Trigger>
      <Trigger Property="Size" Value="Small">
        <Setter Property="Height" Value="22" />
        <Setter Property="Width" Value="31" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <ControlTemplate x:Key="InRibbonGalleryToggleButtonControlTemplate" TargetType="{x:Type Fluent:ToggleButton}">
    <Border
      x:Name="border"
      Height="Auto"
      HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
      VerticalAlignment="{TemplateBinding VerticalAlignment}"
      Background="Transparent"
      BorderBrush="Transparent"
      BorderThickness="1">
      <Grid Height="Auto">
        <StackPanel
          x:Name="stackPanel"
          Width="Auto"
          Orientation="Vertical">
          <ContentPresenter
            x:Name="iconImage"
            Width="32"
            Height="32"
            Margin="2"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Content="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static Converters:StaticConverters.ObjectToImageConverter}}"
            SnapsToDevicePixels="True" />
          <Fluent:TwoLineLabel
            x:Name="controlLabel"
            Margin="2,-2,2,2"
            HorizontalAlignment="Center"
            VerticalAlignment="Stretch"
            HasGlyph="True"
            Style="{DynamicResource TwoLineLabelStyle}"
            Text="{TemplateBinding Header}" />
        </StackPanel>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="Size" Value="Small">
        <Setter TargetName="stackPanel" Property="Orientation" Value="Horizontal" />
        <Setter TargetName="iconImage" Property="Content" Value="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static Converters:StaticConverters.ObjectToImageConverter}}" />
        <Setter TargetName="controlLabel" Property="HasTwoLines" Value="False" />
        <Setter TargetName="controlLabel" Property="Text" Value="" />
        <Setter TargetName="iconImage" Property="Width" Value="16" />
        <Setter TargetName="iconImage" Property="Height" Value="16" />
        <Setter TargetName="iconImage" Property="Margin" Value="1,2,0,2" />
        <Setter TargetName="controlLabel" Property="Margin" Value="-2,0,2,2" />
        <Setter TargetName="controlLabel" Property="Width" Value="10" />
      </Trigger>
      <Trigger Property="Size" Value="Middle">
        <Setter TargetName="stackPanel" Property="Orientation" Value="Horizontal" />
        <Setter TargetName="iconImage" Property="Content" Value="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static Converters:StaticConverters.ObjectToImageConverter}}" />
        <Setter TargetName="stackPanel" Property="Width" Value="Auto" />
        <Setter TargetName="iconImage" Property="VerticalAlignment" Value="Center" />
        <Setter TargetName="controlLabel" Property="HasTwoLines" Value="False" />
        <Setter TargetName="controlLabel" Property="Margin" Value="2,-2,2,2" />
        <Setter TargetName="border" Property="VerticalAlignment" Value="Stretch" />
        <Setter TargetName="iconImage" Property="Width" Value="16" />
        <Setter TargetName="iconImage" Property="Height" Value="16" />
        <Setter TargetName="iconImage" Property="Margin" Value="1,2,2,2" />
        <Setter TargetName="controlLabel" Property="VerticalAlignment" Value="Top" />
      </Trigger>
      <Trigger Property="IsChecked" Value="True">
        <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.BorderBrush}" />
        <Setter TargetName="border" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Background}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="iconImage" Property="Opacity" Value="0.5" />
        <Setter TargetName="controlLabel" Property="Opacity" Value="0.5" />
        <Setter TargetName="iconImage" Property="Effect">
          <Setter.Value>
            <Fluent:GrayscaleEffect />
          </Setter.Value>
        </Setter>
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
          <Condition Property="IsChecked" Value="False" />
        </MultiTrigger.Conditions>
        <Setter TargetName="border" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Background}" />
        <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.BorderBrush}" />
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style x:Key="InRibbonGalleryButton" TargetType="{x:Type Fluent:ToggleButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Fluent:ToggleButton}">
          <Border
            x:Name="border"
            Background="{DynamicResource WhiteBrush}"
            BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.Control.BorderBrush}"
            BorderThickness="1,1,1,1">
            <Grid x:Name="grid">
              <Path
                Width="7"
                Height="1"
                Margin="0,6,0,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Top"
                Data="M0,0L1,0"
                Fill="{DynamicResource WhiteBrush}"
                Stretch="Fill"
                Stroke="{DynamicResource BlackBrush}" />
              <Path
                Width="5"
                Height="3"
                Margin="0,8,0,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Top"
                Data="M0,0L1,1 2,0z"
                Fill="{DynamicResource BlackBrush}"
                Stretch="Fill"
                Stroke="{DynamicResource BlackBrush}"
                StrokeThickness="0" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="grid" Property="Opacity" Value="0.5" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="True" />
                <Condition Property="IsPressed" Value="False" />
              </MultiTrigger.Conditions>
              <Setter TargetName="border" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Background}" />
            </MultiTrigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="border" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Background}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="InRibbonGalleryRepeatButton" TargetType="{x:Type RepeatButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Border
            x:Name="border"
            Background="{DynamicResource WhiteBrush}"
            BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.Control.BorderBrush}"
            BorderThickness="1">
            <ContentPresenter x:Name="contentPresenter" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="contentPresenter" Property="Opacity" Value="0.5" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="True" />
                <Condition Property="IsPressed" Value="False" />
              </MultiTrigger.Conditions>
              <Setter TargetName="border" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Background}" />
            </MultiTrigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="border" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Background}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <ControlTemplate x:Key="InRibbonGalleryControlTemplate" TargetType="{x:Type Fluent:InRibbonGallery}">
    <Grid
      x:Name="PART_LayoutRoot"
      Width="Auto"
      Height="Auto"
      HorizontalAlignment="Stretch"
      VerticalAlignment="Top">
      <Border
        x:Name="border"
        Width="Auto"
        Height="60"
        Margin="0,0,0,0"
        HorizontalAlignment="Stretch"
        VerticalAlignment="Top"
        BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.Control.BorderBrush}"
        BorderThickness="1,1,1,1"
        ClipToBounds="True"
        CornerRadius="0,1,1,0">
        <Grid Width="Auto" Height="Auto">
          <ScrollViewer HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Visible">
            <ScrollViewer.Resources>
              <Style TargetType="{x:Type ScrollBar}">
                <Setter Property="Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                      <StackPanel Margin="0,-1,-1,0" HorizontalAlignment="Right">
                        <RepeatButton
                          x:Name="upButton"
                          Width="15"
                          Height="21"
                          Margin="0,0,0,0"
                          Command="ScrollBar.PageUpCommand"
                          Style="{DynamicResource InRibbonGalleryRepeatButton}">
                          <Path
                            Width="5"
                            Height="3"
                            Data="M0,0 L1,-1 2,0z"
                            Fill="{DynamicResource BlackBrush}"
                            RenderOptions.EdgeMode="Aliased"
                            Stretch="Fill" />
                        </RepeatButton>
                        <RepeatButton
                          x:Name="downButton"
                          Width="15"
                          Height="21"
                          Margin="0,-1,0,0"
                          Command="ScrollBar.PageDownCommand"
                          Style="{DynamicResource InRibbonGalleryRepeatButton}">
                          <Path
                            Width="5"
                            Height="3"
                            Data="M0,0 L1,1 2,0z"
                            Fill="{DynamicResource BlackBrush}"
                            RenderOptions.EdgeMode="Aliased"
                            Stretch="Fill" />
                        </RepeatButton>
                      </StackPanel>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
                <Setter Property="ContextMenu" Value="{x:Null}" />
              </Style>
            </ScrollViewer.Resources>
            <Grid>
              <ContentControl x:Name="PART_ContentPresenter" Focusable="False">
                <Fluent:GalleryPanel
                  x:Name="PART_GalleryPanel"
                  Background="{DynamicResource WhiteBrush}"
                  Filter="{TemplateBinding SelectedFilterGroups}"
                  GroupBy="{TemplateBinding GroupBy}"
                  GroupByAdvanced="{TemplateBinding GroupByAdvanced}"
                  IsGrouped="False"
                  IsItemsHost="True"
                  ItemContainerGenerator="{Binding ItemContainerGenerator, RelativeSource={RelativeSource TemplatedParent}}"
                  ItemHeight="{TemplateBinding ItemHeight}"
                  ItemWidth="{TemplateBinding ItemWidth}"
                  Orientation="{TemplateBinding Orientation}" />
              </ContentControl>
              <Image x:Name="PART_FakeImage" Visibility="Collapsed" />
            </Grid>
          </ScrollViewer>
          <Fluent:ToggleButton
            x:Name="PART_ExpandButton"
            Width="15"
            Height="20"
            Margin="0,0,-1,-1"
            HorizontalAlignment="Right"
            VerticalAlignment="Bottom"
            CanAddToQuickAccessToolBar="False"
            ClickMode="Press"
            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
            IsDefinitive="False"
            Style="{DynamicResource InRibbonGalleryButton}" />
          <Popup
            x:Name="PART_Popup"
            Grid.ColumnSpan="2"
            Margin="0,0,-4,0"
            VerticalAlignment="Top"
            AllowsTransparency="True"
            CustomPopupPlacementCallback="{x:Static FluentHelpers:PopupHelper.SimplePlacementCallback}"
            Focusable="False"
            IsOpen="{TemplateBinding IsDropDownOpen}"
            Placement="Custom"
            PlacementTarget="{Binding ElementName=PART_LayoutRoot}"
            PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
            <Popup.Resources>
              <ResourceDictionary>
                <Style
                  x:Key="{x:Type ScrollBar}"
                  BasedOn="{StaticResource ScrollBarWhite}"
                  TargetType="{x:Type ScrollBar}" />
              </ResourceDictionary>
            </Popup.Resources>
            <Grid
              Name="DropDown"
              Margin="0"
              VerticalAlignment="Top"
              SnapsToDevicePixels="True">
              <Border
                x:Name="PART_DropDownBorder"
                MinWidth="{Binding ActualWidth, ElementName=PART_LayoutRoot}"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                Background="{DynamicResource Fluent.Ribbon.Brushes.DropDown.BackgroundBrush}"
                BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.DropDown.BorderBrush}"
                BorderThickness="1"
                CornerRadius="1"
                SnapsToDevicePixels="True">
                <Grid
                  Width="Auto"
                  Height="Auto"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Top"
                  KeyboardNavigation.DirectionalNavigation="Cycle">
                  <Border
                    Width="Auto"
                    Height="Auto"
                    VerticalAlignment="Stretch"
                    BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.DropDown.BackgroundBrush}"
                    BorderThickness="1"
                    CornerRadius="1" />
                  <Grid
                    Margin="1"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top">
                    <Grid.RowDefinitions>
                      <RowDefinition Height="*" />
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Rectangle
                      Grid.RowSpan="2"
                      Width="1"
                      Height="Auto"
                      Margin="24,0,0,0"
                      HorizontalAlignment="Left"
                      VerticalAlignment="Stretch"
                      Fill="{x:Null}"
                      Stretch="Fill"
                      Stroke="{DynamicResource Fluent.Ribbon.Brushes.Separator.BorderBrush}"
                      Visibility="Visible" />
                    <Grid
                      x:Name="PART_MenuPanel"
                      MinWidth="{Binding MinWidth, ElementName=PART_DropDownBorder}"
                      MaxHeight="{TemplateBinding MaxDropDownHeight}"
                      VerticalAlignment="Top">
                      <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                      </Grid.RowDefinitions>
                      <Border
                        x:Name="layoutRoot"
                        BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.Control.BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid Width="Auto">
                          <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                          </Grid.RowDefinitions>
                          <Border
                            x:Name="border_"
                            Grid.Row="0"
                            Height="13"
                            Background="{DynamicResource Fluent.Ribbon.Brushes.Gallery.Header.Background}"
                            BorderBrush="{x:Null}"
                            BorderThickness="0">
                            <Fluent:DropDownButton
                              x:Name="PART_FilterDropDownButton"
                              Height="Auto"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Top"
                              Header="{TemplateBinding SelectedFilterTitle}"
                              Style="{DynamicResource GalleryDropDownButtonStyle}" />
                          </Border>
                          <ScrollViewer
                            x:Name="PART_ScrollViewer"
                            Grid.Row="1"
                            MinHeight="{Binding ActualHeight, ElementName=PART_LayoutRoot}"
                            Margin="1"
                            BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.Control.BorderBrush}"
                            BorderThickness="0,0,0,1">
                            <ContentControl x:Name="PART_PopupContentPresenter" Content="{x:Null}" />
                          </ScrollViewer>
                        </Grid>
                      </Border>
                      <ContentPresenter
                        x:Name="menuPresenter"
                        Grid.Row="1"
                        VerticalAlignment="Top"
                        ContentSource="Menu"
                        KeyboardNavigation.DirectionalNavigation="None" />
                    </Grid>
                    <Border
                      x:Name="resizeBorder"
                      Grid.Row="2"
                      Height="11"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Top"
                      Background="{DynamicResource Fluent.Ribbon.Brushes.DropDown.Resize.BackgoundBrush}"
                      BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.DropDown.Resize.BorderBrush}"
                      BorderThickness="0,1,0,0"
                      CornerRadius="0,0,1,1">
                      <Grid>
                        <Thumb
                          x:Name="PART_ResizeVerticalThumb"
                          Width="Auto"
                          Height="10"
                          Margin="0,0,0,-90"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Top"
                          Cursor="SizeNS"
                          Template="{DynamicResource ResizeVerticalThumbControlTemplate}" />
                        <Thumb
                          x:Name="PART_ResizeBothThumb"
                          Width="10"
                          Height="10"
                          Margin="0,0,0,-90"
                          HorizontalAlignment="Right"
                          VerticalAlignment="Top"
                          Cursor="SizeNWSE"
                          Template="{DynamicResource ResizeBothThumbControlTemplate}" />
                      </Grid>
                    </Border>
                  </Grid>
                </Grid>
              </Border>
            </Grid>
          </Popup>
        </Grid>
      </Border>
      <Fluent:ToggleButton
        x:Name="PART_DropDownButton"
        Margin="0,0,0,0"
        HorizontalAlignment="Left"
        VerticalAlignment="Top"
        CanAddToQuickAccessToolBar="False"
        ClickMode="Press"
        Header="{Binding Path=Header, RelativeSource={RelativeSource TemplatedParent}}"
        Icon="{Binding Path=Icon, RelativeSource={RelativeSource TemplatedParent}}"
        IsDefinitive="False"
        LargeIcon="{Binding Path=LargeIcon, RelativeSource={RelativeSource TemplatedParent}}"
        Size="{Binding Path=Size, RelativeSource={RelativeSource TemplatedParent}}"
        SizeDefinition="{Binding Path=SizeDefinition, RelativeSource={RelativeSource TemplatedParent}}"
        Style="{DynamicResource InRibbonGalleryToggleButtonStyle}"
        Visibility="Collapsed" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="HasFilter" Value="False">
        <Setter TargetName="border_" Property="Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="PART_DropDownButton" Property="IsEnabled" Value="False" />
        <Setter TargetName="PART_ExpandButton" Property="IsEnabled" Value="False" />
      </Trigger>
      <Trigger Property="IsCollapsed" Value="True">
        <Setter TargetName="border" Property="Visibility" Value="Collapsed" />
        <Setter TargetName="PART_Popup" Property="Placement" Value="Bottom" />
        <Setter TargetName="PART_DropDownButton" Property="Visibility" Value="Visible" />
        <Setter TargetName="PART_LayoutRoot" Property="VerticalAlignment" Value="Top" />
        <Setter TargetName="PART_LayoutRoot" Property="HorizontalAlignment" Value="Left" />
      </Trigger>
      <Trigger Property="ResizeMode" Value="None">
        <Setter TargetName="resizeBorder" Property="Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="ResizeMode" Value="Both">
        <Setter TargetName="PART_ResizeVerticalThumb" Property="Visibility" Value="Collapsed" />
        <Setter TargetName="PART_ResizeBothThumb" Property="Visibility" Value="Visible" />
        <Setter TargetName="resizeBorder" Property="Visibility" Value="Visible" />
      </Trigger>
      <Trigger Property="ResizeMode" Value="Vertical">
        <Setter TargetName="PART_ResizeBothThumb" Property="Visibility" Value="Collapsed" />
        <Setter TargetName="PART_ResizeVerticalThumb" Property="Visibility" Value="Visible" />
        <Setter TargetName="resizeBorder" Property="Visibility" Value="Visible" />
      </Trigger>
      <Trigger Property="Menu" Value="{x:Null}">
        <Setter TargetName="PART_ScrollViewer" Property="BorderThickness" Value="0" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style x:Key="{x:Type Fluent:InRibbonGallery}" TargetType="{x:Type Fluent:InRibbonGallery}">
    <Style.Triggers>
      <Trigger Property="IsCollapsed" Value="True">
        <Setter Property="Margin" Value="0" />
      </Trigger>
    </Style.Triggers>
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Template" Value="{DynamicResource InRibbonGalleryControlTemplate}" />
    <Setter Property="Margin" Value="2,3,3,0" />
  </Style>
</ResourceDictionary>