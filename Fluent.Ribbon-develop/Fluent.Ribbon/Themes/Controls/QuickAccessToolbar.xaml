<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:Fluent="clr-namespace:Fluent"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006">
  <Style x:Key="ToolbarDropDownButtonStyle" TargetType="{x:Type Fluent:DropDownButton}">
    <Setter Property="Template" Value="{DynamicResource ToolbarDropDownButtonControlTemplate}" />
    <Setter Property="Height" Value="22" />
    <Setter Property="Width" Value="13" />
    <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.LabelTextBrush}" />
  </Style>

  <ControlTemplate x:Key="ToolbarDropDownButtonControlTemplate" TargetType="{x:Type Fluent:DropDownButton}">
    <Grid>
      <Border
        x:Name="PART_ButtonBorder"
        Width="13"
        Height="22"
        HorizontalAlignment="Stretch"
        VerticalAlignment="Stretch"
        Background="Transparent"
        BorderBrush="Transparent"
        BorderThickness="1">
        <Image
          x:Name="iconImage"
          Width="8"
          Height="8"
          Margin="-3,0,2,0"
          HorizontalAlignment="Center"
          VerticalAlignment="Center"
          Source="{TemplateBinding LargeIcon}"
          Stretch="None" />
      </Border>
      <Popup
        x:Name="PART_Popup"
        Grid.ColumnSpan="2"
        Margin="0,0,-4,0"
        VerticalAlignment="Top"
        AllowsTransparency="True"
        Focusable="False"
        IsOpen="{TemplateBinding IsDropDownOpen}"
        Placement="Bottom"
        PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
        <Grid
          Name="DropDown"
          Margin="0"
          VerticalAlignment="Top"
          SnapsToDevicePixels="True">
          <Border
            x:Name="PART_DropDownBorder"
            MinWidth="{TemplateBinding ActualWidth}"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Top"
            Background="{DynamicResource Fluent.Ribbon.Brushes.DropDown.BackgroundBrush}"
            BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.DropDown.BorderBrush}"
            BorderThickness="1"
            SnapsToDevicePixels="True">
            <Grid
              Width="Auto"
              Height="Auto"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Top">
              <Border
                Width="Auto"
                Height="Auto"
                VerticalAlignment="Top"
                BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.DropDown.BackgroundBrush}"
                BorderThickness="1" />
              <Grid HorizontalAlignment="Stretch" VerticalAlignment="Top">
                <Grid.RowDefinitions>
                  <RowDefinition Height="*" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <ScrollViewer
                  MaxHeight="{TemplateBinding MaxDropDownHeight}"
                  Margin="1"
                  ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                  ScrollViewer.VerticalScrollBarVisibility="Auto"
                  SnapsToDevicePixels="True">
                  <StackPanel
                    x:Name="PART_MenuPanel"
                    IsItemsHost="True"
                    KeyboardNavigation.DirectionalNavigation="Cycle"
                    Orientation="Vertical" />
                </ScrollViewer>
                <Border
                  x:Name="resizeBorder"
                  Grid.Row="1"
                  Height="11"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Top"
                  Background="{DynamicResource Fluent.Ribbon.Brushes.DropDown.Resize.BackgoundBrush}"
                  BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.DropDown.Resize.BorderBrush}"
                  BorderThickness="0,1,0,0">
                  <Grid>
                    <Thumb
                      x:Name="PART_ResizeVerticalThumb"
                      Width="Auto"
                      Height="10"
                      Margin="0,0,0,-90"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Top"
                      Cursor="SizeNS"
                      Template="{DynamicResource ResizeVerticalThumbControlTemplate}" />
                    <Thumb
                      x:Name="PART_ResizeBothThumb"
                      Width="10"
                      Height="10"
                      Margin="0,0,0,-90"
                      HorizontalAlignment="Right"
                      VerticalAlignment="Top"
                      Cursor="SizeNWSE"
                      Template="{DynamicResource ResizeBothThumbControlTemplate}" />
                  </Grid>
                </Border>
              </Grid>
            </Grid>
          </Border>
        </Grid>
      </Popup>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="ResizeMode" Value="None">
        <Setter TargetName="resizeBorder" Property="Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="ResizeMode" Value="Both">
        <Setter TargetName="PART_ResizeVerticalThumb" Property="Visibility" Value="Collapsed" />
        <Setter TargetName="PART_ResizeBothThumb" Property="Visibility" Value="Visible" />
        <Setter TargetName="resizeBorder" Property="Visibility" Value="Visible" />
      </Trigger>
      <Trigger Property="ResizeMode" Value="Vertical">
        <Setter TargetName="PART_ResizeBothThumb" Property="Visibility" Value="Collapsed" />
        <Setter TargetName="PART_ResizeVerticalThumb" Property="Visibility" Value="Visible" />
        <Setter TargetName="resizeBorder" Property="Visibility" Value="Visible" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="iconImage" Property="Opacity" Value="0.25" />
      </Trigger>
      <Trigger Property="Size" Value="Small">
        <Setter TargetName="iconImage" Property="Source" Value="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter TargetName="iconImage" Property="Width" Value="16" />
        <Setter TargetName="iconImage" Property="Height" Value="16" />
        <Setter TargetName="iconImage" Property="Margin" Value="2" />
      </Trigger>
      <Trigger Property="Size" Value="Middle">
        <Setter TargetName="iconImage" Property="Source" Value="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter TargetName="iconImage" Property="VerticalAlignment" Value="Center" />
        <Setter TargetName="PART_ButtonBorder" Property="VerticalAlignment" Value="Stretch" />
        <Setter TargetName="iconImage" Property="Width" Value="16" />
        <Setter TargetName="iconImage" Property="Height" Value="16" />
        <Setter TargetName="iconImage" Property="Margin" Value="2" />
      </Trigger>
      <Trigger Property="IsDropDownOpen" Value="True">
        <Setter TargetName="PART_ButtonBorder" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.BorderBrush}" />
        <Setter TargetName="PART_ButtonBorder" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Background}" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
          <Condition Property="IsDropDownOpen" Value="False" />
        </MultiTrigger.Conditions>
        <Setter TargetName="PART_ButtonBorder" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Background}" />
        <Setter TargetName="PART_ButtonBorder" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.BorderBrush}" />
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style x:Key="QuickAccessToolbarStyle" TargetType="{x:Type Fluent:QuickAccessToolBar}">
    <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource AncestorType=Window}}" />
    <Setter Property="Template" Value="{DynamicResource QuickAccessToolbarControlTemplate}" />
  </Style>

  <ControlTemplate x:Key="QuickAccessToolbarControlTemplate" TargetType="{x:Type Fluent:QuickAccessToolBar}">
    <DockPanel x:Name="PART_RootPanel" KeyboardNavigation.TabNavigation="Local">
      <ContentControl
        x:Name="menuContentControl"
        HorizontalAlignment="Right"
        DockPanel.Dock="Right"
        Focusable="False">
        <Fluent:DropDownButton
          x:Name="PART_MenuDownButton"
          Width="13"
          Height="22"
          HorizontalAlignment="Right"
          VerticalAlignment="Stretch"
          CanAddToQuickAccessToolBar="False"
          DockPanel.Dock="Right"
          Icon="pack://application:,,,/Fluent;Component/Themes/Images/QuickAccessToolBarDropDown.png"
          IsEnabled="{TemplateBinding IsEnabled}"
          KeyboardNavigation.TabIndex="3"
          Size="Small"
          Style="{DynamicResource ToolbarDropDownButtonStyle}"
          ToolTip="{Binding Source={x:Static Fluent:RibbonLocalization.Current}, Path=Localization.QuickAccessToolBarDropDownButtonTooltip, Mode=OneWay}"
          Visibility="{Binding IsMenuDropDownVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}">
          <Fluent:GroupSeparatorMenuItem Header="{Binding Source={x:Static Fluent:RibbonLocalization.Current}, Path=Localization.QuickAccessToolBarMenuHeader, Mode=OneWay}" Style="{DynamicResource MenuGroupSeparatorStyle}" />
          <StackPanel x:Name="PART_MenuPanel" />
          <Separator x:Name="menuSeparator" Style="{DynamicResource MenuSeparatorStyle}" />
          <Fluent:MenuItem
            x:Name="PART_ShowBelow"
            CanAddToQuickAccessToolBar="False"
            Header="{Binding Source={x:Static Fluent:RibbonLocalization.Current}, Path=Localization.QuickAccessToolBarMenuShowBelow, Mode=OneWay}" />
          <Fluent:MenuItem
            x:Name="PART_ShowAbove"
            CanAddToQuickAccessToolBar="False"
            Header="{Binding Source={x:Static Fluent:RibbonLocalization.Current}, Path=Localization.QuickAccessToolBarMenuShowAbove, Mode=OneWay}"
            Visibility="Collapsed" />
        </Fluent:DropDownButton>
      </ContentControl>

      <Fluent:DropDownButton
        x:Name="PART_ToolbarDownButton"
        Width="13"
        Height="22"
        HorizontalAlignment="Right"
        VerticalAlignment="Stretch"
        Fluent:KeyTip.Keys="00"
        DockPanel.Dock="Right"
        Icon="pack://application:,,,/Fluent;Component/Themes/Images/QuickAccessToolBarExtender.png"
        IsEnabled="{TemplateBinding IsEnabled}"
        KeyboardNavigation.TabIndex="2"
        KeyboardNavigation.TabNavigation="Local"
        Size="Small"
        Style="{DynamicResource ToolbarDropDownButtonStyle}"
        ToolTip="{Binding Source={x:Static Fluent:RibbonLocalization.Current}, Path=Localization.QuickAccessToolBarMoreControlsButtonTooltip, Mode=OneWay}"
        Visibility="Collapsed">
        <Fluent:DropDownButton.ContextMenu>
          <ContextMenu />
        </Fluent:DropDownButton.ContextMenu>

        <StackPanel
          Width="Auto"
          Height="26"
          Margin="-1"
          Background="{TemplateBinding Background}"
          Orientation="Horizontal">
          <StackPanel
            x:Name="PART_ToolBarOverflowPanel"
            Width="Auto"
            Height="Auto"
            Margin="1,0,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Center"
            Orientation="Horizontal" />
          <Label
            x:Name="popupContentControl"
            Width="13"
            Height="22"
            Margin="1,0"
            Padding="0"
            HorizontalAlignment="Left"
            VerticalAlignment="Center"
            Background="{x:Null}"
            Focusable="False" />
        </StackPanel>
      </Fluent:DropDownButton>

      <StackPanel
        x:Name="PART_ToolBarPanel"
        Width="Auto"
        Height="Auto"
        VerticalAlignment="Stretch"
        KeyboardNavigation.TabIndex="1"
        KeyboardNavigation.TabNavigation="Local"
        Orientation="Horizontal" />
    </DockPanel>
    <ControlTemplate.Triggers>
      <Trigger Property="CanQuickAccessLocationChanging" Value="False">
        <Setter TargetName="PART_ShowBelow" Property="Visibility" Value="Collapsed" />
        <Setter TargetName="PART_ShowAbove" Property="Visibility" Value="Collapsed" />
        <Setter TargetName="menuSeparator" Property="Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="ShowAboveRibbon" Value="False">
        <Setter TargetName="PART_ShowBelow" Property="Visibility" Value="Collapsed" />
        <Setter TargetName="PART_ShowAbove" Property="Visibility" Value="Visible" />
      </Trigger>
      <Trigger Property="HasOverflowItems" Value="True">
        <Setter TargetName="PART_ToolbarDownButton" Property="Visibility" Value="Visible" />
        <Setter TargetName="popupContentControl" Property="Content" Value="{Binding ElementName=PART_MenuDownButton, Mode=OneWay}" />
        <Setter TargetName="menuContentControl" Property="Content" Value="{x:Null}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
</ResourceDictionary>