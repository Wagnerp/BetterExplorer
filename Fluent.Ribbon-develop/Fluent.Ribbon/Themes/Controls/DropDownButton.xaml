<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:Converters="clr-namespace:Fluent.Converters"
  xmlns:Fluent="clr-namespace:Fluent"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  mc:Ignorable="d">
  <Style x:Key="RibbonDropDownButtonStyle" TargetType="{x:Type Fluent:DropDownButton}">
    <Setter Property="Template" Value="{DynamicResource RibbonDropDownButtonControlTemplate}" />
    <Setter Property="Height" Value="68" />
    <Setter Property="Width" Value="Auto" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.LabelTextBrush}" />
    <Setter Property="SnapsToDevicePixels" Value="False" />
    <Style.Triggers>
      <Trigger Property="Size" Value="Large">
        <Setter Property="Height" Value="68" />
      </Trigger>
      <Trigger Property="Size" Value="Middle">
        <Setter Property="Height" Value="22" />
      </Trigger>
      <Trigger Property="Size" Value="Small">
        <Setter Property="Height" Value="22" />
        <Setter Property="Width" Value="32" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <ControlTemplate x:Key="RibbonDropDownButtonControlTemplate" TargetType="{x:Type Fluent:DropDownButton}">
    <ControlTemplate.Resources>
      <Style BasedOn="{StaticResource MenuSeparatorStyle}" TargetType="{x:Type Separator}" />
    </ControlTemplate.Resources>
    <Grid>
      <Border
        x:Name="PART_ButtonBorder"
        Height="Auto"
        HorizontalAlignment="Left"
        VerticalAlignment="Stretch"
        Background="{TemplateBinding Background}"
        BorderBrush="{TemplateBinding BorderBrush}"
        BorderThickness="{TemplateBinding BorderThickness}"
        d:LayoutOverrides="Width, Height">
        <Grid Height="Auto">
          <StackPanel
            x:Name="stackPanel"
            Width="Auto"
            Orientation="Vertical"
            d:LayoutOverrides="Width, Height">
            <ContentPresenter
              x:Name="iconImage"
              Width="32"
              Height="32"
              Margin="3,2,3,1"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              Content="{Binding LargeIcon, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static Converters:StaticConverters.ObjectToImageConverter}}"
              SnapsToDevicePixels="True" />
            <Fluent:TwoLineLabel
              x:Name="controlLabel"
              Margin="2,0,2,2"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              HasGlyph="{TemplateBinding HasTriangle}"
              Style="{DynamicResource TwoLineLabelStyle}"
              Text="{TemplateBinding Header}" />
          </StackPanel>
        </Grid>
      </Border>
      <Popup
        x:Name="PART_Popup"
        Grid.ColumnSpan="2"
        Margin="0,0,-4,0"
        VerticalAlignment="Top"
        AllowsTransparency="True"
        IsOpen="{TemplateBinding IsDropDownOpen}"
        Placement="Bottom"
        PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
        <Grid
          Name="DropDown"
          Margin="0"
          VerticalAlignment="Top"
          SnapsToDevicePixels="True">
          <Border
            x:Name="PART_DropDownBorder"
            MinWidth="{TemplateBinding ActualWidth}"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Top"
            Background="{DynamicResource Fluent.Ribbon.Brushes.DropDown.BackgroundBrush}"
            BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.DropDown.BorderBrush}"
            BorderThickness="1"
            CornerRadius="1"
            SnapsToDevicePixels="True"
            d:LayoutOverrides="Width, Height">
            <Grid
              Width="Auto"
              Height="Auto"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Top">
              <Border
                Width="Auto"
                Height="Auto"
                VerticalAlignment="Top"
                BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.DropDown.BackgroundBrush}"
                BorderThickness="1"
                CornerRadius="1" />
              <Grid
                Margin="1"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top">
                <Grid.RowDefinitions>
                  <RowDefinition Height="*" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <ScrollViewer
                  x:Name="PART_ScrollViewer"
                  MaxHeight="{TemplateBinding MaxDropDownHeight}"
                  Margin="1"
                  HorizontalScrollBarVisibility="Hidden"
                  IsTabStop="False"
                  SnapsToDevicePixels="True"
                  Style="{DynamicResource MenuScrollViewer}"
                  VerticalScrollBarVisibility="Auto">
                  <StackPanel
                    IsItemsHost="True"
                    KeyboardNavigation.DirectionalNavigation="Local"
                    Orientation="Vertical" />
                </ScrollViewer>
                <Border
                  x:Name="resizeBorder"
                  Grid.Row="1"
                  Height="11"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Top"
                  Background="{DynamicResource Fluent.Ribbon.Brushes.DropDown.Resize.BackgoundBrush}"
                  BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.DropDown.Resize.BorderBrush}"
                  BorderThickness="0,1,0,0"
                  CornerRadius="0,0,1,1">
                  <Grid>
                    <Thumb
                      x:Name="PART_ResizeVerticalThumb"
                      Width="Auto"
                      Height="10"
                      Margin="0,0,0,-90"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Top"
                      Cursor="SizeNS"
                      Template="{DynamicResource ResizeVerticalThumbControlTemplate}" />
                    <Thumb
                      x:Name="PART_ResizeBothThumb"
                      Width="10"
                      Height="10"
                      Margin="0,0,0,-90"
                      HorizontalAlignment="Right"
                      VerticalAlignment="Top"
                      Cursor="SizeNWSE"
                      Template="{DynamicResource ResizeBothThumbControlTemplate}" />
                  </Grid>
                </Border>
              </Grid>
            </Grid>
          </Border>
        </Grid>
      </Popup>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="ResizeMode" Value="None">
        <Setter TargetName="resizeBorder" Property="Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="ResizeMode" Value="Both">
        <Setter TargetName="PART_ResizeVerticalThumb" Property="Visibility" Value="Collapsed" />
        <Setter TargetName="PART_ResizeBothThumb" Property="Visibility" Value="Visible" />
        <Setter TargetName="resizeBorder" Property="Visibility" Value="Visible" />
      </Trigger>
      <Trigger Property="ResizeMode" Value="Vertical">
        <Setter TargetName="PART_ResizeBothThumb" Property="Visibility" Value="Collapsed" />
        <Setter TargetName="PART_ResizeVerticalThumb" Property="Visibility" Value="Visible" />
        <Setter TargetName="resizeBorder" Property="Visibility" Value="Visible" />
      </Trigger>
      <Trigger Property="Size" Value="Small">
        <Setter TargetName="stackPanel" Property="Orientation" Value="Horizontal" />
        <Setter TargetName="iconImage" Property="Content" Value="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static Converters:StaticConverters.ObjectToImageConverter}}" />
        <Setter TargetName="controlLabel" Property="HasTwoLines" Value="False" />
        <Setter TargetName="controlLabel" Property="Text" Value="" />
        <Setter TargetName="iconImage" Property="Width" Value="16" />
        <Setter TargetName="iconImage" Property="Height" Value="16" />
        <Setter TargetName="iconImage" Property="Margin" Value="2,0,0,0" />
        <Setter TargetName="controlLabel" Property="Margin" Value="-2,0,2,1" />
        <Setter TargetName="controlLabel" Property="Width" Value="10" />
        <Setter TargetName="controlLabel" Property="VerticalAlignment" Value="Center" />
      </Trigger>
      <Trigger Property="Size" Value="Middle">
        <Setter TargetName="stackPanel" Property="Orientation" Value="Horizontal" />
        <Setter TargetName="iconImage" Property="Content" Value="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static Converters:StaticConverters.ObjectToImageConverter}}" />
        <Setter TargetName="stackPanel" Property="Width" Value="Auto" />
        <Setter TargetName="iconImage" Property="VerticalAlignment" Value="Center" />
        <Setter TargetName="controlLabel" Property="HasTwoLines" Value="False" />
        <Setter TargetName="controlLabel" Property="Margin" Value="2,0,2,1" />
        <Setter TargetName="PART_ButtonBorder" Property="VerticalAlignment" Value="Stretch" />
        <Setter TargetName="iconImage" Property="Width" Value="16" />
        <Setter TargetName="iconImage" Property="Height" Value="16" />
        <Setter TargetName="iconImage" Property="Margin" Value="2,0,2,0" />
        <Setter TargetName="controlLabel" Property="VerticalAlignment" Value="Center" />
      </Trigger>
      <Trigger Property="IsDropDownOpen" Value="True">
        <Setter TargetName="PART_ButtonBorder" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.BorderBrush}" />
        <Setter TargetName="PART_ButtonBorder" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Background}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="iconImage" Property="Opacity" Value="0.5" />
        <Setter TargetName="controlLabel" Property="Opacity" Value="0.5" />
        <Setter TargetName="iconImage" Property="Effect">
          <Setter.Value>
            <Fluent:GrayscaleEffect />
          </Setter.Value>
        </Setter>
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
          <Condition Property="IsDropDownOpen" Value="False" />
        </MultiTrigger.Conditions>
        <Setter TargetName="PART_ButtonBorder" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Background}" />
        <Setter TargetName="PART_ButtonBorder" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.BorderBrush}" />
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
</ResourceDictionary>