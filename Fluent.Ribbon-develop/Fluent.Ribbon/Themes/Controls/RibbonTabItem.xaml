<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:Fluent="clr-namespace:Fluent"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  mc:Ignorable="d">
  <ControlTemplate x:Key="RibbonTabItemControlTemplate" TargetType="{x:Type Fluent:RibbonTabItem}">
    <Grid
      x:Name="grid"
      Height="Auto"
      Background="{TemplateBinding Background}">
      <Border
        x:Name="border3"
        Grid.ColumnSpan="2"
        Margin="0,0,0,1">
        <Border
          x:Name="border5"
          Margin="0"
          Background="{Binding Group.Background, RelativeSource={RelativeSource TemplatedParent}, FallbackValue=Transparent}"
          BorderThickness="0"
          OpacityMask="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabItem.Contextual.Background.OpacityMask}" />
      </Border>
      <Grid
        x:Name="selectedGrid"
        Grid.ColumnSpan="1"
        Margin="0"
        Visibility="Collapsed">
        <Rectangle
          x:Name="rectangle"
          Height="1"
          Margin="0"
          VerticalAlignment="Bottom"
          Fill="{TemplateBinding ActiveTabBackground}"
          StrokeThickness="0" />
        <Rectangle
          x:Name="rectangle1"
          Height="1.2"
          Margin="1.8,0"
          VerticalAlignment="Bottom"
          Fill="{TemplateBinding ActiveTabBackground}"
          StrokeThickness="0" />
        <Rectangle
          x:Name="rectangle2"
          Height="2"
          Margin="2,0"
          VerticalAlignment="Bottom"
          Fill="{TemplateBinding ActiveTabBackground}"
          StrokeThickness="0" />
        <Border
          x:Name="border"
          Margin="1,0,1,2"
          VerticalAlignment="Stretch"
          Background="{TemplateBinding ActiveTabBackground}"
          BorderBrush="{TemplateBinding ActiveTabBorderBrush}"
          BorderThickness="1,1,1,0">
          <Border
            x:Name="border_Copy3"
            Margin="0"
            VerticalAlignment="Stretch"
            BorderBrush="{TemplateBinding ActiveTabBackground}"
            BorderThickness="1,1,1,0"
            CornerRadius="2,2,0,0" />
        </Border>
        <Border
          x:Name="border1"
          Width="2"
          Height="2"
          Margin="0"
          HorizontalAlignment="Left"
          VerticalAlignment="Bottom"
          BorderBrush="{TemplateBinding ActiveTabBorderBrush}"
          BorderThickness="0,0,1,1" />
        <Border
          x:Name="border2"
          Width="2"
          Height="2"
          Margin="0"
          HorizontalAlignment="Right"
          VerticalAlignment="Bottom"
          BorderBrush="{TemplateBinding ActiveTabBorderBrush}"
          BorderThickness="1,0,0,1" />
        <Border
          x:Name="bottomBorder"
          Height="1"
          Margin="0,0,0,-1"
          HorizontalAlignment="Stretch"
          VerticalAlignment="Bottom"
          BorderBrush="{TemplateBinding ActiveTabBackground}"
          BorderThickness="0,1" />
      </Grid>
      <Border
        x:Name="PART_ContentContainer"
        Grid.ColumnSpan="1"
        Margin="6,2,4,0"
        Padding="15,0,0,0"
        HorizontalAlignment="Stretch"
        VerticalAlignment="Stretch">
        <ContentControl
          Height="Auto"
          Margin="5,1,5,4"
          HorizontalAlignment="Center"
          VerticalAlignment="Center"
          AutomationProperties.AutomationId="{TemplateBinding Name}"
          AutomationProperties.Name="{TemplateBinding Header}"
          Content="{TemplateBinding Header}"
          ContentTemplate="{TemplateBinding HeaderTemplate}" />
      </Border>
      <Grid
        x:Name="separatorGrid"
        Grid.Column="1"
        Width="1"
        Margin="0"
        HorizontalAlignment="Right"
        Visibility="Collapsed">
        <Rectangle
          x:Name="separatorRectangle1"
          Width="1"
          Margin="0"
          Fill="{TemplateBinding BorderBrush}"
          Stroke="{TemplateBinding BorderBrush}" />
      </Grid>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="PART_ContentContainer" Property="Opacity" Value="0.5" />
      </Trigger>
      <Trigger Property="Selector.IsSelected" Value="False">
        <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabItem.Foreground}" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="HasRightGroupBorder" Value="False" />
          <Condition Property="HasLeftGroupBorder" Value="True" />
        </MultiTrigger.Conditions>
        <Setter TargetName="border5" Property="Margin" Value="2,0,0,0" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="HasLeftGroupBorder" Value="False" />
          <Condition Property="HasRightGroupBorder" Value="True" />
        </MultiTrigger.Conditions>
        <Setter TargetName="border5" Property="Margin" Value="0,0,2,0" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="HasLeftGroupBorder" Value="False" />
          <Condition Property="HasRightGroupBorder" Value="False" />
        </MultiTrigger.Conditions>
        <Setter TargetName="border5" Property="Margin" Value="0,0,0,0" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="HasLeftGroupBorder" Value="True" />
          <Condition Property="HasRightGroupBorder" Value="True" />
        </MultiTrigger.Conditions>
        <Setter TargetName="border5" Property="Margin" Value="2,0,2,0" />
      </MultiTrigger>
      <Trigger Property="Group" Value="{x:Null}">
        <Setter TargetName="border3" Property="Visibility" Value="Collapsed" />
        <Setter TargetName="separatorGrid" Property="Margin" Value="-1,0,0,1" />
        <Setter TargetName="border_Copy3" Property="Visibility" Value="Collapsed" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Selector.IsSelected" Value="True" />
          <Condition Property="IsMinimized" Value="False" />
        </MultiTrigger.Conditions>
        <Setter TargetName="selectedGrid" Property="Visibility" Value="Visible" />
        <Setter Property="Foreground" Value="{Binding Group.Foreground, RelativeSource={RelativeSource Self}}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Selector.IsSelected" Value="True" />
          <Condition Property="IsMinimized" Value="False" />
          <Condition Property="Group" Value="{x:Null}" />
        </MultiTrigger.Conditions>
        <Setter TargetName="selectedGrid" Property="Visibility" Value="Visible" />
        <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabItem.Selected.Foreground}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabItem.MouseOver.Background}" />
        <Setter Property="Foreground" Value="{Binding Group.Foreground, RelativeSource={RelativeSource Self}}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
          <Condition Property="Group" Value="{x:Null}" />
        </MultiTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabItem.MouseOver.Background}" />
        <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabItem.Selected.Foreground}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
          <Condition Property="Selector.IsSelected" Value="False" />
          <Condition Property="IsMinimized" Value="False" />
          <Condition Property="Group" Value="{x:Null}" />
        </MultiTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabItem.MouseOver.Background}" />
        <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabItem.Selected.Foreground}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Selector.IsSelected" Value="True" />
          <Condition Property="IsMinimized" Value="True" />
          <Condition Property="IsOpen" Value="True" />
        </MultiTrigger.Conditions>
        <Setter TargetName="selectedGrid" Property="Visibility" Value="Visible" />
        <Setter TargetName="grid" Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{Binding Group.Foreground, RelativeSource={RelativeSource Self}}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Selector.IsSelected" Value="True" />
          <Condition Property="IsMinimized" Value="True" />
          <Condition Property="IsOpen" Value="True" />
          <Condition Property="Group" Value="{x:Null}" />
        </MultiTrigger.Conditions>
        <Setter TargetName="selectedGrid" Property="Visibility" Value="Visible" />
        <Setter TargetName="grid" Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabItem.Selected.Foreground}" />
      </MultiTrigger>
      <Trigger Property="IsSeparatorVisible" Value="True">
        <Setter TargetName="separatorGrid" Property="Visibility" Value="Visible" />
        <Setter TargetName="PART_ContentContainer" Property="Margin" Value="6,2,6,0" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style x:Key="RibbonTabItemStyle" TargetType="{x:Type Fluent:RibbonTabItem}">
    <Setter Property="FocusVisualStyle" Value="{DynamicResource ControlStyleEmptyFocus}" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="Height" Value="Auto" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="IsMinimized" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:RibbonTabControl}}, Path=IsMinimized, Mode=OneWay, FallbackValue=False}" />
    <Setter Property="IsOpen" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:RibbonTabControl}}, Path=IsDropDownOpen, Mode=OneWay, FallbackValue=True}" />
    <Setter Property="Template" Value="{DynamicResource RibbonTabItemControlTemplate}" />
    <Setter Property="Indent" Value="12" />
    <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabItem.Selected.Foreground}" />
    <Setter Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabItem.BorderBrush}" />
    <Setter Property="ActiveTabBackground" Value="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabItem.Active.Background}" />
    <Setter Property="ActiveTabBorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabItem.BorderBrush}" />
    <Setter Property="Fluent:RibbonProperties.MouseOverBackground" Value="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabItem.MouseOver.Background}" />
    <Setter Property="HeaderTemplate">
      <Setter.Value>
        <DataTemplate>
          <TextBlock
            HorizontalAlignment="Left"
            VerticalAlignment="Center"
            Text="{Binding}"
            TextTrimming="None"
            TextWrapping="NoWrap" />
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Fluent:RibbonProperties.AppTheme" Value="{DynamicResource Fluent.Ribbon.AppTheme}" />
    <Style.Triggers>
      <Trigger Property="Group" Value="{x:Null}">
        <Setter Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabItem.BorderBrush}" />
      </Trigger>
      <Trigger Property="Fluent:RibbonProperties.AppTheme" Value="BaseLight">
        <Setter Property="Fluent:RibbonProperties.MouseOverForeground" Value="{DynamicResource Fluent.Ribbon.Brushes.HighlightBrush}" />
      </Trigger>
      <Trigger Property="Fluent:RibbonProperties.AppTheme" Value="BaseDark">
        <Setter Property="Fluent:RibbonProperties.MouseOverForeground" Value="{DynamicResource GrayBrush8}" />
      </Trigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding IsContextual, RelativeSource={RelativeSource Self}}" Value="True" />
          <Condition Binding="{Binding Group.Visibility, RelativeSource={RelativeSource Self}}" Value="Collapsed" />
        </MultiDataTrigger.Conditions>
        <Setter Property="Visibility" Value="Collapsed" />
      </MultiDataTrigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>