<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:Converters="clr-namespace:Fluent.Converters"
  xmlns:Fluent="clr-namespace:Fluent"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  mc:Ignorable="d">
  <ControlTemplate x:Key="ResizeBothThumbControlTemplate" TargetType="{x:Type Thumb}">
    <Grid Background="Transparent">
      <Rectangle
        Width="2"
        Height="2"
        Margin="0,0,2,1"
        HorizontalAlignment="Right"
        VerticalAlignment="Bottom"
        Fill="{DynamicResource WhiteBrush}"
        StrokeThickness="0" />
      <Rectangle
        Width="2"
        Height="2"
        Margin="0,0,2,5"
        HorizontalAlignment="Right"
        VerticalAlignment="Bottom"
        Fill="{DynamicResource WhiteBrush}"
        StrokeThickness="0" />
      <Rectangle
        Width="2"
        Height="2"
        Margin="0,0,6,1"
        HorizontalAlignment="Right"
        VerticalAlignment="Bottom"
        Fill="{DynamicResource WhiteBrush}"
        StrokeThickness="0" />
      <Rectangle
        Width="2"
        Height="2"
        Margin="0,0,3,2"
        HorizontalAlignment="Right"
        VerticalAlignment="Bottom"
        Fill="{DynamicResource BlackBrush}"
        StrokeThickness="0" />
      <Rectangle
        Width="2"
        Height="2"
        Margin="0,0,3,6"
        HorizontalAlignment="Right"
        VerticalAlignment="Bottom"
        Fill="{DynamicResource BlackBrush}"
        StrokeThickness="0" />
      <Rectangle
        Width="2"
        Height="2"
        Margin="0,0,7,2"
        HorizontalAlignment="Right"
        VerticalAlignment="Bottom"
        Fill="{DynamicResource BlackBrush}"
        StrokeThickness="0" />
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="ResizeVerticalThumbControlTemplate" TargetType="{x:Type Thumb}">
    <Grid Background="Transparent">
      <StackPanel
        Margin="0,1,0,0"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        Orientation="Horizontal"
        d:LayoutOverrides="Height">
        <Grid
          Width="Auto"
          Height="Auto"
          Margin="1,0,0,0"
          HorizontalAlignment="Left">
          <Rectangle
            Width="2"
            Height="2"
            Margin="0"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Fill="{DynamicResource WhiteBrush}"
            StrokeThickness="0" />
          <Rectangle
            Width="2"
            Height="2"
            Margin="0,0,1,1"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Fill="{DynamicResource BlackBrush}"
            StrokeThickness="0" />
        </Grid>
        <Grid
          Width="Auto"
          Height="Auto"
          Margin="1,0,0,0"
          HorizontalAlignment="Left">
          <Rectangle
            Width="2"
            Height="2"
            Margin="0"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Fill="{DynamicResource WhiteBrush}"
            StrokeThickness="0" />
          <Rectangle
            Width="2"
            Height="2"
            Margin="0,0,1,1"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Fill="{DynamicResource BlackBrush}"
            StrokeThickness="0" />
        </Grid>
        <Grid
          Width="Auto"
          Height="Auto"
          Margin="1,0,0,0"
          HorizontalAlignment="Left">
          <Rectangle
            Width="2"
            Height="2"
            Margin="0"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Fill="{DynamicResource WhiteBrush}"
            StrokeThickness="0" />
          <Rectangle
            Width="2"
            Height="2"
            Margin="0,0,1,1"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Fill="{DynamicResource BlackBrush}"
            StrokeThickness="0" />
        </Grid>
        <Grid
          Width="Auto"
          Height="Auto"
          Margin="1,0,0,0"
          HorizontalAlignment="Left">
          <Rectangle
            Width="2"
            Height="2"
            Margin="0"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Fill="{DynamicResource WhiteBrush}"
            StrokeThickness="0" />
          <Rectangle
            Width="2"
            Height="2"
            Margin="0,0,1,1"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Fill="{DynamicResource BlackBrush}"
            StrokeThickness="0" />
        </Grid>
      </StackPanel>
    </Grid>
  </ControlTemplate>

  <!--  Menu Item Template  -->
  <ControlTemplate x:Key="MenuItemTemplate" TargetType="{x:Type MenuItem}">
    <ControlTemplate.Resources>
      <ResourceDictionary>
        <Style
          x:Key="{x:Type ScrollViewer}"
          BasedOn="{StaticResource MenuScrollViewer}"
          TargetType="{x:Type ScrollViewer}" />
      </ResourceDictionary>
    </ControlTemplate.Resources>
    <Grid Background="{TemplateBinding Background}">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="25" />
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>
      <Border
        x:Name="border"
        Grid.Column="0"
        Grid.ColumnSpan="3"
        Width="Auto"
        Margin="0"
        HorizontalAlignment="Stretch"
        Background="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Background}"
        BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.BorderBrush}"
        BorderThickness="1"
        Visibility="Collapsed" />
      <ContentPresenter
        x:Name="textBlock"
        Grid.Column="1"
        Width="Auto"
        Height="Auto"
        Margin="5,3,3,3"
        VerticalAlignment="Center"
        ContentSource="Header"
        RecognizesAccessKey="True"
        d:LayoutOverrides="Width" />
      <Image
        x:Name="image"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        SnapsToDevicePixels="True"
        Source="{DynamicResource MenuCheckedImage}"
        Stretch="None"
        Visibility="Collapsed" />
      <ContentPresenter
        x:Name="iconImage"
        Width="16"
        Height="16"
        Margin="3,2,2,2"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        Content="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static Converters:StaticConverters.ObjectToImageConverter}}"
        SnapsToDevicePixels="True" />
      <TextBlock
        x:Name="gestureTextBlock"
        Grid.Column="2"
        Width="Auto"
        Height="Auto"
        Margin="3,3,15,3"
        VerticalAlignment="Center"
        Text="{TemplateBinding InputGestureText}" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="InputGestureText" Value="{x:Null}">
        <Setter TargetName="gestureTextBlock" Property="Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="InputGestureText" Value="">
        <Setter TargetName="gestureTextBlock" Property="Visibility" Value="Collapsed" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Icon" Value="{x:Null}" />
          <Condition Property="IsChecked" Value="True" />
        </MultiTrigger.Conditions>
        <Setter TargetName="image" Property="Visibility" Value="Visible" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsHighlighted" Value="True" />
          <Condition Property="IsEnabled" Value="True" />
        </MultiTrigger.Conditions>
        <Setter TargetName="border" Property="Visibility" Value="Visible" />
      </MultiTrigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="iconImage" Property="Opacity" Value="0.5" />
        <Setter TargetName="image" Property="Opacity" Value="0.5" />
        <Setter TargetName="textBlock" Property="Opacity" Value="0.5" />
        <Setter TargetName="gestureTextBlock" Property="Opacity" Value="0.5" />
        <Setter TargetName="iconImage" Property="Effect">
          <Setter.Value>
            <Fluent:GrayscaleEffect />
          </Setter.Value>
        </Setter>
        <Setter TargetName="image" Property="Effect">
          <Setter.Value>
            <Fluent:GrayscaleEffect />
          </Setter.Value>
        </Setter>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <!--  Header Menu Item Template  -->
  <ControlTemplate x:Key="HeaderMenuItemTemplate" TargetType="{x:Type MenuItem}">
    <ControlTemplate.Resources>
      <ResourceDictionary>
        <Style
          x:Key="{x:Type ScrollViewer}"
          BasedOn="{StaticResource MenuScrollViewer}"
          TargetType="{x:Type ScrollViewer}" />
      </ResourceDictionary>
    </ControlTemplate.Resources>
    <Grid Background="{TemplateBinding Background}">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="25" />
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>
      <Border
        x:Name="border"
        Grid.Column="0"
        Grid.ColumnSpan="3"
        Width="Auto"
        Margin="0"
        HorizontalAlignment="Stretch"
        Background="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Background}"
        BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.BorderBrush}"
        BorderThickness="1"
        Visibility="Collapsed" />
      <ContentPresenter
        x:Name="textBlock"
        Grid.Column="1"
        Width="Auto"
        Height="Auto"
        Margin="5,3,3,3"
        VerticalAlignment="Center"
        ContentSource="Header"
        RecognizesAccessKey="True"
        d:LayoutOverrides="Width" />
      <Image
        x:Name="image"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        SnapsToDevicePixels="True"
        Source="{DynamicResource MenuCheckedImage}"
        Stretch="None"
        Visibility="Collapsed" />
      <ContentPresenter
        x:Name="iconImage"
        Width="16"
        Height="16"
        Margin="3,2,2,2"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        Content="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static Converters:StaticConverters.ObjectToImageConverter}}"
        RecognizesAccessKey="True"
        SnapsToDevicePixels="True" />
      <Path
        x:Name="path"
        Grid.Column="3"
        Width="4"
        Height="7"
        Margin="1,0,9,0"
        HorizontalAlignment="Right"
        Data="M0,0L1,1 0,2z"
        Fill="{DynamicResource Fluent.Ribbon.MenuItem.SubMenu.Arrow.Fill}"
        Stretch="Fill"
        Stroke="{x:Null}" />
      <Popup
        x:Name="PART_Popup"
        Grid.ColumnSpan="2"
        Margin="0,0,-4,0"
        VerticalAlignment="Top"
        AllowsTransparency="True"
        Focusable="False"
        IsOpen="{TemplateBinding IsSubmenuOpen}"
        Placement="Right"
        PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
        <Grid
          Name="DropDown"
          Margin="0"
          VerticalAlignment="Stretch"
          SnapsToDevicePixels="True">
          <Border
            x:Name="DropDownBorder"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Background="{DynamicResource Fluent.Ribbon.Brushes.DropDown.BackgroundBrush}"
            BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.DropDown.BorderBrush}"
            BorderThickness="1"
            SnapsToDevicePixels="True"
            d:LayoutOverrides="Width, Height">
            <Grid
              Width="Auto"
              Height="Auto"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch">
              <Border
                Width="Auto"
                Height="Auto"
                VerticalAlignment="Stretch"
                BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.DropDown.BackgroundBrush}"
                BorderThickness="1" />
              <Grid
                Margin="1"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch">
                <Grid.RowDefinitions>
                  <RowDefinition Height="*" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Path
                  Grid.RowSpan="2"
                  Width="1"
                  Height="Auto"
                  Margin="24,0,0,0"
                  HorizontalAlignment="Left"
                  Data="M0,0L0,1"
                  Fill="{x:Null}"
                  Stretch="Fill"
                  Stroke="{DynamicResource Fluent.Ribbon.Brushes.Separator.BorderBrush}"
                  Visibility="Visible" />
                <ScrollViewer
                  x:Name="PART_ScrollViewer"
                  Margin="1"
                  SnapsToDevicePixels="True"
                  Style="{DynamicResource MenuScrollViewer}">
                  <StackPanel
                    x:Name="PART_MenuPanel"
                    IsItemsHost="True"
                    KeyboardNavigation.DirectionalNavigation="Contained"
                    Orientation="Vertical" />
                </ScrollViewer>
                <Border
                  x:Name="resizeBorder"
                  Grid.Row="1"
                  Height="11"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Top"
                  Background="{DynamicResource Fluent.Ribbon.Brushes.DropDown.Resize.BackgoundBrush}"
                  BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.DropDown.Resize.BorderBrush}"
                  BorderThickness="0,1,0,0">
                  <Grid>
                    <Thumb
                      x:Name="PART_ResizeVerticalThumb"
                      Width="Auto"
                      Height="10"
                      Margin="0,0,0,-90"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Top"
                      Cursor="SizeNS"
                      Template="{DynamicResource ResizeVerticalThumbControlTemplate}" />
                    <Thumb
                      x:Name="PART_ResizeBothThumb"
                      Width="10"
                      Height="10"
                      Margin="0,0,0,-90"
                      HorizontalAlignment="Right"
                      VerticalAlignment="Top"
                      Cursor="SizeNWSE"
                      Template="{DynamicResource ResizeBothThumbControlTemplate}" />
                  </Grid>
                </Border>
              </Grid>
            </Grid>
          </Border>
        </Grid>
      </Popup>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="Fluent:MenuItem.ResizeMode" Value="None">
        <Setter TargetName="resizeBorder" Property="Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="Fluent:MenuItem.ResizeMode" Value="Both">
        <Setter TargetName="PART_ResizeVerticalThumb" Property="Visibility" Value="Collapsed" />
        <Setter TargetName="PART_ResizeBothThumb" Property="Visibility" Value="Visible" />
        <Setter TargetName="resizeBorder" Property="Visibility" Value="Visible" />
      </Trigger>
      <Trigger Property="Fluent:MenuItem.ResizeMode" Value="Vertical">
        <Setter TargetName="PART_ResizeBothThumb" Property="Visibility" Value="Collapsed" />
        <Setter TargetName="PART_ResizeVerticalThumb" Property="Visibility" Value="Visible" />
        <Setter TargetName="resizeBorder" Property="Visibility" Value="Visible" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Icon" Value="{x:Null}" />
          <Condition Property="IsChecked" Value="True" />
        </MultiTrigger.Conditions>
        <Setter TargetName="image" Property="Visibility" Value="Visible" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsHighlighted" Value="True" />
          <Condition Property="IsEnabled" Value="True" />
        </MultiTrigger.Conditions>
        <Setter TargetName="border" Property="Visibility" Value="Visible" />
      </MultiTrigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="iconImage" Property="Opacity" Value="0.5" />
        <Setter TargetName="image" Property="Opacity" Value="0.5" />
        <Setter TargetName="textBlock" Property="Opacity" Value="0.5" />
        <Setter TargetName="iconImage" Property="Effect">
          <Setter.Value>
            <Fluent:GrayscaleEffect />
          </Setter.Value>
        </Setter>
        <Setter TargetName="image" Property="Effect">
          <Setter.Value>
            <Fluent:GrayscaleEffect />
          </Setter.Value>
        </Setter>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <!--  Splited Menu Item Template  -->
  <ControlTemplate x:Key="SplitedMenuItemTemplate" TargetType="{x:Type MenuItem}">
    <ControlTemplate.Resources>
      <ResourceDictionary>
        <Style
          x:Key="{x:Type ScrollViewer}"
          BasedOn="{StaticResource MenuScrollViewer}"
          TargetType="{x:Type ScrollViewer}" />
      </ResourceDictionary>
    </ControlTemplate.Resources>
    <Grid Background="{TemplateBinding Background}">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="25" />
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>

      <Rectangle
        Grid.Column="2"
        Width="1"
        Margin="0,4,23,4"
        HorizontalAlignment="Right"
        Stroke="{DynamicResource Fluent.Ribbon.Brushes.Separator.BorderBrush}" />

      <Grid
        Grid.Column="0"
        Grid.ColumnSpan="3"
        Width="Auto"
        Margin="0"
        HorizontalAlignment="Stretch">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="0.905*" />
          <ColumnDefinition x:Name="columnDefinition" Width="23" />
        </Grid.ColumnDefinitions>
        <Border
          x:Name="PART_ButtonBorder"
          Margin="0,0,-1,0"
          Background="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Background}"
          BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.BorderBrush}"
          BorderThickness="1"
          Visibility="Collapsed" />
        <Border
          x:Name="Submenu_Border"
          Grid.Column="1"
          Width="Auto"
          Margin="0"
          HorizontalAlignment="Stretch"
          Background="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Background}"
          BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.BorderBrush}"
          BorderThickness="1"
          CornerRadius="2"
          Visibility="Collapsed" />
      </Grid>
      <ContentPresenter
        x:Name="textBlock"
        Grid.Column="1"
        Width="Auto"
        Height="Auto"
        Margin="5,3,3,3"
        VerticalAlignment="Center"
        ContentSource="Header"
        RecognizesAccessKey="True"
        d:LayoutOverrides="Width" />
      <Image
        x:Name="image"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        SnapsToDevicePixels="True"
        Source="{DynamicResource MenuCheckedImage}"
        Stretch="None"
        Visibility="Collapsed" />
      <ContentPresenter
        x:Name="iconImage"
        Width="16"
        Height="16"
        Margin="3,2,2,2"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        Content="{Binding Icon, Converter={x:Static Converters:StaticConverters.ObjectToImageConverter}, RelativeSource={RelativeSource TemplatedParent}}"
        RecognizesAccessKey="True"
        SnapsToDevicePixels="True" />
      <Path
        x:Name="path"
        Grid.Column="3"
        Width="4"
        Height="7"
        Margin="1,0,9,0"
        HorizontalAlignment="Right"
        Data="M0,0L1,1 0,2z"
        Fill="{DynamicResource Fluent.Ribbon.MenuItem.SubMenu.Arrow.Fill}"
        Stretch="Fill"
        Stroke="{x:Null}" />
      <Popup
        x:Name="PART_Popup"
        Grid.ColumnSpan="2"
        Margin="0,0,-4,0"
        VerticalAlignment="Top"
        AllowsTransparency="True"
        Focusable="False"
        IsOpen="{TemplateBinding IsSubmenuOpen}"
        Placement="Right"
        PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
        <Grid
          x:Name="DropDown"
          Margin="0"
          VerticalAlignment="Stretch"
          SnapsToDevicePixels="True">
          <Border
            x:Name="DropDownBorder"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Background="{DynamicResource Fluent.Ribbon.Brushes.DropDown.BackgroundBrush}"
            BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.DropDown.BorderBrush}"
            BorderThickness="1"
            CornerRadius="1"
            SnapsToDevicePixels="True"
            d:LayoutOverrides="Width, Height">
            <Grid
              Width="Auto"
              Height="Auto"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch">
              <Border
                Width="Auto"
                Height="Auto"
                VerticalAlignment="Stretch"
                BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.DropDown.BackgroundBrush}"
                CornerRadius="1" />
              <Grid
                Margin="1"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch">
                <Grid.RowDefinitions>
                  <RowDefinition Height="*" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Path
                  Grid.RowSpan="2"
                  Width="1"
                  Height="Auto"
                  Margin="24,0,0,0"
                  HorizontalAlignment="Left"
                  Data="M0,0L0,1"
                  Fill="{x:Null}"
                  Stretch="Fill"
                  Stroke="{DynamicResource Fluent.Ribbon.Brushes.Separator.BorderBrush}"
                  Visibility="Visible" />
                <ScrollViewer
                  x:Name="PART_ScrollViewer"
                  Margin="1"
                  SnapsToDevicePixels="True"
                  Style="{DynamicResource MenuScrollViewer}">
                  <StackPanel
                    x:Name="PART_MenuPanel"
                    IsItemsHost="True"
                    KeyboardNavigation.DirectionalNavigation="Contained"
                    Orientation="Vertical" />
                </ScrollViewer>
                <Border
                  x:Name="resizeBorder"
                  Grid.Row="1"
                  Height="11"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Top"
                  Background="{DynamicResource Fluent.Ribbon.Brushes.DropDown.Resize.BackgoundBrush}"
                  BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.DropDown.Resize.BorderBrush}"
                  BorderThickness="0,1,0,0">
                  <Grid>
                    <Thumb
                      x:Name="PART_ResizeVerticalThumb"
                      Width="Auto"
                      Height="10"
                      Margin="0,0,0,-90"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Top"
                      Cursor="SizeNS"
                      Template="{DynamicResource ResizeVerticalThumbControlTemplate}" />
                    <Thumb
                      x:Name="PART_ResizeBothThumb"
                      Width="10"
                      Height="10"
                      Margin="0,0,0,-90"
                      HorizontalAlignment="Right"
                      VerticalAlignment="Top"
                      Cursor="SizeNWSE"
                      Template="{DynamicResource ResizeBothThumbControlTemplate}" />
                  </Grid>
                </Border>
              </Grid>
            </Grid>
          </Border>
        </Grid>
      </Popup>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="Fluent:MenuItem.ResizeMode" Value="None">
        <Setter TargetName="resizeBorder" Property="Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="Fluent:MenuItem.ResizeMode" Value="Both">
        <Setter TargetName="PART_ResizeVerticalThumb" Property="Visibility" Value="Collapsed" />
        <Setter TargetName="PART_ResizeBothThumb" Property="Visibility" Value="Visible" />
        <Setter TargetName="resizeBorder" Property="Visibility" Value="Visible" />
      </Trigger>
      <Trigger Property="Fluent:MenuItem.ResizeMode" Value="Vertical">
        <Setter TargetName="PART_ResizeBothThumb" Property="Visibility" Value="Collapsed" />
        <Setter TargetName="PART_ResizeVerticalThumb" Property="Visibility" Value="Visible" />
        <Setter TargetName="resizeBorder" Property="Visibility" Value="Visible" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Icon" Value="{x:Null}" />
          <Condition Property="IsChecked" Value="True" />
        </MultiTrigger.Conditions>
        <Setter TargetName="image" Property="Visibility" Value="Visible" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsHighlighted" Value="True" />
          <Condition Property="IsEnabled" Value="True" />
        </MultiTrigger.Conditions>
        <Setter TargetName="PART_ButtonBorder" Property="Visibility" Value="Visible" />
        <Setter TargetName="Submenu_Border" Property="Visibility" Value="Visible" />
      </MultiTrigger>
      <Trigger Property="IsSubmenuOpen" Value="True">
        <Setter TargetName="Submenu_Border" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Background}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="iconImage" Property="Opacity" Value="0.5" />
        <Setter TargetName="image" Property="Opacity" Value="0.5" />
        <Setter TargetName="textBlock" Property="Opacity" Value="0.5" />
        <Setter TargetName="iconImage" Property="Effect">
          <Setter.Value>
            <Fluent:GrayscaleEffect />
          </Setter.Value>
        </Setter>
        <Setter TargetName="image" Property="Effect">
          <Setter.Value>
            <Fluent:GrayscaleEffect />
          </Setter.Value>
        </Setter>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <!--  Menu Item Style  -->
  <Style x:Key="FluentDefaultSystemMenuItemStyle" TargetType="{x:Type MenuItem}">
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
    <Setter Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.MenuItem.Background}" />
    <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.LabelTextBrush}" />
    <Setter Property="Template" Value="{DynamicResource MenuItemTemplate}" />
    <Style.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Fluent:MenuItem.IsSplited" Value="True" />
          <Condition Property="HasItems" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="Template" Value="{DynamicResource SplitedMenuItemTemplate}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Fluent:MenuItem.IsSplited" Value="False" />
          <Condition Property="HasItems" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="Template" Value="{DynamicResource HeaderMenuItemTemplate}" />
      </MultiTrigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>