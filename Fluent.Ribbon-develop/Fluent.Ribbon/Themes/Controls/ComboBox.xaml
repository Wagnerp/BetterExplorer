<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:Converters="clr-namespace:Fluent.Converters"
  xmlns:Fluent="clr-namespace:Fluent"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  mc:Ignorable="d">
  <Style x:Key="RibbonComboButtonStyle" TargetType="{x:Type Fluent:ToggleButton}">
    <Setter Property="Template" Value="{DynamicResource RibbonComboButtonControlTemplate}" />
    <Setter Property="Height" Value="68" />
    <Setter Property="Width" Value="Auto" />
    <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.LabelTextBrush}" />
    <Setter Property="FocusVisualStyle" Value="{DynamicResource ControlStyleEmptyFocus}" />
  </Style>

  <ControlTemplate x:Key="RibbonComboButtonControlTemplate" TargetType="{x:Type Fluent:ToggleButton}">
    <Border
      x:Name="border"
      Height="Auto"
      HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
      VerticalAlignment="{TemplateBinding VerticalAlignment}"
      Background="{DynamicResource WhiteBrush}"
      BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.Control.BorderBrush}"
      BorderThickness="{TemplateBinding BorderThickness}"
      CornerRadius="0">
      <Grid Height="Auto" HorizontalAlignment="Right">
        <Rectangle
          x:Name="rectangle"
          Fill="{DynamicResource WhiteBrush}"
          StrokeThickness="0"
          Visibility="Collapsed" />
        <Path
          x:Name="path"
          Width="5"
          Height="3"
          Margin="3,0,3,0"
          HorizontalAlignment="Center"
          VerticalAlignment="Center"
          Data="M0,0L1,1 2,0z"
          Fill="{DynamicResource Fluent.Ribbon.Brushes.LabelTextBrush}"
          IsHitTestVisible="False"
          Stretch="Fill" />
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="IsPressed" Value="True">
        <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.BorderBrush}" />
        <Setter TargetName="border" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Background}" />
      </Trigger>
      <Trigger Property="IsChecked" Value="True">
        <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.BorderBrush}" />
        <Setter TargetName="border" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Background}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="path" Property="Opacity" Value="0.5" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
          <Condition Property="IsPressed" Value="False" />
          <Condition Property="IsChecked" Value="False" />
        </MultiTrigger.Conditions>
        <Setter TargetName="rectangle" Property="Fill" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Background}" />
        <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.BorderBrush}" />
        <Setter TargetName="rectangle" Property="Visibility" Value="Visible" />
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <ControlTemplate x:Key="ComboboxControlTemplate" TargetType="{x:Type Fluent:ComboBox}">
    <ControlTemplate.Resources>
      <ResourceDictionary>
        <Style
          x:Key="{x:Type ScrollBar}"
          BasedOn="{StaticResource ScrollBarWhite}"
          TargetType="{x:Type ScrollBar}" />
        <Style
          x:Key="{x:Type ScrollViewer}"
          BasedOn="{StaticResource ScrollViewerStyle}"
          TargetType="{x:Type ScrollViewer}" />
      </ResourceDictionary>
    </ControlTemplate.Resources>
    <Border
      Width="Auto"
      Height="22"
      Background="Transparent">
      <Grid
        Width="Auto"
        Height="Auto"
        Background="Transparent">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <StackPanel
          x:Name="stackPanel"
          Grid.ColumnSpan="1"
          Margin="0,0,4,0"
          HorizontalAlignment="Stretch"
          Orientation="Horizontal">
          <ContentPresenter
            x:Name="iconImage"
            Width="16"
            Height="16"
            Margin="3,0,0,0"
            VerticalAlignment="Center"
            Content="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static Converters:StaticConverters.ObjectToImageConverter}}" />
          <TextBlock
            x:Name="textBlock"
            Margin="5,0,0,0"
            VerticalAlignment="Center"
            Text="{TemplateBinding Header}"
            TextWrapping="Wrap" />
        </StackPanel>

        <Border
          x:Name="PART_ContentBorder"
          Grid.Column="1"
          Grid.ColumnSpan="1"
          Width="{TemplateBinding InputWidth}"
          Height="Auto"
          HorizontalAlignment="Right"
          Background="{DynamicResource Fluent.Ribbon.Brushes.TextBox.Background}"
          BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.TextBox.BorderBrush}"
          BorderThickness="1,1,1,1"
          d:LayoutOverrides="GridBox">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="13" />
            </Grid.ColumnDefinitions>
            <Fluent:ToggleButton
              x:Name="ToggleButton"
              Grid.ColumnSpan="2"
              Height="Auto"
              Margin="0"
              VerticalAlignment="Stretch"
              BorderThickness="0"
              CanAddToQuickAccessToolBar="False"
              ClickMode="Press"
              Focusable="false"
              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
              IsDefinitive="False"
              Style="{DynamicResource RibbonComboButtonStyle}" />
            <ContentPresenter
              x:Name="PART_ContentSite"
              Margin="3,0,3,0"
              HorizontalAlignment="Left"
              VerticalAlignment="Center"
              Content="{TemplateBinding SelectionBoxItem}"
              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
              IsHitTestVisible="False" />
            <Image
              x:Name="PART_SelectedImage"
              Width="Auto"
              Height="Auto"
              Margin="0"
              HorizontalAlignment="Left"
              VerticalAlignment="Top"
              IsHitTestVisible="False"
              Stretch="None"
              Visibility="Collapsed" />
            <TextBox
              x:Name="PART_EditableTextBox"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"
              Background="{DynamicResource Fluent.Ribbon.Brushes.TextBox.Background}"
              BorderThickness="0,0,0,0"
              Focusable="True"
              Foreground="{TemplateBinding Foreground}"
              IsReadOnly="{TemplateBinding IsReadOnly}"
              TextWrapping="NoWrap"
              Visibility="Hidden" />
          </Grid>
        </Border>
        <Popup
          x:Name="PART_Popup"
          Grid.ColumnSpan="2"
          Margin="0,0,-4,0"
          VerticalAlignment="Top"
          AllowsTransparency="True"
          Focusable="False"
          IsOpen="{TemplateBinding IsDropDownOpen}"
          Placement="Bottom"
          PlacementTarget="{Binding ElementName=PART_ContentBorder}"
          PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
          <Popup.Resources>
            <ResourceDictionary>
              <Style
                x:Key="{x:Type ScrollBar}"
                BasedOn="{StaticResource ScrollBarWhite}"
                TargetType="{x:Type ScrollBar}" />
            </ResourceDictionary>
          </Popup.Resources>
          <Grid
            Name="DropDown"
            Margin="0"
            VerticalAlignment="Top"
            SnapsToDevicePixels="True">
            <Grid.RowDefinitions>
              <RowDefinition Height="*" />
              <RowDefinition Height="4" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="4" />
            </Grid.ColumnDefinitions>
            <Rectangle
              Grid.Row="1"
              Grid.Column="1"
              Width="4"
              Height="4"
              Margin="-1,-1,0,0"
              HorizontalAlignment="Left"
              VerticalAlignment="Top"
              StrokeThickness="0">
              <Rectangle.Fill>
                <RadialGradientBrush Center="0.017,0.002" GradientOrigin="0.017,0.002" RadiusX="0.984" RadiusY="1">
                  <GradientStop Offset="0" Color="#3F000000" />
                  <GradientStop Offset="1" Color="Transparent" />
                </RadialGradientBrush>
              </Rectangle.Fill>
            </Rectangle>
            <Rectangle
              Grid.Row="0"
              Grid.Column="1"
              Width="4"
              Height="4"
              Margin="-1,3,0,0"
              HorizontalAlignment="Left"
              VerticalAlignment="Top"
              StrokeThickness="0">
              <Rectangle.Fill>
                <RadialGradientBrush Center="0.032,1.01" GradientOrigin="0.032,1.01" RadiusX="0.984" RadiusY="1">
                  <GradientStop Offset="0" Color="#3F000000" />
                  <GradientStop Offset="1" Color="Transparent" />
                </RadialGradientBrush>
              </Rectangle.Fill>
            </Rectangle>
            <Rectangle
              Grid.Row="1"
              Grid.Column="0"
              Width="4"
              Height="4"
              Margin="3,-1,0,0"
              HorizontalAlignment="Left"
              VerticalAlignment="Top"
              StrokeThickness="0">
              <Rectangle.Fill>
                <RadialGradientBrush Center="0.996,0.027" GradientOrigin="0.996,0.027" RadiusX="0.984" RadiusY="1">
                  <GradientStop Offset="0" Color="#3F000000" />
                  <GradientStop Offset="1" Color="Transparent" />
                </RadialGradientBrush>
              </Rectangle.Fill>
            </Rectangle>
            <Rectangle
              Grid.Row="1"
              Grid.Column="0"
              Width="Auto"
              Height="4"
              Margin="7,-1,1,0"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Top"
              StrokeThickness="0">
              <Rectangle.Fill>
                <LinearGradientBrush MappingMode="RelativeToBoundingBox" StartPoint="0.5,0" EndPoint="0.5,1">
                  <GradientStop Offset="0" Color="#3F000000" />
                  <GradientStop Offset="1" Color="Transparent" />
                </LinearGradientBrush>
              </Rectangle.Fill>
            </Rectangle>
            <Rectangle
              Grid.Row="0"
              Grid.Column="1"
              Width="4"
              Height="Auto"
              Margin="-1,7,0,1"
              HorizontalAlignment="Left"
              VerticalAlignment="Stretch"
              StrokeThickness="0">
              <Rectangle.Fill>
                <LinearGradientBrush MappingMode="RelativeToBoundingBox" StartPoint="0,0.5" EndPoint="1,0.5">
                  <GradientStop Offset="0" Color="#3F000000" />
                  <GradientStop Offset="1" Color="Transparent" />
                </LinearGradientBrush>
              </Rectangle.Fill>
            </Rectangle>
            <Border
              x:Name="PART_DropDownBorder"
              Grid.ColumnSpan="1"
              MinWidth="{Binding ActualWidth, ElementName=PART_ContentBorder}"
              Margin="0"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Top"
              Background="{DynamicResource Fluent.Ribbon.Brushes.DropDown.BackgroundBrush}"
              BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.DropDown.BorderBrush}"
              BorderThickness="1"
              CornerRadius="1"
              SnapsToDevicePixels="True"
              d:LayoutOverrides="Width, Height">
              <Grid
                Width="Auto"
                Height="Auto"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                KeyboardNavigation.DirectionalNavigation="Cycle">
                <Border
                  Width="Auto"
                  Height="Auto"
                  VerticalAlignment="Stretch"
                  BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.DropDown.BackgroundBrush}"
                  BorderThickness="1"
                  CornerRadius="1" />
                <Grid
                  Margin="1"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Top">
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                  </Grid.RowDefinitions>
                  <Rectangle
                    Grid.RowSpan="3"
                    Width="1"
                    Height="Auto"
                    Margin="24,0,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Stretch"
                    Fill="{x:Null}"
                    Stretch="Fill"
                    Stroke="{DynamicResource Fluent.Ribbon.Brushes.Separator.BorderBrush}"
                    Visibility="Visible" />
                  <ContentControl x:Name="upResizeContent" />
                  <Grid
                    x:Name="PART_MenuPanel"
                    Grid.Row="1"
                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                    VerticalAlignment="Top">
                    <Grid.RowDefinitions>
                      <RowDefinition Height="*" />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <ScrollViewer
                      x:Name="PART_ScrollViewer"
                      Margin="1"
                      VerticalAlignment="Stretch"
                      Background="{DynamicResource WhiteBrush}"
                      BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.Control.BorderBrush}"
                      BorderThickness="0,0,0,1"
                      Focusable="False"
                      KeyboardNavigation.DirectionalNavigation="None"
                      SnapsToDevicePixels="True">
                      <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </ScrollViewer>
                    <ContentPresenter
                      x:Name="menuPresenter"
                      Grid.Row="1"
                      VerticalAlignment="Top"
                      ContentSource="Menu"
                      KeyboardNavigation.DirectionalNavigation="None" />
                  </Grid>
                  <ContentControl x:Name="downResizeContent" Grid.Row="2">
                    <Border
                      x:Name="resizeBorder"
                      Height="11"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Top"
                      Background="{DynamicResource Fluent.Ribbon.Brushes.DropDown.Resize.BackgoundBrush}"
                      BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.DropDown.Resize.BorderBrush}"
                      BorderThickness="0,1,0,0"
                      CornerRadius="0,0,1,1"
                      RenderTransformOrigin="0.5, 0.5">
                      <Grid>
                        <Thumb
                          x:Name="PART_ResizeVerticalThumb"
                          Width="Auto"
                          Height="10"
                          Margin="0,0,0,-90"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Top"
                          Cursor="SizeNS"
                          Template="{DynamicResource ResizeVerticalThumbControlTemplate}" />
                        <Thumb
                          x:Name="PART_ResizeBothThumb"
                          Width="10"
                          Height="10"
                          Margin="0,0,0,-90"
                          HorizontalAlignment="Right"
                          VerticalAlignment="Top"
                          Cursor="SizeNWSE"
                          Template="{DynamicResource ResizeBothThumbControlTemplate}" />
                      </Grid>
                    </Border>
                  </ContentControl>
                </Grid>
              </Grid>
            </Border>
          </Grid>
        </Popup>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="Menu" Value="{x:Null}">
        <Setter TargetName="PART_ScrollViewer" Property="BorderThickness" Value="0" />
      </Trigger>
      <Trigger Property="ResizeMode" Value="None">
        <Setter TargetName="resizeBorder" Property="Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="ResizeMode" Value="Both">
        <Setter TargetName="PART_ResizeVerticalThumb" Property="Visibility" Value="Collapsed" />
        <Setter TargetName="PART_ResizeBothThumb" Property="Visibility" Value="Visible" />
        <Setter TargetName="resizeBorder" Property="Visibility" Value="Visible" />
      </Trigger>
      <Trigger Property="ResizeMode" Value="Vertical">
        <Setter TargetName="PART_ResizeBothThumb" Property="Visibility" Value="Collapsed" />
        <Setter TargetName="PART_ResizeVerticalThumb" Property="Visibility" Value="Visible" />
        <Setter TargetName="resizeBorder" Property="Visibility" Value="Visible" />
      </Trigger>
      <Trigger Property="Icon" Value="{x:Null}">
        <Setter TargetName="iconImage" Property="Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="Size" Value="Middle">
        <Setter TargetName="textBlock" Property="Visibility" Value="Collapsed" />
        <Setter TargetName="PART_ContentBorder" Property="HorizontalAlignment" Value="Stretch" />
      </Trigger>
      <Trigger Property="Size" Value="Small">
        <Setter TargetName="stackPanel" Property="Visibility" Value="Collapsed" />
        <Setter TargetName="PART_ContentBorder" Property="HorizontalAlignment" Value="Stretch" />
      </Trigger>
      <Trigger Property="InputWidth" Value="NaN">
        <Setter TargetName="PART_ContentBorder" Property="HorizontalAlignment" Value="Stretch" />
      </Trigger>

      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="PART_EditableTextBox" Property="IsEnabled" Value="False" />
        <Setter TargetName="PART_ContentBorder" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.TextBox.Disabled.Background}" />
        <Setter TargetName="PART_ContentBorder" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.TextBox.Disabled.BorderBrush}" />
        <Setter TargetName="PART_EditableTextBox" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.TextBox.Disabled.Background}" />
        <Setter TargetName="iconImage" Property="Opacity" Value="0.5" />
        <Setter TargetName="textBlock" Property="Opacity" Value="0.5" />
        <Setter TargetName="iconImage" Property="Effect">
          <Setter.Value>
            <Fluent:GrayscaleEffect />
          </Setter.Value>
        </Setter>
      </Trigger>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter TargetName="PART_ContentBorder" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.TextBox.MouseOver.BorderBrush}" />
        <Setter TargetName="PART_EditableTextBox" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.TextBox.MouseOver.Background}" />
        <Setter TargetName="PART_ContentBorder" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.TextBox.MouseOver.Background}" />
      </Trigger>

      <Trigger Property="IsKeyboardFocusWithin" Value="True">
        <Setter TargetName="PART_ContentBorder" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.TextBox.MouseOver.BorderBrush}" />
        <Setter TargetName="PART_EditableTextBox" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.TextBox.MouseOver.Background}" />
        <Setter TargetName="PART_ContentBorder" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.TextBox.MouseOver.Background}" />
      </Trigger>
      <Trigger Property="HasItems" Value="false">
        <Setter TargetName="PART_DropDownBorder" Property="MinHeight" Value="95" />
      </Trigger>
      <Trigger Property="IsGrouping" Value="true">
        <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
      </Trigger>
      <Trigger Property="IsEditable" Value="true">
        <Setter Property="IsTabStop" Value="false" />
        <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
        <Setter TargetName="PART_ContentSite" Property="Visibility" Value="Hidden" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style TargetType="{x:Type Fluent:ComboBox}">
    <Setter Property="Template" Value="{DynamicResource ComboboxControlTemplate}" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
    <Setter Property="FocusVisualStyle" Value="{DynamicResource ControlStyleEmptyFocus}" />
    <Setter Property="IsEditable" Value="True" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
    <Style.Triggers>
      <Trigger Property="ItemContainerStyleSelector" Value="{x:Null}">
        <Setter Property="ItemContainerStyle" Value="{DynamicResource ComboBoxItemStyle}" />
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>