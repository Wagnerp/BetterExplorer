<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:Fluent="clr-namespace:Fluent">

  <BooleanToVisibilityConverter x:Key="boolToVisibilityConverter" />
  <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />

  <ControlTemplate x:Key="RibbonTabControlToggleButtonControlTemplate" TargetType="{x:Type Fluent:ToggleButton}">
    <Border
      x:Name="border"
      Width="22"
      Height="22"
      HorizontalAlignment="Left"
      VerticalAlignment="Stretch"
      Background="Transparent"
      BorderBrush="Transparent"
      BorderThickness="1">
      <Border.ToolTip>
        <Fluent:ScreenTip
          x:Name="screenTip"
          Title="{Binding Source={x:Static Fluent:RibbonLocalization.Current}, Path=Localization.MinimizeButtonScreenTipTitle, Mode=OneWay}"
          Text="{Binding Source={x:Static Fluent:RibbonLocalization.Current}, Path=Localization.MinimizeButtonScreenTipText, Mode=OneWay}" />
      </Border.ToolTip>
      <Grid>
        <Image
          x:Name="iconImage"
          Width="Auto"
          Height="Auto"
          Margin="2"
          HorizontalAlignment="Center"
          VerticalAlignment="Center"
          Source="/Fluent;Component/Themes/Images/RibbonCollapse.png"
          Stretch="None" />
        <Image
          x:Name="iconImageChecked"
          Width="Auto"
          Height="Auto"
          Margin="2"
          HorizontalAlignment="Center"
          VerticalAlignment="Center"
          Source="/Fluent;Component/Themes/Images/RibbonExpand.png"
          Stretch="None"
          Visibility="Collapsed" />
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="IsChecked" Value="True">
        <Setter TargetName="iconImage" Property="Visibility" Value="Collapsed" />
        <Setter TargetName="iconImageChecked" Property="Visibility" Value="Visible" />
        <Setter TargetName="screenTip" Property="Title" Value="{Binding Source={x:Static Fluent:RibbonLocalization.Current}, Path=Localization.ExpandButtonScreenTipTitle, Mode=OneWay}" />
        <Setter TargetName="screenTip" Property="Text" Value="{Binding Source={x:Static Fluent:RibbonLocalization.Current}, Path=Localization.ExpandButtonScreenTipText, Mode=OneWay}" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.BorderBrush}" />
        <Setter TargetName="border" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Background}" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
          <Condition Property="IsPressed" Value="False" />
        </MultiTrigger.Conditions>
        <Setter TargetName="border" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Background}" />
        <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.BorderBrush}" />
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style x:Key="RibbonTabControlToggleButtonStyle" TargetType="{x:Type Fluent:ToggleButton}">
    <Setter Property="Template" Value="{DynamicResource RibbonTabControlToggleButtonControlTemplate}" />
    <Setter Property="Height" Value="22" />
    <Setter Property="Width" Value="22" />
    <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.LabelTextBrush}" />
    <Setter Property="CanAddToQuickAccessToolBar" Value="False" />
  </Style>

  <Style x:Key="RibbonTabControlStyle" TargetType="{x:Type Fluent:RibbonTabControl}">
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabControl.Foreground}" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Template" Value="{DynamicResource RibbonTabControlControlTemplate}" />
  </Style>

  <ControlTemplate x:Key="RibbonTabControlControlTemplate" TargetType="{x:Type Fluent:RibbonTabControl}">
    <ControlTemplate.Resources>
      <Style TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ScrollViewer}">
              <Grid
                x:Name="Grid"
                Background="Transparent"
                IsHitTestVisible="True">
                <ScrollContentPresenter
                  x:Name="PART_ScrollContentPresenter"
                  Margin="{TemplateBinding Padding}"
                  CanContentScroll="{TemplateBinding CanContentScroll}"
                  Content="{TemplateBinding Content}"
                  ContentTemplate="{TemplateBinding ContentTemplate}"
                  IsHitTestVisible="True" />
                <RepeatButton
                  Width="13"
                  Height="Auto"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Stretch"
                  Command="{x:Static ScrollBar.LineLeftCommand}"
                  CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                  Focusable="false"
                  Style="{DynamicResource ScrollButtonStyle}">
                  <RepeatButton.Visibility>
                    <MultiBinding
                      Converter="{StaticResource MenuScrollingVisibilityConverter}"
                      ConverterParameter="0"
                      FallbackValue="Visibility.Collapsed">
                      <Binding Path="ComputedHorizontalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                      <Binding Path="HorizontalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
                      <Binding Path="ExtentWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                      <Binding Path="ViewportWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                    </MultiBinding>
                  </RepeatButton.Visibility>
                  <Path
                    Width="3"
                    Height="5"
                    Margin="0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M0,0L1,1 1,-1z"
                    Fill="{DynamicResource BlackBrush}"
                    Stretch="Fill"
                    Stroke="{x:Null}"
                    StrokeThickness="0" />
                </RepeatButton>
                <RepeatButton
                  Width="13"
                  Height="Auto"
                  HorizontalAlignment="Right"
                  VerticalAlignment="Stretch"
                  Command="{x:Static ScrollBar.LineRightCommand}"
                  CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                  Focusable="false"
                  Style="{DynamicResource ScrollButtonStyle}">
                  <RepeatButton.Visibility>
                    <MultiBinding
                      Converter="{StaticResource MenuScrollingVisibilityConverter}"
                      ConverterParameter="100"
                      FallbackValue="Visibility.Collapsed">
                      <Binding Path="ComputedHorizontalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                      <Binding Path="HorizontalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
                      <Binding Path="ExtentWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                      <Binding Path="ViewportWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                    </MultiBinding>
                  </RepeatButton.Visibility>
                  <Path
                    Width="3"
                    Height="5"
                    Margin="0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M1,0L0,1 0,-1z"
                    Fill="{DynamicResource BlackBrush}"
                    Stretch="Fill"
                    Stroke="{x:Null}"
                    StrokeThickness="0" />
                </RepeatButton>
              </Grid>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
        <Setter Property="CanContentScroll" Value="True" />
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="VerticalScrollBarVisibility" Value="Disabled" />
        <Setter Property="PanningMode" Value="HorizontalOnly" />
      </Style>
    </ControlTemplate.Resources>
    <Grid
      x:Name="ContentGrid"
      Height="Auto"
      VerticalAlignment="Top"
      Background="{TemplateBinding Background}"
      KeyboardNavigation.TabNavigation="Local">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition
          x:Name="rowDefinition"
          MinHeight="{TemplateBinding ContentHeight}"
          MaxHeight="{TemplateBinding ContentHeight}" />
        <RowDefinition
          x:Name="rowDefinition1"
          MinHeight="{TemplateBinding ContentGapHeight}"
          MaxHeight="{TemplateBinding ContentGapHeight}" />
      </Grid.RowDefinitions>
      <Border
        x:Name="border"
        Grid.Row="1"
        Width="Auto"
        Margin="0,-1,0,0"
        HorizontalAlignment="Stretch"
        BorderBrush="{Binding Path=SelectedItem.BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
        BorderThickness="0,1" />

      <Border
        Grid.Row="1"
        Grid.RowSpan="1"
        Margin="1,0,1,0"
        HorizontalAlignment="Stretch"
        Background="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabControl.Content.Background}"
        KeyboardNavigation.DirectionalNavigation="Contained"
        KeyboardNavigation.TabIndex="2"
        KeyboardNavigation.TabNavigation="Local"
        TextElement.Foreground="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabControl.Content.Foreground}">
        <ContentControl
          x:Name="mainContentControl"
          Margin="0"
          Focusable="False">
          <ContentPresenter
            x:Name="contentPresenter"
            Margin="0"
            HorizontalAlignment="Stretch"
            ContentSource="SelectedContent" />
        </ContentControl>
      </Border>

      <Border
        Grid.Row="2"
        Margin="0"
        VerticalAlignment="Stretch"
        Background="{Binding Path=SelectedItem.BorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />

      <Grid
        x:Name="TabsGrid"
        Grid.RowSpan="1"
        Width="Auto"
        Margin="0"
        HorizontalAlignment="Stretch"
        Background="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabControl.TabsGrid.Background}"
        KeyboardNavigation.TabIndex="1"
        TextElement.Foreground="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabControl.TabsGrid.Foreground}">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <Fluent:WindowSteeringHelperControl Grid.ColumnSpan="4" />

        <ContentPresenter
          Grid.Column="0"
          VerticalAlignment="Stretch"
          ContentSource="Menu" />

        <Fluent:RibbonScrollViewer
          Grid.Column="1"
          Width="Auto"
          Margin="0"
          HorizontalAlignment="Left"
          HorizontalScrollBarVisibility="Auto"
          IsHitTestVisible="True"
          IsTabStop="False"
          Style="{DynamicResource RibbonTabScrollViewer}"
          VerticalScrollBarVisibility="Disabled">
          <Fluent:RibbonTabsContainer
            x:Name="PART_TabsContainer"
            Height="Auto"
            Margin="0"
            HorizontalAlignment="Stretch"
            IsItemsHost="True"
            KeyboardNavigation.TabIndex="1" />
        </Fluent:RibbonScrollViewer>

        <StackPanel
          x:Name="toolbarPlaceholder"
          Grid.Column="3"
          Margin="0,0,0,1"
          HorizontalAlignment="Right"
          Orientation="Horizontal">
          <Grid Width="22" Height="22">
            <Image
              x:Name="image"
              Source="/Fluent;Component/Themes/Images/RibbonPin.png"
              Stretch="None"
              Visibility="Collapsed" />
            <Fluent:ToggleButton
              x:Name="PART_MinimizeButton"
              Width="22"
              Height="22"
              Margin="0"
              IsChecked="{Binding Path=IsMinimized, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
              Size="Small"
              Style="{DynamicResource RibbonTabControlToggleButtonStyle}"
              Visibility="{TemplateBinding CanMinimize,
                                           Converter={StaticResource boolToVisibilityConverter}}" />
          </Grid>

          <StackPanel x:Name="PART_ToolbarPanel" Orientation="Horizontal" />
        </StackPanel>
      </Grid>

      <Popup
        x:Name="PART_Popup"
        AllowsTransparency="True"
        HorizontalOffset="0"
        IsOpen="{TemplateBinding IsDropDownOpen}"
        Placement="Custom"
        PlacementTarget="{Binding Path=SelectedTabItem, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
        PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
        StaysOpen="True"
        VerticalOffset="-10">
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition MinHeight="20" MaxHeight="20" />
            <!--  Needed for overlapping Keytips  -->
            <RowDefinition MinHeight="{TemplateBinding ContentHeight}" MaxHeight="{TemplateBinding ContentHeight}" />
            <RowDefinition MinHeight="{TemplateBinding ContentGapHeight}" MaxHeight="{TemplateBinding ContentGapHeight}" />
            <RowDefinition Height="20" />
            <!--  Needed for overlapping Keytips  -->
          </Grid.RowDefinitions>
          <Border
            Grid.Row="1"
            Grid.RowSpan="2"
            Margin="1,0"
            Background="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabControl.Content.Background}"
            BorderBrush="{Binding Path=SelectedItem.BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
            BorderThickness="0,0,0,1"
            KeyboardNavigation.DirectionalNavigation="Contained"
            KeyboardNavigation.TabNavigation="Local"
            TextElement.Foreground="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabControl.Content.Foreground}">
            <ContentControl
              x:Name="popupContentControl"
              Margin="0"
              Focusable="False" />
          </Border>
        </Grid>
      </Popup>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsMinimized" Value="True">
        <Setter TargetName="rowDefinition" Property="MinHeight" Value="0" />
        <Setter TargetName="rowDefinition1" Property="MinHeight" Value="0" />
        <!--  Switch content to popup  -->
        <Setter TargetName="mainContentControl" Property="Content" Value="{x:Null}" />
        <Setter TargetName="popupContentControl" Property="Content" Value="{Binding ElementName=contentPresenter, Mode=OneWay}" />
        <!--  Switch content to popup END  -->
        <Setter TargetName="image" Property="Visibility" Value="Collapsed" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsDropDownOpen" Value="True" />
          <Condition Property="IsMinimized" Value="True" />
        </MultiTrigger.Conditions>
        <Setter TargetName="image" Property="Visibility" Value="Visible" />
        <Setter TargetName="PART_MinimizeButton" Property="Opacity" Value="0" />
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
</ResourceDictionary>