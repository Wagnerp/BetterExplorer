<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:Fluent="clr-namespace:Fluent"
  xmlns:FluentHelpers="clr-namespace:Fluent.Helpers"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  mc:Ignorable="d">
  <ControlTemplate x:Key="ApplicationMenuButtonControlTemplate" TargetType="{x:Type Fluent:ApplicationMenu}">
    <ControlTemplate.Resources>
      <Style BasedOn="{StaticResource ApplicationMenuStyle}" TargetType="{x:Type Fluent:MenuItem}" />
    </ControlTemplate.Resources>
    <Grid Margin="0">
      <ContentControl
        x:Name="buttonContent"
        Width="{Binding ActualWidth, ElementName=PART_ButtonBorder}"
        Height="{Binding ActualHeight, ElementName=PART_ButtonBorder}"
        Margin="0,0,0,0">
        <Border
          x:Name="PART_ButtonBorder"
          Height="23"
          MinWidth="60"
          Background="{TemplateBinding Background}">
          <Grid>
            <Rectangle x:Name="rectangle" />
            <ContentPresenter
              x:Name="contentPresenter"
              Margin="10,0,10,0"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              ContentSource="Header" />
          </Grid>
        </Border>
      </ContentControl>
      <Popup
        x:Name="PART_Popup"
        Grid.ColumnSpan="2"
        MaxHeight="{TemplateBinding MaxDropDownHeight}"
        Margin="0,0,-4,0"
        VerticalAlignment="Top"
        AllowsTransparency="True"
        CustomPopupPlacementCallback="{x:Static FluentHelpers:PopupHelper.SimplePlacementCallback}"
        Focusable="False"
        IsOpen="{TemplateBinding IsDropDownOpen}"
        Placement="Custom"
        PlacementTarget="{Binding ElementName=buttonContent}"
        VerticalOffset="{Binding ElementName=buttonContent, Path=ActualHeight}">
        <Grid
          Name="DropDown"
          Margin="0"
          VerticalAlignment="Top"
          SnapsToDevicePixels="True">
          <Border
            x:Name="PART_DropDownBorder"
            MinWidth="{TemplateBinding ActualWidth}"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Top"
            Background="{DynamicResource Fluent.Ribbon.Brushes.DropDown.BackgroundBrush}"
            BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.DropDown.BorderBrush}"
            BorderThickness="1"
            SnapsToDevicePixels="True"
            d:LayoutOverrides="Width, Height">
            <Grid
              Width="Auto"
              Height="Auto"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Top">
              <Grid HorizontalAlignment="Stretch" VerticalAlignment="Top">
                <Grid.RowDefinitions>
                  <RowDefinition Height="*" />
                  <RowDefinition Height="Auto" MinHeight="17" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" MinWidth="100" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <ScrollViewer
                  Grid.Row="0"
                  Grid.Column="0"
                  IsTabStop="False"
                  ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                  ScrollViewer.VerticalScrollBarVisibility="Auto"
                  Style="{DynamicResource MenuScrollViewer}">
                  <StackPanel
                    x:Name="PART_MenuPanel"
                    IsItemsHost="True"
                    KeyboardNavigation.DirectionalNavigation="Cycle"
                    Orientation="Vertical"
                    ScrollViewer.VerticalScrollBarVisibility="Auto" />
                </ScrollViewer>

                <Border
                  Grid.Row="0"
                  Grid.Column="1"
                  Width="{TemplateBinding RightPaneWidth}"
                  BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.Separator.BorderBrush}"
                  BorderThickness="1,0,0,0">
                  <ScrollViewer
                    x:Name="PART_ScrollViewer"
                    Margin="1"
                    IsTabStop="False"
                    ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                    ScrollViewer.VerticalScrollBarVisibility="Auto"
                    SnapsToDevicePixels="True"
                    Style="{DynamicResource MenuScrollViewer}">
                    <ContentPresenter x:Name="PART_RightContentPresenter" ContentSource="RightPaneContent" />
                  </ScrollViewer>
                </Border>
                <Border
                  Grid.Row="1"
                  Grid.ColumnSpan="2"
                  Margin="0"
                  Background="{DynamicResource Fluent.Ribbon.Brushes.Ribbon.Background}"
                  BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.Separator.BorderBrush}"
                  BorderThickness="0,1,0,0">
                  <ContentPresenter ContentSource="FooterPaneContent" />
                </Border>
              </Grid>
            </Grid>
          </Border>
        </Grid>
      </Popup>
    </Grid>

    <ControlTemplate.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="PART_ButtonBorder" Property="Opacity" Value="0.5" />
        <Setter TargetName="contentPresenter" Property="Effect">
          <Setter.Value>
            <Fluent:GrayscaleEffect />
          </Setter.Value>
        </Setter>
      </Trigger>
      <Trigger Property="Header" Value="{x:Null}">
        <Setter TargetName="contentPresenter" Property="Content">
          <Setter.Value>
            <Image
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              Source="pack://application:,,,/Fluent;component\Themes\Images\ApplicationMenu.png"
              Stretch="None" />
          </Setter.Value>
        </Setter>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style TargetType="{x:Type Fluent:ApplicationMenu}">
    <Setter Property="Template" Value="{DynamicResource ApplicationMenuButtonControlTemplate}" />
    <Setter Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.AccentBaseColorBrush}" />
    <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.IdealForegroundColorBrush}" />
  </Style>
</ResourceDictionary>