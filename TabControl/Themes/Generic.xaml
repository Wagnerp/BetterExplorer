<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:l="clr-namespace:Wpf.Controls"
  xmlns:r="urn:fluent-ribbon">

  <BooleanToVisibilityConverter x:Key="boolConverter" />
  <l:InverseBooleanConverter x:Key="_inverseBooleanConverter" />
  <!--
    Brushes used to define the Look of the TabControl & TabItem
  -->
  <!--  Border Brush for the TabItems and TabControl  -->
  <SolidColorBrush x:Key="TabBorderBrush" Color="#a5a5a5" />
  <!--  Tab Text Colour when Not Selected  -->
  <SolidColorBrush x:Key="TabGrayTextBrush" Color="#FF444444" />
  <!--  TabItem CloseButton Brush  -->
  <SolidColorBrush x:Key="TabCloseButtonBrush" Color="#FFADADAD" />

  <!--  TabItem Brushes  -->
  <SolidColorBrush x:Key="TabItemNormalBackground" Color="#D3D3D3" />
  <SolidColorBrush x:Key="TabItemHoverBackground" Color="#dadada" />
  <SolidColorBrush x:Key="TabItemSelectedBackground" Color="#FFEAF6FB" />
  <SolidColorBrush x:Key="NotTabItemNormalBackground" Color="#FFF5F5F5" />

  <!--  Style for the Repeat Button used to scrool the Tabs to the Left  -->
  <Style x:Key="RepeatButtonScrollLeftOrUpStyle" TargetType="{x:Type RepeatButton}">
    <Setter Property="Foreground" Value="{StaticResource TabGrayTextBrush}" />
    <Setter Property="Background" Value="{Binding Path=NotTabItemNormalBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type l:TabControl}}}" />
    <Setter Property="BorderBrush" Value="{Binding Path=BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type l:TabControl}}}" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Border
            x:Name="outerBorder"
            Padding="{TemplateBinding Padding}"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="1"
            CornerRadius="3,3,0,0">

            <Border
              x:Name="innerBorder"
              Padding="4,0,4,0"
              Background="Transparent"
              BorderBrush="Transparent"
              BorderThickness="1">
              <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                <Path
                  x:Name="path1"
                  Data="M 3,0 L0,3 3,6"
                  Fill="Transparent"
                  Stroke="{TemplateBinding Foreground}" />
                <Path
                  x:Name="path2"
                  Data="M 7,0 L4,3 7,6"
                  Fill="Transparent"
                  Stroke="{TemplateBinding Foreground}" />
              </Grid>
            </Border>

          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter Property="Background" Value="{Binding Path=TabItemMouseOverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type l:TabControl}}}" />
              <Setter Property="Foreground" Value="Black" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Background" Value="{Binding Path=TabItemMouseOverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type l:TabControl}}}" />
              <Setter TargetName="innerBorder" Property="Background" Value="#11000000" />
              <Setter TargetName="innerBorder" Property="BorderBrush" Value="#66000000" />
              <Setter Property="Foreground" Value="Black" />
              <Setter TargetName="innerBorder" Property="CornerRadius" Value="3,3,0,0" />
              <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,2,1,0" />
            </Trigger>

            <DataTrigger Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type l:TabControl}}}" Value="Left">
              <Setter TargetName="path1" Property="Data" Value="M 0,3 L3,0 6,3" />
              <Setter TargetName="path2" Property="Data" Value="M 0,7 L3,4 6,7" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type l:TabControl}}}" Value="Right">
              <Setter TargetName="path1" Property="Data" Value="M 0,3 L3,0 6,3" />
              <Setter TargetName="path2" Property="Data" Value="M 0,7 L3,4 6,7" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type l:TabControl}}}" Value="Bottom">
              <Setter TargetName="outerBorder" Property="CornerRadius" Value="0,0,3,3" />
            </DataTrigger>

          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  Style for the Repeat Button used to scrool the Tabs to the Right  -->
  <Style x:Key="RepeatButtonScrollRightOrDownStyle" TargetType="{x:Type RepeatButton}">
    <Setter Property="Foreground" Value="{StaticResource TabGrayTextBrush}" />
    <Setter Property="Background" Value="{Binding Path=NotTabItemNormalBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type l:TabControl}}}" />
    <Setter Property="BorderBrush" Value="{Binding Path=BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type l:TabControl}}}" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Border
            x:Name="outerBorder"
            Padding="{TemplateBinding Padding}"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="1"
            CornerRadius="3,3,0,0">
            <Border
              x:Name="innerBorder"
              Padding="4,0,4,0"
              Background="Transparent"
              BorderBrush="Transparent"
              BorderThickness="1">
              <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                <Path
                  x:Name="path1"
                  Data="M 0,0 L3,3 0,6"
                  Fill="Transparent"
                  Stroke="{TemplateBinding Foreground}" />
                <Path
                  x:Name="path2"
                  Data="M 4,0 L7,3 4,6"
                  Fill="Transparent"
                  Stroke="{TemplateBinding Foreground}" />
              </Grid>
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter Property="Background" Value="{Binding Path=TabItemMouseOverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type l:TabControl}}}" />
              <Setter Property="Foreground" Value="Black" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Background" Value="{Binding Path=TabItemMouseOverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type l:TabControl}}}" />
              <Setter TargetName="innerBorder" Property="Background" Value="#11000000" />
              <Setter TargetName="innerBorder" Property="BorderBrush" Value="#66000000" />
              <Setter Property="Foreground" Value="Black" />
              <Setter TargetName="innerBorder" Property="CornerRadius" Value="3,3,0,0" />
              <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,2,1,0" />
            </Trigger>

            <DataTrigger Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type l:TabControl}}}" Value="Left">
              <Setter TargetName="path1" Property="Data" Value="M 0,0 L3,3 6,0" />
              <Setter TargetName="path2" Property="Data" Value="M 0,4 L3,7 6,4" />
              <Setter TargetName="outerBorder" Property="CornerRadius" Value="0,0,3,3" />
              <Setter TargetName="innerBorder" Property="CornerRadius" Value="0,0,3,3" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type l:TabControl}}}" Value="Right">
              <Setter TargetName="path1" Property="Data" Value="M 0,0 L3,3 6,0" />
              <Setter TargetName="path2" Property="Data" Value="M 0,4 L3,7 6,4" />
              <Setter TargetName="outerBorder" Property="CornerRadius" Value="0,0,3,3" />
              <Setter TargetName="innerBorder" Property="CornerRadius" Value="0,0,3,3" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type l:TabControl}}}" Value="Bottom">
              <Setter TargetName="outerBorder" Property="CornerRadius" Value="0,0,3,3" />
              <Setter TargetName="innerBorder" Property="CornerRadius" Value="0,0,3,3" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  Style for the Toggle Button which displays a context menu listing all the Tab Headers  -->
  <Style x:Key="DropDownToggleButtonStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabControl.Content.Background}" />
    <Setter Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabItem.BorderBrush}" />
    <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabItem.Foreground}" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border
            x:Name="outerBorder"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="1"
            CornerRadius="1,1,0,0">
            <Border
              x:Name="innerBorder"
              BorderThickness="0"
              CornerRadius="1,1,0,0">
              <Grid
                Margin="0,1,0,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                ClipToBounds="False"
                SnapsToDevicePixels="False">
                <Path
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  ClipToBounds="False"
                  Data="M1,1L3,4 5,1z"
                  Fill="{TemplateBinding Foreground}"
                  SnapsToDevicePixels="True"
                  Stroke="{TemplateBinding Foreground}" />
              </Grid>
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter Property="Background" Value="{DynamicResource GrayBrush8}" />
              <Setter Property="Foreground" Value="{DynamicResource GrayBrush1}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
              <Setter Property="Background" Value="{DynamicResource GrayBrush8}" />
              <Setter TargetName="innerBorder" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.ScreenTip.BorderBrush}" />
              <Setter TargetName="innerBorder" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabItem.BorderBrush}" />
              <Setter Property="Foreground" Value="{DynamicResource GrayBrush1}" />
              <Setter TargetName="innerBorder" Property="Margin" Value="-1" />
              <Setter TargetName="innerBorder" Property="CornerRadius" Value="1,1,0,0" />
              <!--<Setter TargetName="innerBorder" Property="BorderThickness" Value="1,2,1,0" />-->
            </Trigger>

            <DataTrigger Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type l:TabControl}}}" Value="Bottom">
              <Setter TargetName="outerBorder" Property="CornerRadius" Value="0,0,1,1" />
              <Setter TargetName="innerBorder" Property="CornerRadius" Value="0,0,1,1" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  Style for the New Tab Button  -->
  <Style x:Key="NewTabButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabControl.Content.Background}" />
    <Setter Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabItem.BorderBrush}" />
    <Setter Property="Foreground" Value="{StaticResource TabGrayTextBrush}" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border
            x:Name="outerBorder"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="1"
            CornerRadius="1,1,0,0">
            <Border x:Name="innerBorder" CornerRadius="1,1,0,0">
              <Grid
                Width="16"
                Height="16"
                Margin="0,1,0,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                SnapsToDevicePixels="False">
                <ContentPresenter x:Name="Cp" Opacity="0.4" />
              </Grid>
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter Property="Background" Value="{DynamicResource GrayBrush8}" />
              <Setter Property="Foreground" Value="Black" />
              <Setter TargetName="Cp" Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Background" Value="{Binding Path=TabItemMouseOverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type l:TabControl}}}" />
              <Setter TargetName="innerBorder" Property="Background" Value="{DynamicResource GrayBrush8}" />
              <Setter TargetName="innerBorder" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabItem.BorderBrush}" />
              <Setter Property="Foreground" Value="Black" />
              <Setter TargetName="innerBorder" Property="Margin" Value="-1" />
              <Setter TargetName="innerBorder" Property="CornerRadius" Value="1,1,0,0" />
              <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,2,1,0" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type l:TabControl}}}" Value="Bottom">
              <Setter TargetName="outerBorder" Property="CornerRadius" Value="0,0,1,1" />
              <Setter TargetName="innerBorder" Property="CornerRadius" Value="0,0,1,1" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  Style for the Close Button on each TabItem  -->
  <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border
            x:Name="border"
            Width="16"
            Height="16"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="1"
            CornerRadius="2"
            SnapsToDevicePixels="True">
            <Grid
              Width="8"
              Height="8"
              HorizontalAlignment="Center"
              VerticalAlignment="Center">
              <Path
                x:Name="path1"
                Data="M0,0 L8,8"
                Stroke="{StaticResource TabCloseButtonBrush}"
                StrokeThickness="2" />
              <Path
                x:Name="path2"
                Data="M8,0 L0,8"
                Stroke="{StaticResource TabCloseButtonBrush}"
                StrokeThickness="2" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="BorderBrush" Value="{StaticResource TabCloseButtonBrush}" />
              <Setter Property="Background" Value="WhiteSmoke" />
              <Setter TargetName="path1" Property="Stroke" Value="DarkRed" />
              <Setter TargetName="path2" Property="Stroke" Value="DarkRed" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Background">
                <Setter.Value>
                  <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Offset="0" Color="#FFADADAD" />
                    <GradientStop Offset="0.5" Color="White" />
                    <GradientStop Offset="1" Color="White" />
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  TabItem Style, defines the look of a Tab Item  -->
  <Style TargetType="{x:Type l:TabItem}">
    <!--<Setter Property="Background" Value="{Binding Path=TabItemNormalBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type l:TabControl}}}" />-->
    <Setter Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabControl.Content.Background}" />
    <!--<Setter Property="BorderBrush" Value="{Binding Path=BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type l:TabControl}}}" />-->
    <Setter Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabItem.BorderBrush}" />
    <Setter Property="Padding" Value="5" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="SnapsToDevicePixels" Value="False" />
    <Setter Property="UseLayoutRounding" Value="True" />
    <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabItem.Foreground}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type l:TabItem}">
          <Border
            x:Name="Bd"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            SnapsToDevicePixels="False"
            UseLayoutRounding="True">
            <Grid
              HorizontalAlignment="Stretch"
              SnapsToDevicePixels="False"
              UseLayoutRounding="True">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="21" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>

              <Image
                Width="16"
                Height="16"
                Margin="5,0,0,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                RenderOptions.BitmapScalingMode="Fant"
                SnapsToDevicePixels="False"
                Source="{TemplateBinding Icon}"
                Stretch="None"
                UseLayoutRounding="True" />

              <Border Grid.Column="1" Margin="2,0,2,0">
                <TextBlock
                  Margin="{TemplateBinding Padding}"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Center"
                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                  Text="{TemplateBinding Header}"
                  TextTrimming="CharacterEllipsis"
                  TextWrapping="NoWrap" />
              </Border>

              <Button
                x:Name="PART_CloseButton"
                Grid.Column="2"
                Margin="5,0,5,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Style="{StaticResource CloseButtonStyle}"
                Visibility="Visible" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <!--<Setter Property="Background" Value="{Binding Path=TabItemMouseOverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type l:TabControl}}}" />-->
              <Setter Property="Background" Value="{DynamicResource GrayBrush8}" />
              <Setter Property="Foreground" Value="{DynamicResource GrayBrush1}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
              <!--<Setter Property="Background" Value="{Binding Path=TabItemSelectedBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type l:TabControl}}}" />-->
              <Setter Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.ScreenTip.BorderBrush}" />
              <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.RibbonTabItem.Selected.Foreground}" />
              <Setter TargetName="Bd" Property="Margin" Value="0" />
            </Trigger>

            <Trigger Property="TabStripPlacement" Value="Top">
              <Setter TargetName="Bd" Property="BorderThickness" Value="1,1,1,0" />
              <Setter TargetName="Bd" Property="CornerRadius" Value="1,1,0,0" />
              <Setter TargetName="Bd" Property="Margin" Value="1,0,1,-1" />
            </Trigger>

            <Trigger Property="TabStripPlacement" Value="Bottom">
              <Setter TargetName="Bd" Property="BorderThickness" Value="1,0,1,1" />
              <Setter TargetName="Bd" Property="CornerRadius" Value="0,0,1,1" />
              <Setter TargetName="Bd" Property="Margin" Value="0,-1,0,7" />
            </Trigger>

            <Trigger Property="TabStripPlacement" Value="Left">
              <Setter TargetName="Bd" Property="BorderThickness" Value="1,1,0,1" />
              <Setter TargetName="Bd" Property="CornerRadius" Value="1,0,0,0" />
              <Setter TargetName="Bd" Property="Margin" Value="0,0,0,-1" />
            </Trigger>

            <Trigger Property="TabStripPlacement" Value="Right">
              <Setter TargetName="Bd" Property="BorderThickness" Value="0,1,1,1" />
              <Setter TargetName="Bd" Property="CornerRadius" Value="0,1,0,0" />
              <Setter TargetName="Bd" Property="Margin" Value="0,0,0,-1" />
            </Trigger>

            <Trigger Property="AllowDelete" Value="false">
              <Setter TargetName="PART_CloseButton" Property="Visibility" Value="Collapsed" />
            </Trigger>

            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TabStripPlacement" Value="Top" />
                <Condition Property="IsSelected" Value="true" />
              </MultiTrigger.Conditions>
              <Setter Property="Panel.ZIndex" Value="2" />
              <Setter TargetName="Bd" Property="BorderThickness" Value="1,1,1,0" />
              <Setter TargetName="Bd" Property="CornerRadius" Value="1,1,0,0" />
              <Setter TargetName="Bd" Property="Margin" Value="1,0,1,-1" />
            </MultiTrigger>

            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TabStripPlacement" Value="Bottom" />
                <Condition Property="IsSelected" Value="true" />
              </MultiTrigger.Conditions>
              <Setter Property="Panel.ZIndex" Value="2" />
              <Setter TargetName="Bd" Property="BorderThickness" Value="1,0,1,1" />
              <Setter TargetName="Bd" Property="CornerRadius" Value="0,0,1,1" />
              <Setter TargetName="Bd" Property="Margin" Value="0,-1,0,0" />
            </MultiTrigger>

            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TabStripPlacement" Value="Left" />
                <Condition Property="IsSelected" Value="true" />
              </MultiTrigger.Conditions>
              <Setter Property="Panel.ZIndex" Value="2" />
              <Setter TargetName="Bd" Property="BorderThickness" Value="1,1,0,1" />
              <Setter TargetName="Bd" Property="CornerRadius" Value="1,0,0,1" />
              <Setter TargetName="Bd" Property="Margin" Value="0,0,0,-1" />
            </MultiTrigger>

            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TabStripPlacement" Value="Right" />
                <Condition Property="IsSelected" Value="true" />
              </MultiTrigger.Conditions>
              <Setter Property="Panel.ZIndex" Value="2" />
              <Setter TargetName="Bd" Property="BorderThickness" Value="1,1,1,1" />
              <Setter TargetName="Bd" Property="CornerRadius" Value="0,1,0,0" />
              <Setter TargetName="Bd" Property="Margin" Value="0,0,0,-1" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  Control Template for TabStripPlacement Top  -->
  <ControlTemplate x:Key="TabControlTabPlacementTop" TargetType="{x:Type l:TabControl}">
    <Grid
      KeyboardNavigation.TabNavigation="Local"
      SnapsToDevicePixels="{Binding Path=SnapsToDevicePixels, RelativeSource={RelativeSource TemplatedParent}}"
      UseLayoutRounding="True">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition x:Name="RowDefinition0" Height="Auto" />
        <RowDefinition x:Name="RowDefinition1" Height="*" />
      </Grid.RowDefinitions>

      <Border
        Grid.ColumnSpan="5"
        HorizontalAlignment="Stretch"
        VerticalAlignment="Stretch"
        Background="Transparent" />

      <!--  Toggle button which displays a context menu with a menu item for each tab which can be used to select a tab that is not in view  -->
      <ToggleButton
        x:Name="PART_DropDown"
        Grid.Column="0"
        Width="16"
        Height="22"
        Margin="0,0,0,-1"
        VerticalAlignment="Bottom"
        KeyboardNavigation.TabIndex="1"
        Style="{StaticResource DropDownToggleButtonStyle}"
        ToolTip="Display all the tabs in a menu"
        Visibility="{Binding IsUsingItemsSource, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource _inverseBooleanConverter}}" />

      <Button
        x:Name="PART_NewTabButton"
        Grid.Column="1"
        Width="24"
        Height="22"
        Margin="-1,5,0,-1"
        VerticalAlignment="Bottom"
        KeyboardNavigation.TabIndex="2"
        Style="{StaticResource NewTabButtonStyle}"
        ToolTip="Add a New tab"
        Visibility="{Binding Path=AllowAddNew, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolConverter}}">

        <Image Source="pack://application:,,,/Wpf.TabControl;component/Images/newtab.ico" />
      </Button>

      <!--  Repeat Buttons used for scrolling the TabItems into view  -->
      <RepeatButton
        x:Name="PART_RepeatLeft"
        Grid.Column="2"
        Height="22"
        Margin="-1,5,0,-1"
        VerticalAlignment="Bottom"
        Panel.ZIndex="1"
        KeyboardNavigation.TabIndex="3"
        Style="{StaticResource RepeatButtonScrollLeftOrUpStyle}"
        ToolTip="Scroll the Tab Items to the Left"
        Visibility="{Binding ElementName=TabPanel, Path=CanScrollLeftOrUp, Converter={StaticResource boolConverter}}" />

      <ScrollViewer
        x:Name="PART_ScrollViewer"
        Grid.Column="3"
        Panel.ZIndex="1"
        CanContentScroll="True"
        HorizontalScrollBarVisibility="Hidden"
        VerticalScrollBarVisibility="Disabled">
        <l:TabPanel
          x:Name="TabPanel"
          IsItemsHost="True"
          SnapsToDevicePixels="True" />
      </ScrollViewer>

      <RepeatButton
        x:Name="PART_RepeatRight"
        Grid.Column="4"
        Height="22"
        Margin="-1,5,0,-1"
        VerticalAlignment="Bottom"
        Panel.ZIndex="1"
        Style="{StaticResource RepeatButtonScrollRightOrDownStyle}"
        ToolTip="Scroll the Tab Items to the Right"
        Visibility="{Binding ElementName=TabPanel, Path=CanScrollRightOrDown, Converter={StaticResource boolConverter}}" />

      <!--  Content Panel  -->
      <Border
        x:Name="ContentPanel"
        Grid.Row="1"
        Grid.ColumnSpan="5"
        Background="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}"
        BorderBrush="{Binding Path=BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
        BorderThickness="{Binding Path=BorderThickness, RelativeSource={RelativeSource TemplatedParent}}"
        KeyboardNavigation.DirectionalNavigation="Contained"
        KeyboardNavigation.TabIndex="5"
        KeyboardNavigation.TabNavigation="Local">
        <ContentPresenter
          x:Name="PART_SelectedContentHost"
          Margin="{Binding Path=Padding, RelativeSource={RelativeSource TemplatedParent}}"
          Content="{Binding Path=SelectedContent, RelativeSource={RelativeSource TemplatedParent}}"
          ContentSource="SelectedContent"
          ContentTemplate="{Binding Path=ContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
          SnapsToDevicePixels="{Binding Path=SnapsToDevicePixels, RelativeSource={RelativeSource TemplatedParent}}" />
      </Border>
    </Grid>
  </ControlTemplate>

  <!--  Control Template for TabStripPlacement Bottom  -->
  <ControlTemplate x:Key="TabControlTabPlacementBottom" TargetType="{x:Type l:TabControl}">
    <Grid KeyboardNavigation.TabNavigation="Local" SnapsToDevicePixels="{Binding Path=SnapsToDevicePixels, RelativeSource={RelativeSource TemplatedParent}}">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition x:Name="RowDefinition0" Height="*" />
        <RowDefinition x:Name="RowDefinition1" Height="Auto" />
      </Grid.RowDefinitions>

      <!--  Toggle button which displays a context menu with a menu item for each tab which can be used to select a tab that is not in view  -->
      <ToggleButton
        x:Name="PART_DropDown"
        Grid.Row="1"
        Grid.Column="0"
        Width="16"
        Height="22"
        Margin="0,-1,0,0"
        VerticalAlignment="Top"
        Style="{StaticResource DropDownToggleButtonStyle}"
        ToolTip="Display all the tabs in a menu"
        Visibility="{Binding IsUsingItemsSource, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource _inverseBooleanConverter}}" />

      <Button
        x:Name="PART_NewTabButton"
        Grid.Row="1"
        Grid.Column="1"
        Width="24"
        Height="22"
        Margin="-1,-1,0,0"
        VerticalAlignment="Top"
        Style="{StaticResource NewTabButtonStyle}"
        ToolTip="Add a New tab"
        Visibility="{Binding Path=AllowAddNew, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolConverter}}">

        <Image Source="pack://application:,,,/Wpf.TabControl;component/Images/newtab.ico" />
      </Button>

      <!--  Repeat Buttons used for scrolling the TabItems into view  -->
      <RepeatButton
        x:Name="PART_RepeatLeft"
        Grid.Row="1"
        Grid.Column="2"
        Height="22"
        Margin="-1,-1,0,0"
        VerticalAlignment="Top"
        Panel.ZIndex="1"
        Style="{StaticResource RepeatButtonScrollLeftOrUpStyle}"
        ToolTip="Scroll the Tab Items to the Left"
        Visibility="{Binding ElementName=TabPanel, Path=CanScrollLeftOrUp, Converter={StaticResource boolConverter}}" />

      <ScrollViewer
        x:Name="PART_ScrollViewer"
        Grid.Row="1"
        Grid.Column="3"
        Panel.ZIndex="1"
        CanContentScroll="True"
        HorizontalScrollBarVisibility="Hidden"
        VerticalScrollBarVisibility="Disabled">
        <l:TabPanel
          x:Name="TabPanel"
          IsItemsHost="True"
          SnapsToDevicePixels="True" />
      </ScrollViewer>

      <RepeatButton
        x:Name="PART_RepeatRight"
        Grid.Row="1"
        Grid.Column="4"
        Height="22"
        Margin="-1,-1,0,0"
        VerticalAlignment="Top"
        Panel.ZIndex="1"
        Style="{StaticResource RepeatButtonScrollRightOrDownStyle}"
        ToolTip="Scroll the Tab Items to the Right"
        Visibility="{Binding ElementName=TabPanel, Path=CanScrollRightOrDown, Converter={StaticResource boolConverter}}" />

      <!--  Content Panel  -->
      <Border
        x:Name="ContentPanel"
        Grid.Row="0"
        Grid.ColumnSpan="5"
        Background="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}"
        BorderBrush="{Binding Path=BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
        BorderThickness="{Binding Path=BorderThickness, RelativeSource={RelativeSource TemplatedParent}}"
        KeyboardNavigation.DirectionalNavigation="Contained"
        KeyboardNavigation.TabIndex="2"
        KeyboardNavigation.TabNavigation="Local">
        <ContentPresenter
          x:Name="PART_SelectedContentHost"
          Margin="{Binding Path=Padding, RelativeSource={RelativeSource TemplatedParent}}"
          Content="{Binding Path=SelectedContent, RelativeSource={RelativeSource TemplatedParent}}"
          ContentSource="SelectedContent"
          ContentTemplate="{Binding Path=ContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
          SnapsToDevicePixels="{Binding Path=SnapsToDevicePixels, RelativeSource={RelativeSource TemplatedParent}}" />
      </Border>
    </Grid>
  </ControlTemplate>

  <!--  Control Template for TabStripPlacement Left  -->
  <ControlTemplate x:Key="TabControlTabPlacementLeft" TargetType="{x:Type l:TabControl}">
    <Grid KeyboardNavigation.TabNavigation="Local" SnapsToDevicePixels="{Binding Path=SnapsToDevicePixels, RelativeSource={RelativeSource TemplatedParent}}">
      <Grid.RowDefinitions>
        <RowDefinition Height="20" />
        <RowDefinition Height="*" />
        <RowDefinition Height="20" />
      </Grid.RowDefinitions>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="*" />
      </Grid.ColumnDefinitions>

      <Border
        Grid.RowSpan="3"
        HorizontalAlignment="Stretch"
        VerticalAlignment="Stretch"
        Background="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}" />

      <Grid Grid.Row="0">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <!--  Repeat Buttons used for scrolling the TabItems into view  -->
        <RepeatButton
          x:Name="PART_RepeatLeft"
          Grid.Column="0"
          Margin="0,0,0,-1"
          Panel.ZIndex="1"
          Style="{StaticResource RepeatButtonScrollLeftOrUpStyle}"
          ToolTip="Scroll the Tab Items to the Top"
          Visibility="{Binding ElementName=TabPanel, Path=CanScrollLeftOrUp, Converter={StaticResource boolConverter}}" />

        <!--  Toggle button which displays a context menu with a menu item for each tab which can be used to select a tab that is not in view  -->
        <ToggleButton
          x:Name="PART_DropDown"
          Grid.Column="1"
          Width="20"
          Margin="-1,0,0,-1"
          Panel.ZIndex="1"
          Style="{StaticResource DropDownToggleButtonStyle}"
          ToolTip="Display all the tabs in a menu"
          Visibility="{Binding IsUsingItemsSource, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource _inverseBooleanConverter}}" />

        <Button
          x:Name="PART_NewTabButton"
          Grid.Column="2"
          Width="24"
          Margin="-1,0,0,-1"
          Panel.ZIndex="1"
          Style="{StaticResource NewTabButtonStyle}"
          ToolTip="Add a New tab"
          Visibility="{Binding Path=AllowAddNew, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolConverter}}">

          <Image Source="pack://application:,,,/Wpf.TabControl;component/Images/newtab.ico" />
        </Button>
      </Grid>

      <ScrollViewer
        x:Name="PART_ScrollViewer"
        Grid.Row="1"
        Panel.ZIndex="1"
        CanContentScroll="True"
        HorizontalScrollBarVisibility="Disabled"
        VerticalScrollBarVisibility="Hidden">
        <l:TabPanel x:Name="TabPanel" IsItemsHost="True" />
      </ScrollViewer>

      <RepeatButton
        x:Name="PART_RepeatRight"
        Grid.Row="2"
        Panel.ZIndex="1"
        Style="{StaticResource RepeatButtonScrollRightOrDownStyle}"
        ToolTip="Scroll the Tab Items to the Bottom"
        Visibility="{Binding ElementName=TabPanel, Path=CanScrollRightOrDown, Converter={StaticResource boolConverter}}" />

      <!--  Content Panel  -->
      <Border
        x:Name="ContentPanel"
        Grid.RowSpan="3"
        Grid.Column="1"
        Background="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}"
        BorderBrush="{Binding Path=BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
        BorderThickness="{Binding Path=BorderThickness, RelativeSource={RelativeSource TemplatedParent}}"
        KeyboardNavigation.DirectionalNavigation="Contained"
        KeyboardNavigation.TabIndex="2"
        KeyboardNavigation.TabNavigation="Local">
        <ContentPresenter
          x:Name="PART_SelectedContentHost"
          Margin="{Binding Path=Padding, RelativeSource={RelativeSource TemplatedParent}}"
          Content="{Binding Path=SelectedContent, RelativeSource={RelativeSource TemplatedParent}}"
          ContentSource="SelectedContent"
          ContentTemplate="{Binding Path=ContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
          SnapsToDevicePixels="{Binding Path=SnapsToDevicePixels, RelativeSource={RelativeSource TemplatedParent}}" />
      </Border>
    </Grid>
  </ControlTemplate>

  <!--  Control Template for TabStripPlacement Right  -->
  <ControlTemplate x:Key="TabControlTabPlacementRight" TargetType="{x:Type l:TabControl}">
    <Grid KeyboardNavigation.TabNavigation="Local" SnapsToDevicePixels="{Binding Path=SnapsToDevicePixels, RelativeSource={RelativeSource TemplatedParent}}">
      <Grid.RowDefinitions>
        <RowDefinition Height="20" />
        <RowDefinition Height="*" />
        <RowDefinition Height="20" />
      </Grid.RowDefinitions>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>

      <Border
        Grid.RowSpan="3"
        HorizontalAlignment="Stretch"
        VerticalAlignment="Stretch"
        Background="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}" />

      <Grid Grid.Row="0" Grid.Column="1">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <!--  Repeat Buttons used for scrolling the TabItems into view  -->
        <RepeatButton
          x:Name="PART_RepeatLeft"
          Grid.Column="2"
          Margin="0,0,0,-1"
          Panel.ZIndex="1"
          Style="{StaticResource RepeatButtonScrollLeftOrUpStyle}"
          ToolTip="Scroll the Tab Items to the Top"
          Visibility="{Binding ElementName=TabPanel, Path=CanScrollLeftOrUp, Converter={StaticResource boolConverter}}" />

        <!--  Toggle button which displays a context menu with a menu item for each tab which can be used to select a tab that is not in view  -->
        <ToggleButton
          x:Name="PART_DropDown"
          Grid.Column="1"
          Width="20"
          Margin="-1,0,0,-1"
          Panel.ZIndex="1"
          Style="{StaticResource DropDownToggleButtonStyle}"
          ToolTip="Display all the tabs in a menu"
          Visibility="{Binding IsUsingItemsSource, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource _inverseBooleanConverter}}" />

        <Button
          x:Name="PART_NewTabButton"
          Grid.Column="0"
          Width="24"
          Margin="-1,0,0,-1"
          Panel.ZIndex="1"
          Style="{StaticResource NewTabButtonStyle}"
          ToolTip="Add a New tab"
          Visibility="{Binding Path=AllowAddNew, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolConverter}}">

          <Image Source="pack://application:,,,/Wpf.TabControl;component/Images/newtab.ico" />
        </Button>
      </Grid>

      <ScrollViewer
        x:Name="PART_ScrollViewer"
        Grid.Row="1"
        Grid.Column="1"
        Panel.ZIndex="1"
        CanContentScroll="True"
        HorizontalScrollBarVisibility="Disabled"
        VerticalScrollBarVisibility="Hidden">
        <l:TabPanel x:Name="TabPanel" IsItemsHost="True" />
      </ScrollViewer>

      <RepeatButton
        x:Name="PART_RepeatRight"
        Grid.Row="2"
        Grid.Column="1"
        Panel.ZIndex="1"
        Style="{StaticResource RepeatButtonScrollRightOrDownStyle}"
        ToolTip="Scroll the Tab Items to the Bottom"
        Visibility="{Binding ElementName=TabPanel, Path=CanScrollRightOrDown, Converter={StaticResource boolConverter}}" />

      <!--  Content Panel  -->
      <Border
        x:Name="ContentPanel"
        Grid.RowSpan="3"
        Background="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}"
        BorderBrush="{Binding Path=BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
        BorderThickness="{Binding Path=BorderThickness, RelativeSource={RelativeSource TemplatedParent}}"
        KeyboardNavigation.DirectionalNavigation="Contained"
        KeyboardNavigation.TabIndex="2"
        KeyboardNavigation.TabNavigation="Local">
        <ContentPresenter
          x:Name="PART_SelectedContentHost"
          Margin="{Binding Path=Padding, RelativeSource={RelativeSource TemplatedParent}}"
          Content="{Binding Path=SelectedContent, RelativeSource={RelativeSource TemplatedParent}}"
          ContentSource="SelectedContent"
          ContentTemplate="{Binding Path=ContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
          SnapsToDevicePixels="{Binding Path=SnapsToDevicePixels, RelativeSource={RelativeSource TemplatedParent}}" />
      </Border>
    </Grid>
  </ControlTemplate>
  <!--  TabControl Style, defines the look of the TabControl  -->
  <Style TargetType="{x:Type l:TabControl}">
    <Setter Property="KeyboardNavigation.TabNavigation" Value="Cycle" />
    <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Cycle" />

    <Setter Property="Background" Value="White" />
    <Setter Property="BorderBrush" Value="{StaticResource TabBorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />

    <Setter Property="TabItemNormalBackground" Value="{StaticResource TabItemNormalBackground}" />
    <Setter Property="NotTabItemNormalBackground" Value="{StaticResource NotTabItemNormalBackground}" />
    <Setter Property="TabItemMouseOverBackground" Value="{StaticResource TabItemHoverBackground}" />
    <Setter Property="TabItemSelectedBackground" Value="{StaticResource TabItemSelectedBackground}" />

    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />

    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="UseLayoutRounding" Value="True" />
    <Setter Property="Template" Value="{StaticResource TabControlTabPlacementTop}" />
    <Style.Triggers>

      <Trigger Property="TabStripPlacement" Value="Bottom">
        <Setter Property="Template" Value="{StaticResource TabControlTabPlacementBottom}" />
      </Trigger>

      <Trigger Property="TabStripPlacement" Value="Left">
        <Setter Property="TabItemMinWidth" Value="0" />
        <Setter Property="TabItemMaxWidth" Value="150" />

        <Setter Property="TabItemMinHeight" Value="20" />
        <Setter Property="TabItemMaxHeight" Value="250" />
        <Setter Property="Template" Value="{StaticResource TabControlTabPlacementLeft}" />
      </Trigger>

      <Trigger Property="TabStripPlacement" Value="Right">
        <Setter Property="TabItemMinWidth" Value="0" />
        <Setter Property="TabItemMaxWidth" Value="150" />

        <Setter Property="TabItemMinHeight" Value="20" />
        <Setter Property="TabItemMaxHeight" Value="250" />
        <Setter Property="Template" Value="{StaticResource TabControlTabPlacementRight}" />
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>
