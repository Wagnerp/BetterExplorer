<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:ribbon="urn:fluent-ribbon"
  xmlns:wpfuicommon="clr-namespace:WPFUI.Common;assembly=WPFUI"
  xmlns:local="clr-namespace:BetterExplorerControls"
  xmlns:converters="clr-namespace:WPFUI.Converters;assembly=WPFUI">



  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/BetterExplorerControls;Component/Themes/AcrylicPopup.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <FontFamily x:Key="ColoredGlyphs" >pack://application:,,,/BetterExplorerControls;Component/Assets/#Untitled1</FontFamily>
  <converters:IconToStringConverter x:Key="IconToStringConverter" />

  <Style TargetType="{x:Type local:FontIcon}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:FontIcon}">
          <Grid Background="Transparent">
            <TextBlock Foreground="#DEDDDB" FontFamily="{StaticResource ColoredGlyphs}" Text="{TemplateBinding BaseIconGlyph}" FontSize="20"/>
            <TextBlock Foreground="#FF76B9ED" FontFamily="{StaticResource ColoredGlyphs}" Text="{TemplateBinding OverlayIconGlyph}" FontSize="20"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type local:AcrylicTooltip}">
    <!--<Setter Property="OverridesDefaultStyle" Value="True"/>-->
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:AcrylicTooltip}">
          <Grid Margin="8,4,8,4">
            <ContentControl Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5">
              <ContentControl.Foreground>
                <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}"/>
              </ContentControl.Foreground>
            </ContentControl>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type local:FontIconButton}">
    <Setter Property="ToolTipService.Placement" Value="Custom"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:FontIconButton}">
          <Grid Background="Transparent">
            <Border x:Name="PART_Border" CornerRadius="4">
              <Grid>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                  <TextBlock
                    x:Name="PART_SingleIcon"
                    Margin="8"
                    VerticalAlignment="Center"
                    FontFamily="{DynamicResource FluentSystemIcons}"
                    Foreground="#DEDDDB"
                    FontSize="20"
                    Text="{TemplateBinding Glyph, Converter={StaticResource IconToStringConverter}}" />
                  <local:FontIcon x:Name="PART_MultyIcon" Margin="8" BaseIconGlyph="{TemplateBinding BaseIconGlyph}" OverlayIconGlyph="{TemplateBinding OverlayIconGlyph}" Visibility="Collapsed"/>
                  <TextBlock x:Name="PART_Header" Text="{TemplateBinding Header}" VerticalAlignment="Center" Margin="0,-2,10,0">
                    <TextBlock.Foreground>
                      <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}"/>
                    </TextBlock.Foreground>
                  </TextBlock>
                </StackPanel>
                
              </Grid>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsCheckButton" Value="True">
              <Setter TargetName="PART_Border" Property="Background">
                <Setter.Value>
                  <SolidColorBrush Opacity="0.6" Color="#695D5B5B" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
              <Setter TargetName="PART_Border" Property="Background">
                <Setter.Value>
                  <SolidColorBrush Opacity="0.9" Color="{DynamicResource SystemAccentColor}" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="Glyph" Value="Empty">
              <Setter TargetName="PART_MultyIcon" Property="Visibility" Value="Visible" />
              <Setter TargetName="PART_SingleIcon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="Header" Value="">
              <Setter TargetName="PART_Header" Property="Margin" Value="0" />
            </Trigger>
            <Trigger Property="Header" Value="{x:Null}">
              <Setter TargetName="PART_Header" Property="Margin" Value="0" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsChecked" Value="False"/>
                <Condition Property="IsMouseOver" Value="True"/>
              </MultiTrigger.Conditions>
              <MultiTrigger.Setters>
                <Setter TargetName="PART_Border" Property="Background" Value="#695D5B5B" />
              </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsChecked" Value="True"/>
                <Condition Property="IsMouseOver" Value="True"/>
              </MultiTrigger.Conditions>
              <MultiTrigger.Setters>
                <Setter TargetName="PART_Border" Property="Background">
                  <Setter.Value>
                    <SolidColorBrush Opacity="0.6" Color="{DynamicResource SystemAccentColor}" />
                  </Setter.Value>
                </Setter>
              </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsChecked" Value="False"/>
                <Condition Property="IsPressed" Value="True"/>
              </MultiTrigger.Conditions>
              <MultiTrigger.Setters>
                <Setter TargetName="PART_Border" Property="Background" Value="#694E4C4C" />
              </MultiTrigger.Setters>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <!--<Setter Property="ToolTip">
      <Setter.Value>
        <local:AcrylicT>
          <TextBlock FontWeight="Bold">TEXT HERE</TextBlock>
        </local:AcrylicT>
      </Setter.Value>
    </Setter>-->
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property = "Opacity" Value="0.4"/>
      </Trigger>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="MouseIsOver" Value="True" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <!--<Style BasedOn="{StaticResource {x:Type ribbon:ContextMenu}}" TargetType="{x:Type local:ListviewColumnDropDown}">
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Grid.IsSharedSizeScope" Value="true" />
    <Setter Property="HasDropShadow" Value="False" />
    <Setter Property="ItemContainerStyle">
      <Setter.Value>
        <Style TargetType="{x:Type ribbon:MenuItem}">
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type ribbon:MenuItem}">
                <Grid HorizontalAlignment="Stretch">
                  <ContentPresenter
                    x:Name="content"
                    Margin="0"
                    HorizontalAlignment="Stretch"
                    ContentSource="Header" />
                </Grid>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </Setter.Value>
    </Setter>

  </Style>-->
  <!--<Style TargetType="{x:Type local:AcrylicContextMenu}">
    <Setter Property="WindowStyle" Value="None"/>
    <Setter Property="SizeToContent" Value="Height"></Setter>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Window}">
          <Grid Background="{TemplateBinding Background}">
            <Grid.RowDefinitions>
              <RowDefinition Height="50"/>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Border Grid.Row="0" BorderThickness="0,0,0,0.5" BorderBrush="#C47D7F7D"/>
            <MenuItem Header="TestMenu" Background="Transparent" Margin="5">
            </MenuItem>
            <ContentPresenter Grid.Row="1" Height="200"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>-->
  <Style TargetType="{x:Type local:AcrylicContextMenu}">
    <Setter Property="SnapsToDevicePixels"
            Value="True" />
    <Setter Property="Grid.IsSharedSizeScope"
            Value="true" />
    <Setter Property="Focusable"
            Value="True" />
    <Setter Property="MaxHeight" Value="485"></Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:AcrylicContextMenu}">
          <ScrollViewer Padding="0">
          <Border x:Name="Border" Margin="8,8,0,8"
                  Background="#02000000"
                  BorderThickness="0">
            <Border.BorderBrush>
              <SolidColorBrush Color="Black" />
            </Border.BorderBrush>
            <StackPanel IsItemsHost="True" Margin="0,0,0,0"
                        KeyboardNavigation.DirectionalNavigation="Cycle" />
          </Border>
          </ScrollViewer>
          <ControlTemplate.Triggers>
            <Trigger Property="HasDropShadow"
                     Value="true">
              <Setter TargetName="Border"
                      Property="Padding"
                      Value="0,3,0,3" />
              <Setter TargetName="Border"
                      Property="CornerRadius"
                      Value="4" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>
