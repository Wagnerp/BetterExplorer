<!--
    This Source Code Form is subject to the terms of the MIT License.
    If a copy of the MIT was not distributed with this file, You can obtain one at https://opensource.org/licenses/MIT.
    Copyright (C) Leszek Pomianowski and WPF UI Contributors.
    All Rights Reserved.
-->

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:WPFUI.Controls"
                    xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=PresentationFramework">

  <!--
        SingleBorderWindow preserves the animations and scaling properly.
        By default, the navigation buttons will be hidden by the background.
        If we use Mica, we hide them manually.
    -->
  <Style x:Key="WPFUiWindow" BasedOn="{StaticResource {x:Type Window}}" TargetType="{x:Type controls:UIWindow}">
    <Setter Property="Height" Value="600" />
    <Setter Property="MinHeight" Value="50" />
    <Setter Property="Width" Value="1100" />
    <Setter Property="MinWidth" Value="100" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Background">
      <Setter.Value>
        <SolidColorBrush Color="{DynamicResource ApplicationBackgroundColor}" />
      </Setter.Value>
    </Setter>
    <Setter Property="Foreground">
      <Setter.Value>
        <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}" />
      </Setter.Value>
    </Setter>
    <Setter Property="FontSize" Value="13" />
    <Setter Property="TextElement.FontWeight" Value="Regular" />
    <Setter Property="WindowStyle" Value="SingleBorderWindow" />
    <Setter Property="AllowsTransparency" Value="False" />
    <Setter Property="ResizeMode" Value="CanResize" />
    <!--  The Display option casues a large aliasing effect  -->
    <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
    <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <!--<Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                
                    CaptionHeight removes the white block at the top of the application window.
                    GlassFrameThickness must be at least -1, otherwise the transparency for Mica will not work.
                
                <WindowChrome
                    CaptionHeight="{x:Static SystemParameters.CaptionHeight}"
                    CornerRadius="0"
                    GlassFrameThickness="-1"
                    NonClientFrameEdges="None"
                    ResizeBorderThickness="8"
                    UseAeroCaptionButtons="False" />
            </Setter.Value>
        </Setter>-->
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type controls:UIWindow}">
          <Grid x:Name="pnlMain" Background="{TemplateBinding Background}">
            <Grid.RowDefinitions>
              <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <AdornerDecorator>
              <ContentPresenter x:Name="ContentPresenter" Margin="0" />
            </AdornerDecorator>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="WindowState" Value="Normal">
              <Setter TargetName="ContentPresenter" Property="Margin" Value="0" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="WindowState" Value="Normal">
        <Setter Property="ResizeMode" Value="CanResize" />
      </Trigger>
      <Trigger Property="WindowState" Value="Maximized">
        <!--<Setter Property="ResizeMode" Value="NoResize" />
                <Setter Property="BorderThickness" Value="6,6,6,0" />
                <Setter Property="Topmost" Value="False" />-->
        <!-- <Setter Property="MaxHeight" Value="{Binding Source={x:Static SystemParameters.WorkArea}, Path=PrimaryScreenHeight}" /> -->
        <!-- <Setter Property="MaxWidth" Value="{Binding Source={x:Static SystemParameters.WorkArea}, Path=Width}" /> -->
      </Trigger>
      <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(componentModel:DesignerProperties.IsInDesignMode)}" Value="True">
        <Setter Property="WindowStyle" Value="None"/>
      </DataTrigger>
    </Style.Triggers>
  </Style>

  <Style BasedOn="{StaticResource WPFUiWindow}" TargetType="{x:Type controls:UIWindow}" />
</ResourceDictionary>